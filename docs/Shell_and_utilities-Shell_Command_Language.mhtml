From: <Saved by Blink>
Subject: Shell Command Language
Date: Sat, 4 Dec 2015 22:01:59 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_E46C_534BFE78.20165F69"

------=_NextPart_000_E46C_534BFE78.20165F69
Content-Type: text/html
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18

<!-- Copyright 2001-2013 IEEE and The Open Group, All Rights Reserved --><!=
DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html hola_ext=
_inject=3D"disabled"><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3Dwindows-1252">
<meta name=3D"generator" content=3D"HTML Tidy, see www.w3.org">

<link type=3D"text/css" rel=3D"stylesheet" href=3D"http://pubs.opengroup.or=
g/onlinepubs/9699919799/utilities/style.css"><!-- Generated by The Open Gro=
up's rhtm tool v1.2.4 -->
<!-- Copyright (c) 2001-2013 The Open Group, All Rights Reserved -->
<title>Shell Command Language</title>
</head>
<body bgcolor=3D"white">
<div class=3D"NAVHEADER">
<table class=3D"nav" summary=3D"Header navigation table" width=3D"100%" bor=
der=3D"0" cellpadding=3D"0" cellspacing=3D"0">
<tbody><tr class=3D"nav">
<td class=3D"nav" width=3D"15%" align=3D"left" valign=3D"bottom"><a href=3D=
"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap01.html" =
accesskey=3D"P">&lt;&lt;&lt; Previous</a></td>
<td class=3D"nav" width=3D"70%" align=3D"center" valign=3D"bottom"><a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/contents.html=
">Home</a></td>
<td class=3D"nav" width=3D"15%" align=3D"right" valign=3D"bottom"><a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap03.htm=
l" accesskey=3D"N">Next &gt;&gt;&gt;</a></td>
</tr>
</tbody></table>

<hr align=3D"LEFT" width=3D"100%">
</div>



<basefont size=3D"3">=20

<center><font size=3D"2">The Open Group Base Specifications Issue 7<br>
IEEE Std 1003.1, 2013 Edition<br>
Copyright =A9 2001-2013 The IEEE and The Open Group</font></center>

<hr size=3D"2" noshade=3D"">
<a name=3D"top"></a>=20

<h2><a name=3D"tag_18">  2.  </a>Shell Command Language</h2>

<p>This chapter contains the definition of the Shell Command Language.</p>

<h3><a name=3D"tag_18_01">   2.1  </a>Shell Introduction</h3>

<p>The shell is a command language interpreter. This chapter describes the =
syntax of that command language as it is used by the <a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/utilities/sh.html"><i>sh</i></a> utili=
ty and the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/funct=
ions/system.html"><i>system</i>()</a> and <a href=3D"http://pubs.opengroup.=
org/onlinepubs/9699919799/functions/popen.html"><i>popen</i>()</a> function=
s defined in the System Interfaces volume of POSIX.1-2008.</p>

<p>The shell operates according to the following general overview of operat=
ions. The specific details are included in the cited
sections of this chapter.</p>

<ol>
<li>
<p>The shell reads its input from a file (see <a href=3D"http://pubs.opengr=
oup.org/onlinepubs/9699919799/utilities/sh.html"><i>sh</i></a>), from the <=
b>-c</b> option or from the
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/functions/system=
.html"><i>system</i>()</a> and <a href=3D"http://pubs.opengroup.org/onlinep=
ubs/9699919799/functions/popen.html"><i>popen</i>()</a> functions defined
in the System Interfaces volume of POSIX.1-2008. If the first line of a fil=
e of shell commands starts with the characters
<tt>"#!"</tt>, the results are unspecified.</p>
</li>

<li>
<p>The shell breaks the input into tokens: words and operators; see <a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.htm=
l#tag_18_03">Token Recognition</a>.</p>
</li>

<li>
<p>The shell parses the input into simple commands (see <a href=3D"http://p=
ubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_=
01">Simple Commands</a>) and compound commands (see <a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_04">=
Compound Commands</a>).</p>
</li>

<li>
<p>The shell performs various expansions (separately) on different parts of=
 each command, resulting in a list of pathnames and
fields to be treated as a command and arguments; see <a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/functions/wordexp.html#"><i>wordexp</i=
></a>.</p>
</li>

<li>
<p>The shell performs redirection (see <a href=3D"http://pubs.opengroup.org=
/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_07">Redirection</a>)=
 and removes redirection operators and their operands
from the parameter list.</p>
</li>

<li>
<p>The shell executes a function (see <a href=3D"http://pubs.opengroup.org/=
onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_05">Function Defin=
ition Command</a>), built-in (see <a href=3D"http://pubs.opengroup.org/onli=
nepubs/9699919799/utilities/V3_chap02.html#tag_18_14">Special Built-In Util=
ities</a>), executable file, or script, giving the names of the arguments a=
s positional
parameters numbered 1 to <i>n</i>, and the name of the command (or in the c=
ase of a function within a script, the name of the
script) as the positional parameter numbered 0 (see <a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_01_0=
1">Command Search and Execution</a>).</p>
</li>

<li>
<p>The shell optionally waits for the command to complete and collects the =
exit status (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799=
/utilities/V3_chap02.html#tag_18_08_02">Exit Status for
Commands</a>).</p>
</li>
</ol>

<h3><a name=3D"tag_18_02">   2.2  </a>Quoting</h3>

<p>Quoting is used to remove the special meaning of certain characters or w=
ords to the shell. Quoting can be used to preserve the
literal meaning of the special characters in the next paragraph, prevent re=
served words from being recognized as such, and prevent
parameter expansion and command substitution within here-document processin=
g (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#tag_18_07_04">Here-Document</a>).</p>

<p>The application shall quote the following characters if they are to repr=
esent themselves:</p>

<pre><tt>|  &amp;  ;  &lt;  &gt;  (  )  $  `  \  "  '  &lt;space&gt;  &lt;t=
ab&gt;  &lt;newline&gt;
</tt>
</pre>

<p>and the following may need to be quoted under certain circumstances. Tha=
t is, these characters may be special depending on
conditions described elsewhere in this volume of POSIX.1-2008:</p>

<pre><tt>*   ?   [   #   =98   =3D   %
</tt>
</pre>

<p>The various quoting mechanisms are the escape character, single-quotes, =
and double-quotes. The here-document represents another
form of quoting; see <a href=3D"http://pubs.opengroup.org/onlinepubs/969991=
9799/utilities/V3_chap02.html#tag_18_07_04">Here-Document</a>.</p>

<h4><a name=3D"tag_18_02_01">  2.2.1  </a>Escape Character (Backslash)</h4>

<p>A &lt;backslash&gt; that is not quoted shall preserve the literal value =
of the following character, with the exception of a
&lt;newline&gt;. If a &lt;newline&gt; follows the &lt;backslash&gt;, the sh=
ell shall interpret this as line continuation. The
&lt;backslash&gt; and &lt;newline&gt; shall be removed before splitting the=
 input into tokens. Since the escaped &lt;newline&gt; is
removed entirely from the input and is not replaced by any white space, it =
cannot serve as a token separator.</p>

<h4><a name=3D"tag_18_02_02">  2.2.2  </a>Single-Quotes</h4>

<p>Enclosing characters in single-quotes ( <tt>''</tt> ) shall preserve the=
 literal value of each character within the
single-quotes. A single-quote cannot occur within single-quotes.</p>

<h4><a name=3D"tag_18_02_03">  2.2.3  </a>Double-Quotes</h4>

<p>Enclosing characters in double-quotes ( <tt>""</tt> ) shall preserve the=
 literal value of all characters within the
double-quotes, with the exception of the characters backquote, &lt;dollar-s=
ign&gt;, and &lt;backslash&gt;, as follows:</p>

<dl compact=3D"">
<dt><tt>$</tt></dt>

<dd>The &lt;dollar-sign&gt; shall retain its special meaning introducing pa=
rameter expansion (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699=
919799/utilities/V3_chap02.html#tag_18_06_02">Parameter
Expansion</a>), a form of command substitution (see <a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_03">=
Command Substitution</a>), and arithmetic expansion
(see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V=
3_chap02.html#tag_18_06_04">Arithmetic Expansion</a>).=20

<p>The input characters within the quoted string that are also enclosed bet=
ween <tt>"$("</tt> and the matching <tt>')'</tt> shall
not be affected by the double-quotes, but rather shall define that command =
whose output replaces the <tt>"$(...)"</tt> when the
word is expanded. The tokenizing rules in <a href=3D"http://pubs.opengroup.=
org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_03">Token Recogni=
tion</a>, not including the alias substitutions in <a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_03_01">A=
lias Substitution</a>, shall be applied recursively to find the matching <t=
t>')'</tt>.</p>

<p>Within the string of characters from an enclosed <tt>"${"</tt> to the ma=
tching <tt>'}'</tt>, an even number of unescaped
double-quotes or single-quotes, if any, shall occur. A preceding &lt;backsl=
ash&gt; character shall be used to escape a literal
<tt>'{'</tt> or <tt>'}'</tt>. The rule in <a href=3D"http://pubs.opengroup.=
org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02">Parameter =
Expansion</a> shall be used to determine the matching
<tt>'}'</tt>.</p>
</dd>

<dt><tt>`</tt></dt>

<dd>The backquote shall retain its special meaning introducing the other fo=
rm of command substitution (see <a href=3D"http://pubs.opengroup.org/online=
pubs/9699919799/utilities/V3_chap02.html#tag_18_06_03">Command Substitution=
</a>). The portion of the quoted string from the initial backquote and the =
characters up to
the next backquote that is not preceded by a &lt;backslash&gt;, having esca=
pe characters removed, defines that command whose output
replaces <tt>"`...`"</tt> when the word is expanded. Either of the followin=
g cases produces undefined results:=20

<ul>
<li>
<p>A single-quoted or double-quoted string that begins, but does not end, w=
ithin the <tt>"`...`"</tt> sequence</p>
</li>

<li>
<p>A <tt>"`...`"</tt> sequence that begins, but does not end, within the sa=
me double-quoted string</p>
</li>
</ul>
</dd>

<dt><tt>\</tt></dt>

<dd>The &lt;backslash&gt; shall retain its special meaning as an escape cha=
racter (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/util=
ities/V3_chap02.html#tag_18_02_01">Escape Character
(Backslash)</a>) only when followed by one of the following characters when=
 considered special:=20

<pre><tt>$   `   "   \   &lt;newline&gt;
</tt>
</pre>
</dd>
</dl>

<p>The application shall ensure that a double-quote is preceded by a &lt;ba=
ckslash&gt; to be included within double-quotes. The
parameter <tt>'@'</tt> has special meaning inside double-quotes and is desc=
ribed in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utiliti=
es/V3_chap02.html#tag_18_05_02">Special Parameters</a>
.</p>

<h3><a name=3D"tag_18_03">   2.3  </a>Token Recognition</h3>

<p>The shell shall read its input in terms of lines from a file, from a ter=
minal in the case of an interactive shell, or from a
string in the case of <a href=3D"http://pubs.opengroup.org/onlinepubs/96999=
19799/utilities/sh.html"><i>sh</i></a> <b>-c</b> or <a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/functions/system.html"><i>system</i>()<=
/a>. The input lines can be of unlimited length. These lines shall be parse=
d using two
major modes: ordinary token recognition and processing of here-documents.</=
p>

<p>When an <b>io_here</b> token has been recognized by the grammar (see <a =
href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02=
.html#tag_18_10">Shell Grammar</a>), one or more of
the subsequent lines immediately following the next <b>NEWLINE</b> token fo=
rm the body of one or more here-documents and shall be
parsed according to the rules of <a href=3D"http://pubs.opengroup.org/onlin=
epubs/9699919799/utilities/V3_chap02.html#tag_18_07_04">Here-Document</a>.<=
/p>

<p>When it is not processing an <b>io_here</b>, the shell shall break its i=
nput into tokens by applying the first applicable rule
below to the next character in its input. The token shall be from the curre=
nt position in the input until a token is delimited
according to one of the rules below; the characters forming the token are e=
xactly those in the input, including any quoting
characters. If it is indicated that a token is delimited, and no characters=
 have been included in a token, processing shall
continue until an actual token is delimited.</p>

<ol>
<li>
<p>If the end of input is recognized, the current token shall be delimited.=
 If there is no current token, the end-of-input
indicator shall be returned as the token.</p>
</li>

<li>
<p>If the previous character was used as part of an operator and the curren=
t character is not quoted and can be used with the
current characters to form an operator, it shall be used as part of that (o=
perator) token.</p>
</li>

<li>
<p>If the previous character was used as part of an operator and the curren=
t character cannot be used with the current characters
to form an operator, the operator containing the previous character shall b=
e delimited.</p>
</li>

<li>
<p>If the current character is &lt;backslash&gt;, single-quote, or double-q=
uote and it is not quoted, it shall affect quoting for
subsequent characters up to the end of the quoted text. The rules for quoti=
ng are as described in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699=
919799/utilities/V3_chap02.html#tag_18_02">Quoting</a>
. During token recognition no substitutions shall be actually performed, an=
d the result token shall contain exactly the characters
that appear in the input (except for &lt;newline&gt; joining), unmodified, =
including any embedded or enclosing quotes or
substitution operators, between the &lt;quotation-mark&gt; and the end of t=
he quoted text. The token shall not be delimited by the
end of the quoted field.</p>
</li>

<li>
<p>If the current character is an unquoted <tt>'$'</tt> or <tt>'`'</tt>, th=
e shell shall identify the start of any candidates for
parameter expansion (<a href=3D"http://pubs.opengroup.org/onlinepubs/969991=
9799/utilities/V3_chap02.html#tag_18_06_02">Parameter Expansion</a>), comma=
nd substitution (<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799=
/utilities/V3_chap02.html#tag_18_06_03">Command
Substitution</a>), or arithmetic expansion (<a href=3D"http://pubs.opengrou=
p.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_04">Arithmet=
ic Expansion</a>) from their introductory unquoted
character sequences: <tt>'$'</tt> or <tt>"${"</tt>, <tt>"$("</tt> or <tt>'`=
'</tt>, and <tt>"$(("</tt>, respectively. The shell
shall read sufficient input to determine the end of the unit to be expanded=
 (as explained in the cited sections). While processing
the characters, if instances of expansions or quoting are found nested with=
in the substitution, the shell shall recursively process
them in the manner specified for the construct that is found. The character=
s found from the beginning of the substitution to its
end, allowing for any recursion necessary to recognize embedded constructs,=
 shall be included unmodified in the result token,
including any embedded or enclosing substitution operators or quotes. The t=
oken shall not be delimited by the end of the
substitution.</p>
</li>

<li>
<p>If the current character is not quoted and can be used as the first char=
acter of a new operator, the current token (if any)
shall be delimited. The current character shall be used as the beginning of=
 the next (operator) token.</p>
</li>

<li>
<p>If the current character is an unquoted &lt;newline&gt;, the current tok=
en shall be delimited.</p>
</li>

<li>
<p>If the current character is an unquoted &lt;blank&gt;, any token contain=
ing the previous character is delimited and the current
character shall be discarded.</p>
</li>

<li>
<p>If the previous character was part of a word, the current character shal=
l be appended to that word.</p>
</li>

<li>
<p>If the current character is a <tt>'#'</tt>, it and all subsequent charac=
ters up to, but excluding, the next &lt;newline&gt;
shall be discarded as a comment. The &lt;newline&gt; that ends the line is =
not considered part of the comment.</p>
</li>

<li>
<p>The current character is used as the start of a new word.</p>
</li>
</ol>

<p>Once a token is delimited, it is categorized as required by the grammar =
in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_10">Shell Grammar</a>.</p>

<h4><a name=3D"tag_18_03_01">  2.3.1  </a>Alias Substitution</h4>

<p>After a token has been delimited, but before applying the grammatical ru=
les in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#tag_18_10">Shell Grammar</a>, a
resulting word that is identified to be the command name word of a simple c=
ommand shall be examined to determine whether it is an
unquoted, valid alias name. However, reserved words in correct grammatical =
context shall not be candidates for alias substitution.
A valid alias name (see XBD <a href=3D"http://pubs.opengroup.org/onlinepubs=
/9699919799/basedefs/V1_chap03.html#tag_03_10"><i>Alias Name</i></a>) shall=
 be one that has been
defined by the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/u=
tilities/alias.html"><i>alias</i></a> utility and not subsequently undefine=
d using <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilitie=
s/unalias.html"><i>unalias</i></a>. Implementations also may provide predef=
ined valid aliases that are in effect when
the shell is invoked. To prevent infinite loops in recursive aliasing, if t=
he shell is not currently processing an alias of the
same name, the word shall be replaced by the value of the alias; otherwise,=
 it shall not be replaced.</p>

<p>If the value of the alias replacing the word ends in a &lt;blank&gt;, th=
e shell shall check the next command word for alias
substitution; this process shall continue until a word is found that is not=
 a valid alias or an alias value does not end in a
&lt;blank&gt;.</p>

<p>When used as specified by this volume of POSIX.1-2008, alias definitions=
 shall not be inherited by separate invocations of the
shell or by the utility execution environments invoked by the shell; see <a=
 href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap0=
2.html#tag_18_12">Shell Execution Environment</a>.</p>

<h3><a name=3D"tag_18_04">   2.4  </a>Reserved Words</h3>

<p>Reserved words are words that have special meaning to the shell; see <a =
href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02=
.html#tag_18_09">Shell Commands</a>. The following
words shall be recognized as reserved words:</p>

<table cellpadding=3D"3">
<tbody><tr class=3D"nav" valign=3D"top">
<td align=3D"left">
<p class=3D"tent"><b><br>
!<br>
 {<br>
 }<br>
 case<br>
</b></p>
</td>
<td align=3D"left">
<p class=3D"tent"><b><br>
do<br>
 done<br>
 elif<br>
 else<br>
</b></p>
</td>
<td align=3D"left">
<p class=3D"tent"><b><br>
esac<br>
 fi<br>
 for<br>
 if<br>
</b></p>
</td>
<td align=3D"left">
<p class=3D"tent"><b><br>
in<br>
 then<br>
 until<br>
 while<br>
</b></p>
</td>
</tr>
</tbody></table>

<p>This recognition shall only occur when none of the characters is quoted =
and when the word is used as:</p>

<ul>
<li>
<p>The first word of a command</p>
</li>

<li>
<p>The first word following one of the reserved words other than <b>case</b=
>, <b>for</b>, or <b>in</b></p>
</li>

<li>
<p>The third word in a <b>case</b> command (only <b>in</b> is valid in this=
 case)</p>
</li>

<li>
<p>The third word in a <b>for</b> command (only <b>in</b> and <b>do</b> are=
 valid in this case)</p>
</li>
</ul>

<p>See the grammar in <a href=3D"http://pubs.opengroup.org/onlinepubs/96999=
19799/utilities/V3_chap02.html#tag_18_10">Shell Grammar</a>.</p>

<p>The following words may be recognized as reserved words on some implemen=
tations (when none of the characters are quoted),
causing unspecified results:</p>

<table cellpadding=3D"3">
<tbody><tr class=3D"nav" valign=3D"top">
<td align=3D"left">
<p class=3D"tent"><b>[[</b></p>
</td>
<td align=3D"left">
<p class=3D"tent"><b>]]</b></p>
</td>
<td align=3D"left">
<p class=3D"tent"><b>function</b></p>
</td>
<td align=3D"left">
<p class=3D"tent"><b>select</b></p>
</td>
</tr>
</tbody></table>

<p>Words that are the concatenation of a name and a &lt;colon&gt; ( <tt>':'=
</tt> ) are reserved; their use produces unspecified
results.</p>

<h3><a name=3D"tag_18_05">   2.5  </a>Parameters and Variables</h3>

<p>A parameter can be denoted by a name, a number, or one of the special ch=
aracters listed in <a href=3D"http://pubs.opengroup.org/onlinepubs/96999197=
99/utilities/V3_chap02.html#tag_18_05_02">Special
Parameters</a>. A variable is a parameter denoted by a name.</p>

<p>A parameter is set if it has an assigned value (null is a valid value). =
Once a variable is set, it can only be unset by using
the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3=
_chap02.html#unset"><i>unset</i></a> special built-in command.</p>

<h4><a name=3D"tag_18_05_01">  2.5.1  </a>Positional Parameters</h4>

<p>A positional parameter is a parameter denoted by the decimal value repre=
sented by one or more digits, other than the single
digit 0. The digits denoting the positional parameters shall always be inte=
rpreted as a decimal value, even if there is a leading
zero. When a positional parameter with more than one digit is specified, th=
e application shall enclose the digits in braces (see <a href=3D"http://pub=
s.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02=
">Parameter Expansion</a>). Positional parameters are initially assigned wh=
en the shell is invoked (see <a href=3D"http://pubs.opengroup.org/onlinepub=
s/9699919799/utilities/sh.html"><i>sh</i></a>), temporarily replaced when a=
 shell function is invoked (see <a href=3D"http://pubs.opengroup.org/online=
pubs/9699919799/utilities/V3_chap02.html#tag_18_09_05">Function Definition =
Command</a>), and can be reassigned with the <a href=3D"http://pubs.opengro=
up.org/onlinepubs/9699919799/utilities/V3_chap02.html#set"><i>set</i></a> s=
pecial built-in
command.</p>

<h4><a name=3D"tag_18_05_02">  2.5.2  </a>Special Parameters</h4>

<p>Listed below are the special parameters and the values to which they sha=
ll expand. Only the values of the special parameters are
listed; see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/func=
tions/wordexp.html#"><i>wordexp</i></a> for a detailed summary of all the s=
tages involved in expanding
words.</p>

<dl compact=3D"">
<dt><tt>@</tt></dt>

<dd>Expands to the positional parameters, starting from one. When the expan=
sion occurs within double-quotes, and where field
splitting (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/u=
tilities/V3_chap02.html#tag_18_06_05">Field Splitting</a>) is performed, ea=
ch positional parameter shall expand as a separate
field, with the provision that the expansion of the first parameter shall s=
till be joined with the beginning part of the original
word (assuming that the expanded parameter was embedded within a word), and=
 the expansion of the last parameter shall still be
joined with the last part of the original word. If there are no positional =
parameters, the expansion of <tt>'@'</tt> shall generate
zero fields, even when <tt>'@'</tt> is double-quoted.</dd>

<dt><tt>*</tt></dt>

<dd>Expands to the positional parameters, starting from one. When the expan=
sion occurs within a double-quoted string (see <a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_02_03">Doubl=
e-Quotes</a>), it shall expand to a single field with the value of each par=
ameter separated by the first
character of the <i>IFS</i> variable, or by a &lt;space&gt; if <i>IFS</i> i=
s unset. If <i>IFS</i> is set to a null string, this is
not equivalent to unsetting it; its first character does not exist, so the =
parameter values are concatenated.</dd>

<dt><tt>#</tt></dt>

<dd>Expands to the decimal number of positional parameters. The command nam=
e (parameter 0) shall not be counted in the number given
by <tt>'#'</tt> because it is a special parameter, not a positional paramet=
er.</dd>

<dt><tt>?</tt></dt>

<dd>Expands to the decimal exit status of the most recent pipeline (see <a =
href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02=
.html#tag_18_09_02">Pipelines</a>).</dd>

<dt><tt>-</tt></dt>

<dd>(Hyphen.) Expands to the current option flags (the single-letter option=
 names concatenated into a string) as specified on
invocation, by the <a href=3D"http://pubs.opengroup.org/onlinepubs/96999197=
99/utilities/V3_chap02.html#set"><i>set</i></a> special built-in command, o=
r implicitly by the shell.</dd>

<dt><tt>$</tt></dt>

<dd>Expands to the decimal process ID of the invoked shell. In a subshell (=
see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3=
_chap02.html#tag_18_12">Shell Execution Environment</a>
), <tt>'$'</tt> shall expand to the same value as that of the current shell=
.</dd>

<dt><tt>!</tt></dt>

<dd>Expands to the decimal process ID of the most recent background command=
 (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/=
V3_chap02.html#tag_18_09_03">Lists</a>) executed from
the current shell. (For example, background commands executed from subshell=
s do not affect the value of <tt>"$!"</tt> in the
current shell environment.) For a pipeline, the process ID is that of the l=
ast command in the pipeline.</dd>

<dt>0</dt>

<dd>(Zero.) Expands to the name of the shell or shell script. See <a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/sh.html#"><i>=
sh</i></a> for a detailed
description of how this name is derived.</dd>
</dl>

<p>See the description of the <i>IFS</i> variable in <a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_05_03"=
>Shell Variables</a>.</p>

<h4><a name=3D"tag_18_05_03">  2.5.3  </a>Shell Variables</h4>

<p>Variables shall be initialized from the environment (as defined by XBD <=
a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap0=
8.html#tag_08"><i>Environment Variables</i></a> and the <i>exec</i> functio=
n in the System Interfaces volume
of POSIX.1-2008) and can be given new values with variable assignment comma=
nds. If a variable is initialized from the environment,
it shall be marked for export immediately; see the <a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#export"><i>expo=
rt</i></a> special built-in. New variables can be
defined and initialized with variable assignments, with the <a href=3D"http=
://pubs.opengroup.org/onlinepubs/9699919799/utilities/read.html"><i>read</i=
></a> or <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utiliti=
es/getopts.html"><i>getopts</i></a> utilities, with the <i>name</i> paramet=
er in a <b>for</b> loop, with the ${
<i>name</i>=3D <i>word</i>} expansion, or with other mechanisms provided as=
 implementation extensions.<br>
</p>

<p>The following variables shall affect the execution of the shell:</p>

<dl compact=3D"">
<dt><i>ENV</i></dt>

<dd><sup>[<a href=3D"javascript:open_code('UP')">UP</a>]</sup> <img src=3D"=
http://pubs.opengroup.org/onlinepubs/9699919799/images/opt-start.gif" alt=
=3D"[Option Start]" border=3D"0">
The processing of the <i>ENV</i> shell variable shall be supported if the s=
ystem supports the User Portability Utilities option.
<img src=3D"http://pubs.opengroup.org/onlinepubs/9699919799/images/opt-end.=
gif" alt=3D"[Option End]" border=3D"0">=20

<p>This variable, when and only when an interactive shell is invoked, shall=
 be subjected to parameter expansion (see <a href=3D"http://pubs.opengroup.=
org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02">Parameter =
Expansion</a>) by the shell and the resulting value shall be used as a path=
name of a file containing
shell commands to execute in the current environment. The file need not be =
executable. If the expanded value of <i>ENV</i> is not
an absolute pathname, the results are unspecified. <i>ENV</i> shall be igno=
red if the user's real and effective user IDs or real
and effective group IDs are different.</p>
</dd>

<dt><i>HOME</i></dt>

<dd>The pathname of the user's home directory. The contents of <i>HOME</i> =
are used in tilde expansion (see <a href=3D"http://pubs.opengroup.org/onlin=
epubs/9699919799/utilities/V3_chap02.html#tag_18_06_01">Tilde Expansion</a>=
).</dd>

<dt><i>IFS</i></dt>

<dd>A string treated as a list of characters that is used for field splitti=
ng and to split lines into fields with the <a href=3D"http://pubs.opengroup=
.org/onlinepubs/9699919799/utilities/read.html"><i>read</i></a> command.=20

<p>If <i>IFS</i> is not set, it shall behave as normal for an unset variabl=
e, except that field splitting by the shell and line
splitting by the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799=
/utilities/read.html"><i>read</i></a> command shall be performed as if the =
value of <i>IFS</i> is
&lt;space&gt; &lt;tab&gt; &lt;newline&gt;; see <a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_05">Field=
 Splitting</a>.</p>

<p>Implementations may ignore the value of <i>IFS</i> in the environment, o=
r the absence of <i>IFS</i> from the environment, at the
time the shell is invoked, in which case the shell shall set <i>IFS</i> to =
&lt;space&gt; &lt;tab&gt; &lt;newline&gt; when it is
invoked.</p>
</dd>

<dt><i>LANG</i></dt>

<dd>Provide a default value for the internationalization variables that are=
 unset or null. (See XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/96=
99919799/basedefs/V1_chap08.html#tag_08_02"><i>Internationalization Variabl=
es</i></a> for the precedence of internationalization
variables used to determine the values of locale categories.)</dd>

<dt><i>LC_ALL</i></dt>

<dd>The value of this variable overrides the <i>LC_*</i> variables and <i>L=
ANG,</i> as described in XBD <a href=3D"http://pubs.opengroup.org/onlinepub=
s/9699919799/basedefs/V1_chap08.html#tag_08"><i>Environment Variables</i></=
a>.</dd>

<dt><i>LC_COLLATE</i></dt>

<dd>Determine the behavior of range expressions, equivalence classes, and m=
ulti-character collating elements within pattern
matching.</dd>

<dt><i>LC_CTYPE</i></dt>

<dd>Determine the interpretation of sequences of bytes of text data as char=
acters (for example, single-byte as opposed to
multi-byte characters), which characters are defined as letters (character =
class <b>alpha</b>) and &lt;blank&gt; characters
(character class <b>blank</b>), and the behavior of character classes withi=
n pattern matching. Changing the value of
<i>LC_CTYPE</i> after the shell has started shall not affect the lexical pr=
ocessing of shell commands in the current shell
execution environment or its subshells. Invoking a shell script or performi=
ng <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#exec"><i>exec</i></a> <a href=3D"http://pubs.opengroup.org/onli=
nepubs/9699919799/utilities/sh.html"><i>sh</i></a> subjects the new shell t=
o the changes in <i>LC_CTYPE.</i></dd>

<dt><i>LC_MESSAGES</i></dt>

<dd>Determine the language in which messages should be written.</dd>

<dt><i>LINENO</i></dt>

<dd>Set by the shell to a decimal number representing the current sequentia=
l line number (numbered starting with 1) within a script
or function before it executes each command. If the user unsets or resets <=
i>LINENO,</i> the variable may lose its special meaning
for the life of the shell. If the shell is not currently executing a script=
 or function, the value of <i>LINENO</i> is unspecified.
This volume of POSIX.1-2008 specifies the effects of the variable only for =
systems supporting the User Portability Utilities
option.</dd>

<dt><i>NLSPATH</i></dt>

<dd><sup>[<a href=3D"javascript:open_code('XSI')">XSI</a>]</sup> <img src=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/images/opt-start.gif" a=
lt=3D"[Option Start]" border=3D"0">
Determine the location of message catalogs for the processing of <i>LC_MESS=
AGES.</i> <img src=3D"http://pubs.opengroup.org/onlinepubs/9699919799/image=
s/opt-end.gif" alt=3D"[Option End]" border=3D"0"></dd>

<dt><i>PATH</i></dt>

<dd>A string formatted as described in XBD <a href=3D"http://pubs.opengroup=
.org/onlinepubs/9699919799/basedefs/V1_chap08.html#tag_08"><i>Environment V=
ariables</i></a>, used to
effect command interpretation; see <a href=3D"http://pubs.opengroup.org/onl=
inepubs/9699919799/utilities/V3_chap02.html#tag_18_09_01_01">Command Search=
 and Execution</a>.</dd>

<dt><i>PPID</i></dt>

<dd>Set by the shell to the decimal value of its parent process ID during i=
nitialization of the shell. In a subshell (see <a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_12">Shell Ex=
ecution Environment</a>), <i>PPID</i> shall be set to the same value as tha=
t of the parent of the current
shell. For example, <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919=
799/utilities/echo.html"><i>echo</i></a> $<i>PPID</i> and (<a href=3D"http:=
//pubs.opengroup.org/onlinepubs/9699919799/utilities/echo.html"><i>echo</i>=
</a> $<i>PPID)</i> would produce the same value. This volume of POSIX.1-200=
8 specifies the
effects of the variable only for systems supporting the User Portability Ut=
ilities option.</dd>

<dt><i>PS1</i></dt>

<dd>Each time an interactive shell is ready to read a command, the value of=
 this variable shall be subjected to parameter expansion
and written to standard error. The default value shall be <tt>"$&nbsp;"</tt=
>. For users who have specific additional
implementation-defined privileges, the default may be another, implementati=
on-defined value. The shell shall replace each instance
of the character <tt>'!'</tt> in <i>PS1</i> with the history file number of=
 the next command to be typed. Escaping the <tt>'!'</tt>
with another <tt>'!'</tt> (that is, <tt>"!!"</tt> ) shall place the literal=
 character <tt>'!'</tt> in the prompt. This volume of
POSIX.1-2008 specifies the effects of the variable only for systems support=
ing the User Portability Utilities option.</dd>

<dt><i>PS2</i></dt>

<dd>Each time the user enters a &lt;newline&gt; prior to completing a comma=
nd line in an interactive shell, the value of this
variable shall be subjected to parameter expansion and written to standard =
error. The default value is <tt>"&gt;&nbsp;"</tt>. This
volume of POSIX.1-2008 specifies the effects of the variable only for syste=
ms supporting the User Portability Utilities
option.</dd>

<dt><i>PS4</i></dt>

<dd>When an execution trace (<a href=3D"http://pubs.opengroup.org/onlinepub=
s/9699919799/utilities/V3_chap02.html#set"><i>set</i></a> <b>-x</b>) is bei=
ng performed in an interactive shell, before each line
in the execution trace, the value of this variable shall be subjected to pa=
rameter expansion and written to standard error. The
default value is <tt>"+&nbsp;"</tt>. This volume of POSIX.1-2008 specifies =
the effects of the variable only for systems supporting
the User Portability Utilities option.</dd>

<dt><i>PWD</i></dt>

<dd>Set by the shell and by the <a href=3D"http://pubs.opengroup.org/online=
pubs/9699919799/utilities/cd.html"><i>cd</i></a> utility. In the shell the =
value shall be initialized
from the environment as follows. If a value for <i>PWD</i> is passed to the=
 shell in the environment when it is executed, the value
is an absolute pathname of the current working directory that is no longer =
than {PATH_MAX} bytes including the terminating null
byte, and the value does not contain any components that are dot or dot-dot=
, then the shell shall set <i>PWD</i> to the value from
the environment. Otherwise, if a value for <i>PWD</i> is passed to the shel=
l in the environment when it is executed, the value is
an absolute pathname of the current working directory, and the value does n=
ot contain any components that are dot or dot-dot, then
it is unspecified whether the shell sets <i>PWD</i> to the value from the e=
nvironment or sets <i>PWD</i> to the pathname that would
be output by <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/uti=
lities/pwd.html"><i>pwd</i></a> <b>-P</b>. Otherwise, the <a href=3D"http:/=
/pubs.opengroup.org/onlinepubs/9699919799/utilities/sh.html"><i>sh</i></a>
utility sets <i>PWD</i> to the pathname that would be output by <a href=3D"=
http://pubs.opengroup.org/onlinepubs/9699919799/utilities/pwd.html"><i>pwd<=
/i></a> <b>-P</b>. In cases
where <i>PWD</i> is set to the value from the environment, the value can co=
ntain components that refer to files of type symbolic
link. In cases where <i>PWD</i> is set to the pathname that would be output=
 by <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/pw=
d.html"><i>pwd</i></a>
<b>-P</b>, if there is insufficient permission on the current working direc=
tory, or on any parent of that directory, to determine
what that pathname would be, the value of <i>PWD</i> is unspecified. Assign=
ments to this variable may be ignored. If an application
sets or unsets the value of <i>PWD,</i> the behaviors of the <a href=3D"htt=
p://pubs.opengroup.org/onlinepubs/9699919799/utilities/cd.html"><i>cd</i></=
a> and <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/pwd.html"><i>pwd</i></a> utilities are unspecified.</dd>
</dl>

<h3><a name=3D"tag_18_06">   2.6  </a>Word Expansions</h3>

<p>This section describes the various expansions that are performed on word=
s. Not all expansions are performed on every word, as
explained in the following sections.</p>

<p>Tilde expansions, parameter expansions, command substitutions, arithmeti=
c expansions, and quote removals that occur within a
single word expand to a single field. It is only field splitting or pathnam=
e expansion that can create multiple fields from a
single word. The single exception to this rule is the expansion of the spec=
ial parameter <tt>'@'</tt> within double-quotes, as
described in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/uti=
lities/V3_chap02.html#tag_18_05_02">Special Parameters</a>.</p>

<p>The order of word expansion shall be as follows:</p>

<ol>
<li>
<p>Tilde expansion (see <a href=3D"http://pubs.opengroup.org/onlinepubs/969=
9919799/utilities/V3_chap02.html#tag_18_06_01">Tilde Expansion</a>), parame=
ter expansion (see <a href=3D"http://pubs.opengroup.org/onlinepubs/96999197=
99/utilities/V3_chap02.html#tag_18_06_02">Parameter
Expansion</a>), command substitution (see <a href=3D"http://pubs.opengroup.=
org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_03">Command Su=
bstitution</a>), and arithmetic expansion (see <a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_04">Arith=
metic Expansion</a>) shall be performed, beginning to end. See item 5 in <a=
 href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap0=
2.html#tag_18_03">Token
Recognition</a>.</p>
</li>

<li>
<p>Field splitting (see <a href=3D"http://pubs.opengroup.org/onlinepubs/969=
9919799/utilities/V3_chap02.html#tag_18_06_05">Field Splitting</a>) shall b=
e performed on the portions of the fields generated by
step 1, unless <i>IFS</i> is null.</p>
</li>

<li>
<p>Pathname expansion (see <a href=3D"http://pubs.opengroup.org/onlinepubs/=
9699919799/utilities/V3_chap02.html#tag_18_06_06">Pathname Expansion</a>) s=
hall be performed, unless <a href=3D"http://pubs.opengroup.org/onlinepubs/9=
699919799/utilities/V3_chap02.html#set"><i>set</i></a> <b>-f</b> is in effe=
ct.</p>
</li>

<li>
<p>Quote removal (see <a href=3D"http://pubs.opengroup.org/onlinepubs/96999=
19799/utilities/V3_chap02.html#tag_18_06_07">Quote Removal</a>) shall alway=
s be performed last.</p>
</li>
</ol>

<p>The expansions described in this section shall occur in the same shell e=
nvironment as that in which the command is executed.</p>

<p>If the complete expansion appropriate for a word results in an empty fie=
ld, that empty field shall be deleted from the list of
fields that form the completely expanded command, unless the original word =
contained single-quote or double-quote characters.</p>

<p>The <tt>'$'</tt> character is used to introduce parameter expansion, com=
mand substitution, or arithmetic evaluation. If an
unquoted <tt>'$'</tt> is followed by a character that is not one of the fol=
lowing:</p>

<ul>
<li>
<p>A numeric character</p>
</li>

<li>
<p>The name of one of the special parameters (see <a href=3D"http://pubs.op=
engroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_05_02">Sp=
ecial Parameters</a>)</p>
</li>

<li>
<p>A valid first character of a variable name</p>
</li>

<li>
<p>A &lt;left-curly-bracket&gt; ( <tt>'{'</tt> )</p>
</li>

<li>
<p>A &lt;left-parenthesis&gt;</p>
</li>
</ul>

<p>the result is unspecified.</p>

<h4><a name=3D"tag_18_06_01">  2.6.1  </a>Tilde Expansion</h4>

<p>A "tilde-prefix" consists of an unquoted &lt;tilde&gt; character at the =
beginning of a word, followed by all of the characters
preceding the first unquoted &lt;slash&gt; in the word, or all the characte=
rs in the word if there is no &lt;slash&gt;. In an
assignment (see XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919=
799/basedefs/V1_chap04.html#tag_04_22"><i>Variable Assignment</i></a>), mul=
tiple tilde-prefixes can be
used: at the beginning of the word (that is, following the &lt;equals-sign&=
gt; of the assignment), following any unquoted
&lt;colon&gt;, or both. A tilde-prefix in an assignment is terminated by th=
e first unquoted &lt;colon&gt; or &lt;slash&gt;. If none
of the characters in the tilde-prefix are quoted, the characters in the til=
de-prefix following the &lt;tilde&gt; are treated as a
possible login name from the user database. A portable login name cannot co=
ntain characters outside the set given in the
description of the <i>LOGNAME</i> environment variable in XBD <a href=3D"ht=
tp://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html#tag_0=
8_03"><i>Other Environment
Variables</i></a>. If the login name is null (that is, the tilde-prefix con=
tains only the tilde), the tilde-prefix is replaced by
the value of the variable <i>HOME.</i> If <i>HOME</i> is unset, the results=
 are unspecified. Otherwise, the tilde-prefix shall be
replaced by a pathname of the initial working directory associated with the=
 login name obtained using the <a href=3D"http://pubs.opengroup.org/onlinep=
ubs/9699919799/functions/getpwnam.html"><i>getpwnam</i>()</a> function as d=
efined in the System Interfaces volume of POSIX.1-2008. If the
system does not recognize the login name, the results are undefined.</p>

<p>The pathname resulting from tilde expansion shall be treated as if quote=
d to prevent it being altered by field splitting and
pathname expansion.</p>

<h4><a name=3D"tag_18_06_02">  2.6.2  </a>Parameter Expansion</h4>

<p>The format for parameter expansion is as follows:</p>

<pre><tt>${</tt><i>expression</i><tt>}
</tt>
</pre>

<p>where <i>expression</i> consists of all characters until the matching <t=
t>'}'</tt>. Any <tt>'}'</tt> escaped by a
&lt;backslash&gt; or within a quoted string, and characters in embedded ari=
thmetic expansions, command substitutions, and variable
expansions, shall not be examined in determining the matching <tt>'}'</tt>.=
</p>

<p>The simplest form for parameter expansion is:</p>

<pre><tt>${</tt><i>parameter</i><tt>}
</tt>
</pre>

<p>The value, if any, of <i>parameter</i> shall be substituted.</p>

<p>The parameter name or symbol can be enclosed in braces, which are option=
al except for positional parameters with more than one
digit or when <i>parameter</i> is a name and is followed by a character tha=
t could be interpreted as part of the name. The matching
closing brace shall be determined by counting brace levels, skipping over e=
nclosed quoted strings, and command substitutions.</p>

<p>If the parameter is not enclosed in braces, and is a name, the expansion=
 shall use the longest valid name (see XBD <a href=3D"http://pubs.opengroup=
.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_231"><i>Name</i><=
/a>), whether or not the variable represented by that name exists. Otherwis=
e,
the parameter is a single-character symbol, and behavior is unspecified if =
that character is neither a digit nor one of the special
parameters (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/=
utilities/V3_chap02.html#tag_18_05_02">Special Parameters</a>).</p>

<p>If a parameter expansion occurs inside double-quotes:</p>

<ul>
<li>
<p>Pathname expansion shall not be performed on the results of the expansio=
n.</p>
</li>

<li>
<p>Field splitting shall not be performed on the results of the expansion, =
with the exception of <tt>'@'</tt>; see <a href=3D"http://pubs.opengroup.or=
g/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_05_02">Special Para=
meters</a>.</p>
</li>
</ul>

<p>In addition, a parameter expansion can be modified by using one of the f=
ollowing formats. In each case that a value of
<i>word</i> is needed (based on the state of <i>parameter</i>, as described=
 below), <i>word</i> shall be subjected to tilde
expansion, parameter expansion, command substitution, and arithmetic expans=
ion. If <i>word</i> is not needed, it shall not be
expanded. The <tt>'}'</tt> character that delimits the following parameter =
expansion modifications shall be determined as described
previously in this section and in <a href=3D"http://pubs.opengroup.org/onli=
nepubs/9699919799/utilities/V3_chap02.html#tag_18_02_03">Double-Quotes</a>.=
 (For example, ${ <b>foo-bar</b>} <b>xyz</b>} would
result in the expansion of <b>foo</b> followed by the string <b>xyz</b>} if=
 <b>foo</b> is set, else the string <tt>"barxyz}"</tt>
).</p>

<dl compact=3D"">
<dt>${<i>parameter</i>:-<b>[</b><i>word</i><b>]</b>}</dt>

<dd><b>Use Default Values</b>. If <i>parameter</i> is unset or null, the ex=
pansion of <i>word</i> (or an empty string if
<i>word</i> is omitted) shall be substituted; otherwise, the value of <i>pa=
rameter</i> shall be substituted.</dd>

<dt>${<i>parameter</i>:=3D<b>[</b><i>word</i><b>]</b>}</dt>

<dd><b>Assign Default Values</b>. If <i>parameter</i> is unset or null, the=
 expansion of <i>word</i> (or an empty string if
<i>word</i> is omitted) shall be assigned to <i>parameter</i>. In all cases=
, the final value of <i>parameter</i> shall be
substituted. Only variables, not positional parameters or special parameter=
s, can be assigned in this way.</dd>

<dt>${<i>parameter</i>:?<b>[</b><i>word</i><b>]</b>}</dt>

<dd><b>Indicate Error if Null or Unset</b>. If <i>parameter</i> is unset or=
 null, the expansion of <i>word</i> (or a message
indicating it is unset if <i>word</i> is omitted) shall be written to stand=
ard error and the shell exits with a non-zero exit
status. Otherwise, the value of <i>parameter</i> shall be substituted. An i=
nteractive shell need not exit.</dd>

<dt>${<i>parameter</i>:+<b>[</b><i>word</i><b>]</b>}</dt>

<dd><b>Use Alternative Value</b>. If <i>parameter</i> is unset or null, nul=
l shall be substituted; otherwise, the expansion of
<i>word</i> (or an empty string if <i>word</i> is omitted) shall be substit=
uted.</dd>
</dl>

<p>In the parameter expansions shown previously, use of the &lt;colon&gt; i=
n the format shall result in a test for a parameter that
is unset or null; omission of the &lt;colon&gt; shall result in a test for =
a parameter that is only unset. If parameter is
<tt>'#'</tt> and the colon is omitted, the application shall ensure that <i=
>word</i> is specified (this is necessary to avoid
ambiguity with the string length expansion). The following table summarizes=
 the effect of the &lt;colon&gt;:</p>

<center>
<table border=3D"1" cellpadding=3D"3" align=3D"center">

<tbody><tr valign=3D"top">
<th align=3D"center">
<p class=3D"tent"><b>&nbsp;</b></p>
</th>
<th align=3D"center">
<p class=3D"tent"><i>parameter</i><br><b>Set and Not Null</b></p>
</th>
<th align=3D"center">
<p class=3D"tent"><i>parameter</i><br><b>Set But Null</b></p>
</th>
<th align=3D"center">
<p class=3D"tent"><i>parameter</i><br><b>Unset</b></p>
</th>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent"><b>${</b><i>parameter</i><b>:-</b><i>word</i><b>}</b></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>parameter</i></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>word</i></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>word</i></p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent"><b>${</b><i>parameter</i><b>-</b><i>word</i><b>}</b></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>parameter</i></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute null</p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>word</i></p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent"><b>${</b><i>parameter</i><b>:=3D</b><i>word</i><b>}</b></=
p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>parameter</i></p>
</td>
<td align=3D"left">
<p class=3D"tent">assign <i>word</i></p>
</td>
<td align=3D"left">
<p class=3D"tent">assign <i>word</i></p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent"><b>${</b><i>parameter</i><b>=3D</b><i>word</i><b>}</b></p=
>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>parameter</i></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute null</p>
</td>
<td align=3D"left">
<p class=3D"tent">assign <i>word</i></p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent"><b>${</b><i>parameter</i><b>:?</b><i>word</i><b>}</b></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>parameter</i></p>
</td>
<td align=3D"left">
<p class=3D"tent">error, exit</p>
</td>
<td align=3D"left">
<p class=3D"tent">error, exit</p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent"><b>${</b><i>parameter</i><b>?</b><i>word</i><b>}</b></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>parameter</i></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute null</p>
</td>
<td align=3D"left">
<p class=3D"tent">error, exit</p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent"><b>${</b><i>parameter</i><b>:+</b><i>word</i><b>}</b></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>word</i></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute null</p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute null</p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent"><b>${</b><i>parameter</i><b>+</b><i>word</i><b>}</b></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>word</i></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute <i>word</i></p>
</td>
<td align=3D"left">
<p class=3D"tent">substitute null</p>
</td>
</tr>
</tbody></table>
</center>

<p>In all cases shown with "substitute", the expression is replaced with th=
e value shown. In all cases shown with "assign",
<i>parameter</i> is assigned that value, which also replaces the expression=
.</p>

<dl compact=3D"">
<dt>${#<i>parameter</i>}</dt>

<dd><b>String Length</b>. The length in characters of the value of <i>param=
eter</i> shall be substituted. If <i>parameter</i> is
<tt>'*'</tt> or <tt>'@'</tt>, the result of the expansion is unspecified. I=
f <i>parameter</i> is unset and <a href=3D"http://pubs.opengroup.org/online=
pubs/9699919799/utilities/V3_chap02.html#set"><i>set</i></a> <b>-u</b> is i=
n effect, the expansion shall fail.</dd>
</dl>

<p>The following four varieties of parameter expansion provide for substrin=
g processing. In each case, pattern matching notation
(see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V=
3_chap02.html#tag_18_13">Pattern Matching Notation</a>), rather than regula=
r expression notation, shall be used to evaluate the
patterns. If <i>parameter</i> is <tt>'#'</tt>, <tt>'*'</tt>, or <tt>'@'</tt=
>, the result of the expansion is unspecified. If
<i>parameter</i> is unset and <a href=3D"http://pubs.opengroup.org/onlinepu=
bs/9699919799/utilities/V3_chap02.html#set"><i>set</i></a> <b>-u</b> is in =
effect, the expansion shall fail. Enclosing the full
parameter expansion string in double-quotes shall not cause the following f=
our varieties of pattern characters to be quoted,
whereas quoting characters within the braces shall have this effect. In eac=
h variety, if <i>word</i> is omitted, the empty pattern
shall be used.</p>

<dl compact=3D"">
<dt>${<i>parameter</i>%<b>[</b><i>word</i><b>]</b>}</dt>

<dd><b>Remove Smallest Suffix Pattern</b>. The <i>word</i> shall be expande=
d to produce a pattern. The parameter expansion shall
then result in <i>parameter</i>, with the smallest portion of the suffix ma=
tched by the <i>pattern</i> deleted. If present,
<i>word</i> shall not begin with an unquoted <tt>'%'</tt>.</dd>

<dt>${<i>parameter</i>%%<b>[</b><i>word</i><b>]</b>}</dt>

<dd><b>Remove Largest Suffix Pattern</b>. The <i>word</i> shall be expanded=
 to produce a pattern. The parameter expansion shall
then result in <i>parameter</i>, with the largest portion of the suffix mat=
ched by the <i>pattern</i> deleted.</dd>

<dt>${<i>parameter</i>#<b>[</b><i>word</i><b>]</b>}</dt>

<dd><b>Remove Smallest Prefix Pattern</b>. The <i>word</i> shall be expande=
d to produce a pattern. The parameter expansion shall
then result in <i>parameter</i>, with the smallest portion of the prefix ma=
tched by the <i>pattern</i> deleted. If present,
<i>word</i> shall not begin with an unquoted <tt>'#'</tt>.</dd>

<dt>${<i>parameter</i>##<b>[</b><i>word</i><b>]</b>}</dt>

<dd><b>Remove Largest Prefix Pattern</b>. The <i>word</i> shall be expanded=
 to produce a pattern. The parameter expansion shall
then result in <i>parameter</i>, with the largest portion of the prefix mat=
ched by the <i>pattern</i> deleted.</dd>
</dl>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h5><a name=3D"tag_18_06_02_01"></a>Examples</h5>

<dl compact=3D"">
<dt>${<i>parameter</i>}</dt>

<dd>
In this example, the effects of omitting braces are demonstrated.=20

<pre><tt>a=3D1
set 2
echo ${a}b-$ab-${1}0-${10}-$10
</tt><b>1b--20--20</b>
</pre>
</dd>

<dt>${<i>parameter</i>:-<i>word</i>}</dt>

<dd>
In this example, <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799=
/utilities/ls.html"><i>ls</i></a> is executed only if <i>x</i> is null or u=
nset. (The $(<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/uti=
lities/ls.html"><i>ls</i></a>) command substitution notation is explained i=
n <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_c=
hap02.html#tag_18_06_03">Command
Substitution</a>.)=20

<pre><tt>${x:-$(ls)}
</tt>
</pre>
</dd>

<dt>${<i>parameter</i>:=3D<i>word</i>}</dt>

<dd>
<pre><tt>unset X
echo ${X:=3Dabc}
</tt><b>abc</b>
</pre>
</dd>

<dt>${<i>parameter</i>:?<i>word</i>}</dt>

<dd>
<pre><tt>unset posix
echo ${posix:?}
</tt><b>sh: posix: parameter null or not set</b>
</pre>
</dd>

<dt>${<i>parameter</i>:+<i>word</i>}</dt>

<dd>
<pre><tt>set a b c
echo ${3:+posix}
</tt><b>posix</b>
</pre>
</dd>

<dt>${#<i>parameter</i>}</dt>

<dd>
<pre><tt>HOME=3D/usr/posix
echo ${#HOME}
</tt><b>10</b>
</pre>
</dd>

<dt>${<i>parameter</i>%<i>word</i>}</dt>

<dd>
<pre><tt>x=3Dfile.c
echo ${x%.c}.o
</tt><b>file.o</b>
</pre>
</dd>

<dt>${<i>parameter</i>%%<i>word</i>}</dt>

<dd>
<pre><tt>x=3Dposix/src/std
echo ${x%%/*}
</tt><b>posix</b>
</pre>
</dd>

<dt>${<i>parameter</i>#<i>word</i>}</dt>

<dd>
<pre><tt>x=3D$HOME/src/cmd
echo ${x#$HOME}
</tt><b>/src/cmd</b>
</pre>
</dd>

<dt>${<i>parameter</i>##<i>word</i>}</dt>

<dd>
<pre><tt>x=3D/one/two/three
echo ${x##*/}
</tt><b>three</b>
</pre>
</dd>
</dl>

<p>The double-quoting of patterns is different depending on where the doubl=
e-quotes are placed:</p>

<dl compact=3D"">
<dt><tt>"${x#*}"</tt></dt>

<dd>The &lt;asterisk&gt; is a pattern character.</dd>

<dt><tt>${x#"*"}</tt></dt>

<dd>The literal &lt;asterisk&gt; is quoted and not special.</dd>
</dl>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>
<h4><a name=3D"tag_18_06_03">  2.6.3  </a>Command Substitution</h4>

<p>Command substitution allows the output of a command to be substituted in=
 place of the command name itself. Command substitution
shall occur when the command is enclosed as follows:</p>

<pre><tt>$(</tt><i>command</i><tt>)
</tt>
</pre>

<p>or (backquoted version):</p>

<pre><tt>`</tt><i>command</i><tt>`
</tt>
</pre>

<p>The shell shall expand the command substitution by executing <i>command<=
/i> in a subshell environment (see <a href=3D"http://pubs.opengroup.org/onl=
inepubs/9699919799/utilities/V3_chap02.html#tag_18_12">Shell Execution Envi=
ronment</a>) and replacing the command substitution (the text of <i>command=
</i> plus the
enclosing <tt>"$()"</tt> or backquotes) with the standard output of the com=
mand, removing sequences of one or more &lt;newline&gt;
characters at the end of the substitution. Embedded &lt;newline&gt; charact=
ers before the end of the output shall not be removed;
however, they may be treated as field delimiters and eliminated during fiel=
d splitting, depending on the value of <i>IFS</i> and
quoting that is in effect. If the output contains any null bytes, the behav=
ior is unspecified.</p>

<p>Within the backquoted style of command substitution, &lt;backslash&gt; s=
hall retain its literal meaning, except when followed
by: <tt>'$'</tt>, <tt>'`'</tt>, or &lt;backslash&gt;. The search for the ma=
tching backquote shall be satisfied by the first
unquoted non-escaped backquote; during this search, if a non-escaped backqu=
ote is encountered within a shell comment, a
here-document, an embedded command substitution of the $(<i>command</i>) fo=
rm, or a quoted string, undefined results occur. A
single-quoted or double-quoted string that begins, but does not end, within=
 the <tt>"`...`"</tt> sequence produces undefined
results.</p>

<p>With the $(<i>command</i>) form, all characters following the open paren=
thesis to the matching closing parenthesis constitute
the <i>command</i>. Any valid shell script can be used for <i>command</i>, =
except a script consisting solely of redirections which
produces unspecified results.</p>

<p>The results of command substitution shall not be processed for further t=
ilde expansion, parameter expansion, command
substitution, or arithmetic expansion. If a command substitution occurs ins=
ide double-quotes, field splitting and pathname
expansion shall not be performed on the results of the substitution.</p>

<p>Command substitution can be nested. To specify nesting within the backqu=
oted version, the application shall precede the inner
backquotes with &lt;backslash&gt; characters; for example:</p>

<pre><tt>\`</tt><i>command</i><tt>\`
</tt>
</pre>

<p>The syntax of the shell command language has an ambiguity for expansions=
 beginning with <tt>"$(("</tt>, which can introduce an
arithmetic expansion or a command substitution that starts with a subshell.=
 Arithmetic expansion has precedence; that is, the shell
shall first determine whether it can parse the expansion as an arithmetic e=
xpansion and shall only parse the expansion as a command
substitution if it determines that it cannot parse the expansion as an arit=
hmetic expansion. The shell need not evaluate nested
expansions when performing this determination. If it encounters the end of =
input without already having determined that it cannot
parse the expansion as an arithmetic expansion, the shell shall treat the e=
xpansion as an incomplete arithmetic expansion and
report a syntax error. A conforming application shall ensure that it separa=
tes the <tt>"$("</tt> and <tt>'('</tt> into two tokens
(that is, separate them with white space) in a command substitution that st=
arts with a subshell. For example, a command
substitution containing a single subshell could be written as:</p>

<pre><tt>$( (</tt><i>command</i><tt>) )
</tt>
</pre>

<h4><a name=3D"tag_18_06_04">  2.6.4  </a>Arithmetic Expansion</h4>

<p>Arithmetic expansion provides a mechanism for evaluating an arithmetic e=
xpression and substituting its value. The format for
arithmetic expansion shall be as follows:</p>

<pre><tt>$((</tt><i>expression</i><tt>))
</tt>
</pre>

<p>The expression shall be treated as if it were in double-quotes, except t=
hat a double-quote inside the expression is not treated
specially. The shell shall expand all tokens in the expression for paramete=
r expansion, command substitution, and quote
removal.</p>

<p>Next, the shell shall treat this as an arithmetic expression and substit=
ute the value of the expression. The arithmetic
expression shall be processed according to the rules given in <a href=3D"ht=
tp://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_=
17_01_02_01"><i>Arithmetic
Precision and Operations</i></a>, with the following exceptions:</p>

<ul>
<li>
<p>Only signed long integer arithmetic is required.</p>
</li>

<li>
<p>Only the decimal-constant, octal-constant, and hexadecimal-constant cons=
tants specified in the ISO&nbsp;C standard, Section
6.4.4.1 are required to be recognized as constants.</p>
</li>

<li>
<p>The <i>sizeof</i>() operator and the prefix and postfix <tt>"++"</tt> an=
d <tt>"--"</tt> operators are not required.</p>
</li>

<li>
<p>Selection, iteration, and jump statements are not supported.</p>
</li>
</ul>

<p>All changes to variables in an arithmetic expression shall be in effect =
after the arithmetic expansion, as in the parameter
expansion <tt>"${x=3Dvalue}"</tt>.</p>

<p>If the shell variable <i>x</i> contains a value that forms a valid integ=
er constant, optionally including a leading plus or
minus sign, then the arithmetic expansions <tt>"$((x))"</tt> and <tt>"$(($x=
))"</tt> shall return the same value.</p>

<p>As an extension, the shell may recognize arithmetic expressions beyond t=
hose listed. The shell may use a signed integer type
with a rank larger than the rank of <b>signed long</b>. The shell may use a=
 real-floating type instead of <b>signed long</b> as
long as it does not affect the results in cases where there is no overflow.=
 If the expression is invalid, or the contents of a
shell variable used in the expression are not recognized by the shell, the =
expansion fails and the shell shall write a diagnostic
message to standard error indicating the failure.</p>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h5><a name=3D"tag_18_06_04_01"></a>Examples</h5>

<p>A simple example using arithmetic expansion:</p>

<pre><tt># repeat a command 100 times
x=3D100
while [ $x -gt 0 ]
do
   </tt> <i>command</i> <tt>   x=3D$(($x-1))
done
</tt>
</pre>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>
<h4><a name=3D"tag_18_06_05">  2.6.5  </a>Field Splitting</h4>

<p>After parameter expansion (<a href=3D"http://pubs.opengroup.org/onlinepu=
bs/9699919799/utilities/V3_chap02.html#tag_18_06_02">Parameter Expansion</a=
>), command substitution (<a href=3D"http://pubs.opengroup.org/onlinepubs/9=
699919799/utilities/V3_chap02.html#tag_18_06_03">Command Substitution</a>),=
 and arithmetic expansion (<a href=3D"http://pubs.opengroup.org/onlinepubs/=
9699919799/utilities/V3_chap02.html#tag_18_06_04">Arithmetic Expansion</a>)=
, the
shell shall scan the results of expansions and substitutions that did not o=
ccur in double-quotes for field splitting and multiple
fields can result.</p>

<p>The shell shall treat each character of the <i>IFS</i> as a delimiter an=
d use the delimiters as field terminators to split the
results of parameter expansion and command substitution into fields.</p>

<ol>
<li>
<p>If the value of <i>IFS</i> is a &lt;space&gt;, &lt;tab&gt;, and &lt;newl=
ine&gt;, or if it is unset, any sequence of
&lt;space&gt;, &lt;tab&gt;, or &lt;newline&gt; characters at the beginning =
or end of the input shall be ignored and any sequence of
those characters within the input shall delimit a field. For example, the i=
nput:</p>

<pre><tt>&lt;newline&gt;&lt;space&gt;&lt;tab&gt;foo&lt;tab&gt;&lt;tab&gt;ba=
r&lt;space&gt;
</tt>
</pre>

<p>yields two fields, <b>foo</b> and <b>bar</b>.</p>
</li>

<li>
<p>If the value of <i>IFS</i> is null, no field splitting shall be performe=
d.</p>
</li>

<li>
<p>Otherwise, the following rules shall be applied in sequence. The term " =
<i>IFS</i> white space" is used to mean any sequence
(zero or more instances) of white-space characters that are in the <i>IFS</=
i> value (for example, if <i>IFS</i> contains
&lt;space&gt;/ &lt;comma&gt;/ &lt;tab&gt;, any sequence of &lt;space&gt; an=
d &lt;tab&gt; characters is considered <i>IFS</i> white
space).</p>

<ol type=3D"a">
<li>
<p><i>IFS</i> white space shall be ignored at the beginning and end of the =
input.</p>
</li>

<li>
<p>Each occurrence in the input of an <i>IFS</i> character that is not <i>I=
FS</i> white space, along with any adjacent <i>IFS</i>
white space, shall delimit a field, as described previously.</p>
</li>

<li>
<p>Non-zero-length <i>IFS</i> white space shall delimit a field.</p>
</li>
</ol>
</li>
</ol>

<h4><a name=3D"tag_18_06_06">  2.6.6  </a>Pathname Expansion</h4>

<p>After field splitting, if <a href=3D"http://pubs.opengroup.org/onlinepub=
s/9699919799/utilities/V3_chap02.html#set"><i>set</i></a> <b>-f</b> is not =
in effect, each field in the resulting command line
shall be expanded using the algorithm described in <a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_13">Patt=
ern Matching Notation</a>, qualified by the rules in
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_cha=
p02.html#tag_18_13_03">Patterns Used for Filename Expansion</a>.</p>

<h4><a name=3D"tag_18_06_07">  2.6.7  </a>Quote Removal</h4>

<p>The quote characters ( &lt;backslash&gt;, single-quote, and double-quote=
) that were present in the original word shall be
removed unless they have themselves been quoted.</p>

<h3><a name=3D"tag_18_07">   2.7  </a>Redirection</h3>

<p>Redirection is used to open and close files for the current shell execut=
ion environment (see <a href=3D"http://pubs.opengroup.org/onlinepubs/969991=
9799/utilities/V3_chap02.html#tag_18_12">Shell
Execution Environment</a>) or for any command. Redirection operators can be=
 used with numbers representing file descriptors (see
XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_=
chap03.html#tag_03_166"><i>File Descriptor</i></a>) as described below.</p>

<p>The overall format used for redirection is:</p>

<pre><b>[</b><i>n</i><b>]</b><i>redir-op word</i>
</pre>

<p>The number <i>n</i> is an optional decimal number designating the file d=
escriptor number; the application shall ensure it is
delimited from any preceding text and immediately precede the redirection o=
perator <i>redir-op</i>. If <i>n</i> is quoted, the
number shall not be recognized as part of the redirection expression. For e=
xample:</p>

<pre><tt>echo \2&gt;a
</tt>
</pre>

<p>writes the character 2 into file <b>a</b>. If any part of <i>redir-op</i=
> is quoted, no redirection expression is recognized.
For example:</p>

<pre><tt>echo 2\&gt;a
</tt>
</pre>

<p>writes the characters 2&gt;<i>a</i> to standard output. The optional num=
ber, redirection operator, and <i>word</i> shall not
appear in the arguments provided to the command to be executed (if any).</p=
>

<p>Open files are represented by decimal numbers starting with zero. The la=
rgest possible value is implementation-defined; however,
all implementations shall support at least 0 to 9, inclusive, for use by th=
e application. These numbers are called "file
descriptors". The values 0, 1, and 2 have special meaning and conventional =
uses and are implied by certain redirection operations;
they are referred to as <i>standard input</i>, <i>standard output</i>, and =
<i>standard error</i>, respectively. Programs usually
take their input from standard input, and write output on standard output. =
Error messages are usually written on standard error.
The redirection operators can be preceded by one or more digits (with no in=
tervening &lt;blank&gt; characters allowed) to designate
the file descriptor number.</p>

<p>If the redirection operator is <tt>"&lt;&lt;"</tt> or <tt>"&lt;&lt;-"</t=
t>, the word that follows the redirection operator
shall be subjected to quote removal; it is unspecified whether any of the o=
ther expansions occur. For the other redirection
operators, the word that follows the redirection operator shall be subjecte=
d to tilde expansion, parameter expansion, command
substitution, arithmetic expansion, and quote removal. Pathname expansion s=
hall not be performed on the word by a non-interactive
shell; an interactive shell may perform it, but shall do so only when the e=
xpansion would result in one word.</p>

<p>If more than one redirection operator is specified with a command, the o=
rder of evaluation is from beginning to end.</p>

<p>A failure to open or create a file shall cause a redirection to fail.</p=
>

<h4><a name=3D"tag_18_07_01">  2.7.1  </a>Redirecting Input</h4>

<p>Input redirection shall cause the file whose name results from the expan=
sion of <i>word</i> to be opened for reading on the
designated file descriptor, or standard input if the file descriptor is not=
 specified.</p>

<p>The general format for redirecting input is:</p>

<pre><b>[</b><i>n</i><b>]</b><tt>&lt;</tt><i>word</i>
</pre>

<p>where the optional <i>n</i> represents the file descriptor number. If th=
e number is omitted, the redirection shall refer to
standard input (file descriptor 0).</p>

<h4><a name=3D"tag_18_07_02">  2.7.2  </a>Redirecting Output</h4>

<p>The two general formats for redirecting output are:</p>

<pre><b>[</b><i>n</i><b>]</b><tt>&gt;</tt><i>word</i>
<b>[</b><i>n</i><b>]</b><tt>&gt;|</tt><i>word</i>
</pre>

<p>where the optional <i>n</i> represents the file descriptor number. If th=
e number is omitted, the redirection shall refer to
standard output (file descriptor 1).</p>

<p>Output redirection using the <tt>'&gt;'</tt> format shall fail if the <i=
>noclobber</i> option is set (see the description of <a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#set"><i>set</=
i></a> <b>-C</b>) and the file named by the expansion of <i>word</i> exists=
 and is a regular file. Otherwise,
redirection using the <tt>'&gt;'</tt> or <tt>"&gt;|"</tt> formats shall cau=
se the file whose name results from the expansion of
<i>word</i> to be created and opened for output on the designated file desc=
riptor, or standard output if none is specified. If the
file does not exist, it shall be created; otherwise, it shall be truncated =
to be an empty file after being opened.</p>

<h4><a name=3D"tag_18_07_03">  2.7.3  </a>Appending Redirected Output</h4>

<p>Appended output redirection shall cause the file whose name results from=
 the expansion of word to be opened for output on the
designated file descriptor. The file is opened as if the <a href=3D"http://=
pubs.opengroup.org/onlinepubs/9699919799/functions/open.html"><i>open</i>()=
</a> function as defined in
the System Interfaces volume of POSIX.1-2008 was called with the O_APPEND f=
lag. If the file does not exist, it shall be
created.</p>

<p>The general format for appending redirected output is as follows:</p>

<pre><b>[</b><i>n</i><b>]</b><tt>&gt;&gt;</tt><i>word</i>
</pre>

<p>where the optional <i>n</i> represents the file descriptor number. If th=
e number is omitted, the redirection refers to standard
output (file descriptor 1).</p>

<h4><a name=3D"tag_18_07_04">  2.7.4  </a>Here-Document</h4>

<p>The redirection operators <tt>"&lt;&lt;"</tt> and <tt>"&lt;&lt;-"</tt> b=
oth allow redirection of lines contained in a shell
input file, known as a "here-document", to the input of a command.</p>

<p>The here-document shall be treated as a single word that begins after th=
e next &lt;newline&gt; and continues until there is a
line containing only the delimiter and a &lt;newline&gt;, with no &lt;blank=
&gt; characters in between. Then the next here-document
starts, if there is one. The format is as follows:</p>

<pre><b>[</b><i>n</i><b>]</b><tt>&lt;&lt;</tt><i>word
    here-document
delimiter</i>
</pre>

<p>where the optional <i>n</i> represents the file descriptor number. If th=
e number is omitted, the here-document refers to
standard input (file descriptor 0).</p>

<p>If any character in <i>word</i> is quoted, the delimiter shall be formed=
 by performing quote removal on <i>word</i>, and the
here-document lines shall not be expanded. Otherwise, the delimiter shall b=
e the <i>word</i> itself.</p>

<p>If no characters in <i>word</i> are quoted, all lines of the here-docume=
nt shall be expanded for parameter expansion, command
substitution, and arithmetic expansion. In this case, the &lt;backslash&gt;=
 in the input behaves as the &lt;backslash&gt; inside
double-quotes (see <a href=3D"http://pubs.opengroup.org/onlinepubs/96999197=
99/utilities/V3_chap02.html#tag_18_02_03">Double-Quotes</a>). However, the =
double-quote character ( <tt> '"'</tt>  ) shall not be
treated specially within a here-document, except when the double-quote appe=
ars within <tt>"$()"</tt>, <tt>"``"</tt>, or
<tt>"${}"</tt>.</p>

<p>If the redirection symbol is <tt>"&lt;&lt;-"</tt>, all leading &lt;tab&g=
t; characters shall be stripped from input lines and
the line containing the trailing delimiter. If more than one <tt>"&lt;&lt;"=
</tt> or <tt>"&lt;&lt;-"</tt> operator is specified on a
line, the here-document associated with the first operator shall be supplie=
d first by the application and shall be read first by
the shell.</p>

<p>When a here-document is read from a terminal device and the shell is int=
eractive, it shall write the contents of the variable
<i>PS2</i>, processed as described in <a href=3D"http://pubs.opengroup.org/=
onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_05_03">Shell Variable=
s</a>, to standard error before reading each line of
input until the delimiter has been recognized.</p>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h5><a name=3D"tag_18_07_04_01"></a>Examples</h5>

<p>An example of a here-document follows:</p>

<pre><tt>cat &lt;&lt;eof1; cat &lt;&lt;eof2
Hi,
eof1
Helene.
eof2
</tt>
</pre>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>
<h4><a name=3D"tag_18_07_05">  2.7.5  </a>Duplicating an Input File Descrip=
tor</h4>

<p>The redirection operator:</p>

<pre><b>[</b><i>n</i><b>]</b><tt>&lt;&amp;</tt><i>word</i>
</pre>

<p>shall duplicate one input file descriptor from another, or shall close o=
ne. If <i>word</i> evaluates to one or more digits, the
file descriptor denoted by <i>n</i>, or standard input if <i>n</i> is not s=
pecified, shall be made to be a copy of the file
descriptor denoted by <i>word</i>; if the digits in <i>word</i> do not repr=
esent a file descriptor already open for input, a
redirection error shall result; see <a href=3D"http://pubs.opengroup.org/on=
linepubs/9699919799/utilities/V3_chap02.html#tag_18_08_01">Consequences of =
Shell Errors</a>. If <i>word</i> evaluates to
<tt>'-'</tt>, file descriptor <i>n</i>, or standard input if <i>n</i> is no=
t specified, shall be closed. Attempts to close a file
descriptor that is not open shall not constitute an error. If <i>word</i> e=
valuates to something else, the behavior is
unspecified.</p>

<h4><a name=3D"tag_18_07_06">  2.7.6  </a>Duplicating an Output File Descri=
ptor</h4>

<p>The redirection operator:</p>

<pre><b>[</b><i>n</i><b>]</b><tt>&gt;&amp;</tt><i>word</i>
</pre>

<p>shall duplicate one output file descriptor from another, or shall close =
one. If <i>word</i> evaluates to one or more digits, the
file descriptor denoted by <i>n</i>, or standard output if <i>n</i> is not =
specified, shall be made to be a copy of the file
descriptor denoted by <i>word</i>; if the digits in <i>word</i> do not repr=
esent a file descriptor already open for output, a
redirection error shall result; see <a href=3D"http://pubs.opengroup.org/on=
linepubs/9699919799/utilities/V3_chap02.html#tag_18_08_01">Consequences of =
Shell Errors</a>. If <i>word</i> evaluates to
<tt>'-'</tt>, file descriptor <i>n</i>, or standard output if <i>n</i> is n=
ot specified, is closed. Attempts to close a file
descriptor that is not open shall not constitute an error. If <i>word</i> e=
valuates to something else, the behavior is
unspecified.</p>

<h4><a name=3D"tag_18_07_07">  2.7.7  </a>Open File Descriptors for Reading=
 and Writing</h4>

<p>The redirection operator:</p>

<pre><b>[</b><i>n</i><b>]</b><tt>&lt;&gt;</tt><i>word</i>
</pre>

<p>shall cause the file whose name is the expansion of <i>word</i> to be op=
ened for both reading and writing on the file descriptor
denoted by <i>n</i>, or standard input if <i>n</i> is not specified. If the=
 file does not exist, it shall be created.</p>

<h3><a name=3D"tag_18_08">   2.8  </a>Exit Status and Errors</h3>

<h4><a name=3D"tag_18_08_01">  2.8.1  </a>Consequences of Shell Errors</h4>

<p>For a non-interactive shell, an error condition encountered by a special=
 built-in (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/u=
tilities/V3_chap02.html#tag_18_14">Special Built-In
Utilities</a>) or other type of utility shall cause the shell to write a di=
agnostic message to standard error and exit as shown in
the following table:</p>

<center>
<table border=3D"1" cellpadding=3D"3" align=3D"center">
<tbody><tr valign=3D"top">
<th align=3D"center">
<p class=3D"tent"><b>Error</b></p>
</th>
<th align=3D"center">
<p class=3D"tent"><b>Special Built-In</b></p>
</th>
<th align=3D"center">
<p class=3D"tent"><b>Other Utilities</b></p>
</th>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent">Shell language syntax error</p>
</td>
<td align=3D"left">
<p class=3D"tent">Shall exit</p>
</td>
<td align=3D"left">
<p class=3D"tent">Shall exit</p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent">Utility syntax error (option or operand error)</p>
</td>
<td align=3D"left">
<p class=3D"tent">Shall exit</p>
</td>
<td align=3D"left">
<p class=3D"tent">Shall not exit</p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent">Redirection error</p>
</td>
<td align=3D"left">
<p class=3D"tent">Shall exit</p>
</td>
<td align=3D"left">
<p class=3D"tent">Shall not exit</p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent">Variable assignment error</p>
</td>
<td align=3D"left">
<p class=3D"tent">Shall exit</p>
</td>
<td align=3D"left">
<p class=3D"tent">Shall not exit</p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent">Expansion error</p>
</td>
<td align=3D"left">
<p class=3D"tent">Shall exit</p>
</td>
<td align=3D"left">
<p class=3D"tent">Shall exit</p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent">Command not found</p>
</td>
<td align=3D"left">
<p class=3D"tent">N/A</p>
</td>
<td align=3D"left">
<p class=3D"tent">May exit</p>
</td>
</tr>

<tr valign=3D"top">
<td align=3D"left">
<p class=3D"tent">Dot script not found</p>
</td>
<td align=3D"left">
<p class=3D"tent">Shall exit</p>
</td>
<td align=3D"left">
<p class=3D"tent">N/A</p>
</td>
</tr>
</tbody></table>
</center>

<p>An expansion error is one that occurs when the shell expansions defined =
in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/functions/wor=
dexp.html#"><i>wordexp</i></a> are carried out (for example, <tt>"${x!y}"</=
tt>, because <tt>'!'</tt> is not a
valid operator); an implementation may treat these as syntax errors if it i=
s able to detect them during tokenization, rather than
during expansion.</p>

<p>If any of the errors shown as "shall exit" or "(may) exit" occur in a su=
bshell, the subshell shall (respectively may) exit
with a non-zero status, but the script containing the subshell shall not ex=
it because of the error.</p>

<p>In all of the cases shown in the table, an interactive shell shall write=
 a diagnostic message to standard error without
exiting.</p>

<h4><a name=3D"tag_18_08_02">  2.8.2  </a>Exit Status for Commands</h4>

<p>Each command has an exit status that can influence the behavior of other=
 shell commands. The exit status of commands that are
not utilities is documented in this section. The exit status of the standar=
d utilities is documented in their respective
sections.</p>

<p>If a command is not found, the exit status shall be 127. If the command =
name is found, but it is not an executable utility, the
exit status shall be 126. Applications that invoke utilities without using =
the shell should use these exit status values to report
similar errors.</p>

<p>If a command fails during word expansion or redirection, its exit status=
 shall be greater than zero.</p>

<p>Internally, for purposes of deciding whether a command exits with a non-=
zero exit status, the shell shall recognize the entire
status value retrieved for the command by the equivalent of the <a href=3D"=
http://pubs.opengroup.org/onlinepubs/9699919799/functions/wait.html"><i>wai=
t</i>()</a> function
WEXITSTATUS macro (as defined in the System Interfaces volume of POSIX.1-20=
08). When reporting the exit status with the special
parameter <tt>'?'</tt>, the shell shall report the full eight bits of exit =
status available. The exit status of a command that
terminated because it received a signal shall be reported as greater than 1=
28.</p>

<h3><a name=3D"tag_18_09">   2.9  </a>Shell Commands</h3>

<p>This section describes the basic structure of shell commands. The follow=
ing command descriptions each describe a format of the
command that is only used to aid the reader in recognizing the command type=
, and does not formally represent the syntax. Each
description discusses the semantics of the command; for a formal definition=
 of the command language, consult <a href=3D"http://pubs.opengroup.org/onli=
nepubs/9699919799/utilities/V3_chap02.html#tag_18_10">Shell Grammar</a>.</p=
>

<p>A <i>command</i> is one of the following:</p>

<ul>
<li>
<p>Simple command (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699=
919799/utilities/V3_chap02.html#tag_18_09_01">Simple Commands</a>)</p>
</li>

<li>
<p>Pipeline (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799=
/utilities/V3_chap02.html#tag_18_09_02">Pipelines</a>)</p>
</li>

<li>
<p>List compound-list (see <a href=3D"http://pubs.opengroup.org/onlinepubs/=
9699919799/utilities/V3_chap02.html#tag_18_09_03">Lists</a>)</p>
</li>

<li>
<p>Compound command (see <a href=3D"http://pubs.opengroup.org/onlinepubs/96=
99919799/utilities/V3_chap02.html#tag_18_09_04">Compound Commands</a>)</p>
</li>

<li>
<p>Function definition (see <a href=3D"http://pubs.opengroup.org/onlinepubs=
/9699919799/utilities/V3_chap02.html#tag_18_09_05">Function Definition Comm=
and</a>)</p>
</li>
</ul>

<p>Unless otherwise stated, the exit status of a command shall be that of t=
he last simple command executed by the command. There
shall be no limit on the size of any shell command other than that imposed =
by the underlying system (memory constraints, {ARG_MAX},
and so on).</p>

<h4><a name=3D"tag_18_09_01">  2.9.1  </a>Simple Commands</h4>

<p>A "simple command" is a sequence of optional variable assignments and re=
directions, in any sequence, optionally followed by
words and redirections, terminated by a control operator.</p>

<p>When a given simple command is required to be executed (that is, when an=
y conditional construct such as an AND-OR list or a
<b>case</b> statement has not bypassed the simple command), the following e=
xpansions, assignments, and redirections shall all be
performed from the beginning of the command text to the end:</p>

<ol>
<li>
<p>The words that are recognized as variable assignments or redirections ac=
cording to <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utili=
ties/V3_chap02.html#tag_18_10_02">Shell Grammar
Rules</a> are saved for processing in steps 3 and 4.</p>
</li>

<li>
<p>The words that are not variable assignments or redirections shall be exp=
anded. If any fields remain following their expansion,
the first field shall be considered the command name and remaining fields a=
re the arguments for the command.</p>
</li>

<li>
<p>Redirections shall be performed as described in <a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_07">Redi=
rection</a>.</p>
</li>

<li>
<p>Each variable assignment shall be expanded for tilde expansion, paramete=
r expansion, command substitution, arithmetic expansion,
and quote removal prior to assigning the value.</p>
</li>
</ol>

<p>In the preceding list, the order of steps 3 and 4 may be reversed if no =
command name results from step 2 or if the command name
matches the name of a special built-in utility; see <a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_14">Spe=
cial Built-In Utilities</a>.</p>

<p>If no command name results, or if the command name is a special built-in=
 or function, variable assignments shall affect the
current execution environment. Otherwise, the variable assignments shall be=
 exported for the execution environment of the command
and shall not affect the current execution environment except as a side-eff=
ect of the expansions performed in step 4. In this case
it is unspecified:</p>

<ul>
<li>
<p>Whether or not the assignments are visible for subsequent expansions in =
step 4</p>
</li>

<li>
<p>Whether variable assignments made as side-effects of these expansions ar=
e visible for subsequent expansions in step 4, or in the
current shell execution environment, or both</p>
</li>
</ul>

<p>If any of the variable assignments attempt to assign a value to a variab=
le for which the <i>readonly</i> attribute is set in the
current shell environment (regardless of whether the assignment is made in =
that environment), a variable assignment error shall
occur. See <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utili=
ties/V3_chap02.html#tag_18_08_01">Consequences of Shell Errors</a> for the =
consequences of these errors.</p>

<p>If there is no command name, any redirections shall be performed in a su=
bshell environment; it is unspecified whether this
subshell environment is the same one as that used for a command substitutio=
n within the command. (To affect the current execution
environment, see the <a href=3D"http://pubs.opengroup.org/onlinepubs/969991=
9799/utilities/V3_chap02.html#tag_18_20">exec</a> special built-in.) If any=
 of the redirections performed in the current shell
execution environment fail, the command shall immediately fail with an exit=
 status greater than zero, and the shell shall write an
error message indicating the failure. See <a href=3D"http://pubs.opengroup.=
org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_08_01">Consequenc=
es of Shell Errors</a> for the consequences of these
failures on interactive and non-interactive shells.</p>

<p>If there is a command name, execution shall continue as described in <a =
href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02=
.html#tag_18_09_01_01">Command Search and Execution</a>
. If there is no command name, but the command contained a command substitu=
tion, the command shall complete with the exit status of
the last command substitution performed. Otherwise, the command shall compl=
ete with a zero exit status.</p>

<h5><a name=3D"tag_18_09_01_01"></a>Command Search and Execution</h5>

<p>If a simple command results in a command name and an optional list of ar=
guments, the following actions shall be performed:</p>

<ol>
<li>
<p>If the command name does not contain any &lt;slash&gt; characters, the f=
irst successful step in the following sequence shall
occur:</p>

<ol type=3D"a">
<li>
<p>If the command name matches the name of a special built-in utility, that=
 special built-in utility shall be invoked.</p>
</li>

<li>
<p>If the command name matches the name of a function known to this shell, =
the function shall be invoked as described in <a href=3D"http://pubs.opengr=
oup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_05">Functi=
on Definition Command</a>. If the implementation has provided a standard ut=
ility in the form of a function,
it shall not be recognized at this point. It shall be invoked in conjunctio=
n with the path search in step 1d.</p>
</li>

<li>
<p>If the command name matches the name of a utility listed in the followin=
g table, that utility shall be invoked.</p>

<center>
<table cellpadding=3D"3" align=3D"center">
<tbody><tr class=3D"nav" valign=3D"top">
<td align=3D"left">
<p class=3D"tent"><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/alias.=
html"><i>alias</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/bg.htm=
l"><i>bg</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/cd.htm=
l"><i>cd</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/comman=
d.html"><i>command</i></a><br>
&nbsp;</p>
</td>
<td align=3D"left">
<p class=3D"tent"><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/false.=
html"><i>false</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/fc.htm=
l"><i>fc</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/fg.htm=
l"><i>fg</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/getopt=
s.html"><i>getopts</i></a><br>
&nbsp;</p>
</td>
<td align=3D"left">
<p class=3D"tent"><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/jobs.h=
tml"><i>jobs</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/kill.h=
tml"><i>kill</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/newgrp=
.html"><i>newgrp</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/pwd.ht=
ml"><i>pwd</i></a><br>
&nbsp;</p>
</td>
<td align=3D"left">
<p class=3D"tent"><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/read.h=
tml"><i>read</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/true.h=
tml"><i>true</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/umask.=
html"><i>umask</i></a><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/unalia=
s.html"><i>unalias</i></a><br>
&nbsp;</p>
</td>
<td align=3D"left">
<p class=3D"tent"><br>
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/wait.h=
tml"><i>wait</i></a><br>
&nbsp;</p>
</td>
</tr>
</tbody></table>
</center>
</li>

<li>
<p>Otherwise, the command shall be searched for using the <i>PATH</i> envir=
onment variable as described in XBD <a href=3D"http://pubs.opengroup.org/on=
linepubs/9699919799/basedefs/V1_chap08.html#tag_08"><i>Environment Variable=
s</i></a> :</p>

<ol type=3D"i">
<li>
<p>If the search is successful:</p>

<ol type=3D"a">
<li>
<p>If the system has implemented the utility as a regular built-in or as a =
shell function, it shall be invoked at this point in the
path search.</p>
</li>

<li>
<p>Otherwise, the shell executes the utility in a separate utility environm=
ent (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utiliti=
es/V3_chap02.html#tag_18_12">Shell Execution
Environment</a>) with actions equivalent to calling the <a href=3D"http://p=
ubs.opengroup.org/onlinepubs/9699919799/functions/execl.html"><i>execl</i>(=
)</a> function as defined
in the System Interfaces volume of POSIX.1-2008 with the <i>path</i> argume=
nt set to the pathname resulting from the search,
<i>arg</i>0 set to the command name, and the remaining <a href=3D"http://pu=
bs.opengroup.org/onlinepubs/9699919799/functions/execl.html"><i>execl</i>()=
</a> arguments set to the
command arguments (if any) and the null terminator.</p>

<p>If the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/functi=
ons/execl.html"><i>execl</i>()</a> function fails due to an error equivalen=
t to the [ENOEXEC] error
defined in the System Interfaces volume of POSIX.1-2008, the shell shall ex=
ecute a command equivalent to having a shell invoked
with the pathname resulting from the search as its first operand, with any =
remaining arguments passed to the new shell, except that
the value of <tt>"$0"</tt> in the new shell may be set to the command name.=
 If the executable file is not a text file, the shell
may bypass this command execution. In this case, it shall write an error me=
ssage, and shall return an exit status of 126.</p>

<p>It is unspecified whether environment variables that were passed to the =
shell when it was invoked, but were not used to
initialize shell variables (see <a href=3D"http://pubs.opengroup.org/online=
pubs/9699919799/utilities/V3_chap02.html#tag_18_05_03">Shell Variables</a>)=
 because they had invalid names, are included in the
environment passed to <a href=3D"http://pubs.opengroup.org/onlinepubs/96999=
19799/functions/execl.html"><i>execl</i>()</a> and (if <a href=3D"http://pu=
bs.opengroup.org/onlinepubs/9699919799/functions/execl.html"><i>execl</i>()=
</a> fails as described above) to the new shell.</p>
</li>
</ol>

<p>Once a utility has been searched for and found (either as a result of th=
is specific search or as part of an unspecified shell
start-up activity), an implementation may remember its location and need no=
t search for the utility again unless the <i>PATH</i>
variable has been the subject of an assignment. If the remembered location =
fails for a subsequent invocation, the shell shall
repeat the search to find the new location for the utility, if any.</p>
</li>

<li>
<p>If the search is unsuccessful, the command shall fail with an exit statu=
s of 127 and the shell shall write an error message.</p>
</li>
</ol>
</li>
</ol>
</li>

<li>
<p>If the command name contains at least one &lt;slash&gt;, the shell shall=
 execute the utility in a separate utility environment
with actions equivalent to calling the <a href=3D"http://pubs.opengroup.org=
/onlinepubs/9699919799/functions/execl.html"><i>execl</i>()</a> function de=
fined in the System
Interfaces volume of POSIX.1-2008 with the <i>path</i> and <i>arg</i>0 argu=
ments set to the command name, and the remaining <a href=3D"http://pubs.ope=
ngroup.org/onlinepubs/9699919799/functions/execl.html"><i>execl</i>()</a> a=
rguments set to the command arguments (if any) and the null terminator.</p>

<p>If the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/functi=
ons/execl.html"><i>execl</i>()</a> function fails due to an error equivalen=
t to the [ENOEXEC] error,
the shell shall execute a command equivalent to having a shell invoked with=
 the command name as its first operand, with any
remaining arguments passed to the new shell. If the executable file is not =
a text file, the shell may bypass this command
execution. In this case, it shall write an error message and shall return a=
n exit status of 126.</p>

<p>It is unspecified whether environment variables that were passed to the =
shell when it was invoked, but were not used to
initialize shell variables (see <a href=3D"http://pubs.opengroup.org/online=
pubs/9699919799/utilities/V3_chap02.html#tag_18_05_03">Shell Variables</a>)=
 because they had invalid names, are included in the
environment passed to <a href=3D"http://pubs.opengroup.org/onlinepubs/96999=
19799/functions/execl.html"><i>execl</i>()</a> and (if <a href=3D"http://pu=
bs.opengroup.org/onlinepubs/9699919799/functions/execl.html"><i>execl</i>()=
</a> fails as described above) to the new shell.</p>
</li>
</ol>

<p>If the utility would be executed with file descriptor 0, 1, or 2 closed,=
 implementations may execute the utility with the file
descriptor open to an unspecified file. If a standard utility or a conformi=
ng application is executed with file descriptor 0 not
open for reading or with file descriptor 1 or 2 not open for writing, the e=
nvironment in which the utility or application is
executed shall be deemed non-conforming, and consequently the utility or ap=
plication might not behave as described in this
standard.</p>

<h4><a name=3D"tag_18_09_02">  2.9.2  </a>Pipelines</h4>

<p>A <i>pipeline</i> is a sequence of one or more commands separated by the=
 control operator <tt>'|'</tt>. For each command but
the last, the shell shall connect the standard output of the command to the=
 standard input of the next command as if by creating a
pipe and passing the write end of the pipe as the standard output of the co=
mmand and the read end of the pipe as the standard input
of the next command.</p>

<p>The format for a pipeline is:</p>

<pre><b>[</b><tt>!</tt><b>]</b> <i>command1</i> <b>[</b> <tt>|</tt> <i>comm=
and2</i> <tt>...</tt><b>]</b>
</pre>

<p>The standard output of <i>command1</i> shall be connected to the standar=
d input of <i>command2</i>. The standard input, standard
output, or both of a command shall be considered to be assigned by the pipe=
line before any redirection specified by redirection
operators that are part of the command (see <a href=3D"http://pubs.opengrou=
p.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_07">Redirection=
</a>).</p>

<p>If the pipeline is not in the background (see <a href=3D"http://pubs.ope=
ngroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_03_02">=
Asynchronous Lists</a>), the shell shall wait for the
last command specified in the pipeline to complete, and may also wait for a=
ll commands to complete.</p>

<h5><a name=3D"tag_18_09_02_01"></a>Exit Status</h5>

<p>If the pipeline does not begin with the <b>!</b> reserved word, the exit=
 status shall be the exit status of the last command
specified in the pipeline. Otherwise, the exit status shall be the logical =
NOT of the exit status of the last command. That is, if
the last command returns zero, the exit status shall be 1; if the last comm=
and returns greater than zero, the exit status shall be
zero.</p>

<h4><a name=3D"tag_18_09_03">  2.9.3  </a>Lists</h4>

<p>An <i>AND-OR list</i> is a sequence of one or more pipelines separated b=
y the operators <tt>"&amp;&amp;"</tt> and <tt>"||"</tt>
.</p>

<p>A <i>list</i> is a sequence of one or more AND-OR lists separated by the=
 operators <tt>';'</tt> and <tt>'&amp;'</tt>.</p>

<p>The operators <tt>"&amp;&amp;"</tt> and <tt>"||"</tt> shall have equal p=
recedence and shall be evaluated with left
associativity. For example, both of the following commands write solely <b>=
bar</b> to standard output:</p>

<pre><tt>false &amp;&amp; echo foo || echo bar
true || echo foo &amp;&amp; echo bar
</tt>
</pre>

<p>A <tt>';'</tt> separator or a <tt>';'</tt> or &lt;newline&gt; terminator=
 shall cause the preceding AND-OR list to be executed
sequentially; an <tt>'&amp;'</tt> separator or terminator shall cause async=
hronous execution of the preceding AND-OR list.</p>

<p>The term "compound-list" is derived from the grammar in <a href=3D"http:=
//pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_=
10">Shell Grammar</a>; it is equivalent to a
sequence of <i>lists</i>, separated by &lt;newline&gt; characters, that can=
 be preceded or followed by an arbitrary number of
&lt;newline&gt; characters.</p>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h5><a name=3D"tag_18_09_03_01"></a>Examples</h5>

<p>The following is an example that illustrates &lt;newline&gt; characters =
in compound-lists:</p>

<pre><tt>while
    # a couple of &lt;newline&gt;s
<br>
    # a list
    date &amp;&amp; who || ls; cat file
    # a couple of &lt;newline&gt;s
<br>
    # another list
    wc file &gt; output &amp; true
<br>
do
    # 2 lists
    ls
    cat file
done
</tt>
</pre>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>
<h5><a name=3D"tag_18_09_03_02"></a>Asynchronous Lists</h5>

<p>If a command is terminated by the control operator &lt;ampersand&gt; ( <=
tt>'&amp;'</tt> ), the shell shall execute the command
asynchronously in a subshell. This means that the shell shall not wait for =
the command to finish before executing the next
command.</p>

<p>The format for running a command in the background is:</p>

<pre><i>command1</i> <tt>&amp;</tt> <b>[</b><i>command2</i> <tt>&amp; ...</=
tt> <b>]</b>
</pre>

<p>The standard input for an asynchronous list, before any explicit redirec=
tions are performed, shall be considered to be assigned
to a file that has the same properties as <b>/dev/null</b>. If it is an int=
eractive shell, this need not happen. In all cases,
explicit redirection of standard input shall override this activity.</p>

<p>When an element of an asynchronous list (the portion of the list ended b=
y an &lt;ampersand&gt;, such as <i>command1</i>, above)
is started by the shell, the process ID of the last command in the asynchro=
nous list element shall become known in the current
shell execution environment; see <a href=3D"http://pubs.opengroup.org/onlin=
epubs/9699919799/utilities/V3_chap02.html#tag_18_12">Shell Execution Enviro=
nment</a>. This process ID shall remain known
until:</p>

<ol>
<li>
<p>The command terminates and the application waits for the process ID.</p>
</li>

<li>
<p>Another asynchronous list is invoked before <tt>"$!"</tt> (corresponding=
 to the previous asynchronous list) is expanded in the
current execution environment.</p>
</li>
</ol>

<p>The implementation need not retain more than the {CHILD_MAX} most recent=
 entries in its list of known process IDs in the current
shell execution environment.</p>

<h5><a name=3D"tag_18_09_03_03"></a>Exit Status</h5>

<p>The exit status of an asynchronous list shall be zero.</p>

<h5><a name=3D"tag_18_09_03_04"></a>Sequential Lists</h5>

<p>Commands that are separated by a &lt;semicolon&gt; ( <tt>';'</tt> ) shal=
l be executed sequentially.</p>

<p>The format for executing commands sequentially shall be:</p>

<pre><i>command1</i> <b>[</b><tt>;</tt> <i>command2</i><b>]</b> <tt>...
</tt>
</pre>

<p>Each command shall be expanded and executed in the order specified.</p>

<h5><a name=3D"tag_18_09_03_05"></a>Exit Status</h5>

<p>The exit status of a sequential list shall be the exit status of the las=
t command in the list.</p>

<h5><a name=3D"tag_18_09_03_06"></a>AND Lists</h5>

<p>The control operator <tt>"&amp;&amp;"</tt> denotes an AND list. The form=
at shall be:</p>

<pre><i>command1</i> <b>[</b> <tt>&amp;&amp;</tt> <i>command2</i><b>]</b> <=
tt>...
</tt>
</pre>

<p>First <i>command1</i> shall be executed. If its exit status is zero, <i>=
command2</i> shall be executed, and so on, until a
command has a non-zero exit status or there are no more commands left to ex=
ecute. The commands are expanded only if they are
executed.</p>

<h5><a name=3D"tag_18_09_03_07"></a>Exit Status</h5>

<p>The exit status of an AND list shall be the exit status of the last comm=
and that is executed in the list.</p>

<h5><a name=3D"tag_18_09_03_08"></a>OR Lists</h5>

<p>The control operator <tt>"||"</tt> denotes an OR List. The format shall =
be:</p>

<pre><i>command1</i> <b>[</b> <tt>||</tt> <i>command2</i><b>]</b> <tt>...
</tt>
</pre>

<p>First, <i>command1</i> shall be executed. If its exit status is non-zero=
, <i>command2</i> shall be executed, and so on, until a
command has a zero exit status or there are no more commands left to execut=
e.</p>

<h5><a name=3D"tag_18_09_03_09"></a>Exit Status</h5>

<p>The exit status of an OR list shall be the exit status of the last comma=
nd that is executed in the list.</p>

<h4><a name=3D"tag_18_09_04">  2.9.4  </a>Compound Commands</h4>

<p>The shell has several programming constructs that are "compound commands=
", which provide control flow for commands. Each of
these compound commands has a reserved word or control operator at the begi=
nning, and a corresponding terminator reserved word or
operator at the end. In addition, each can be followed by redirections on t=
he same line as the terminator. Each redirection shall
apply to all the commands within the compound command that do not explicitl=
y override that redirection.</p>

<h5><a name=3D"tag_18_09_04_01"></a>Grouping Commands</h5>

<p>The format for grouping commands is as follows:</p>

<dl compact=3D"">
<dt>(<i>compound-list</i>)</dt>

<dd>Execute <i>compound-list</i> in a subshell environment; see <a href=3D"=
http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#ta=
g_18_12">Shell Execution Environment</a>. Variable
assignments and built-in commands that affect the environment shall not rem=
ain in effect after the list finishes.=20

<p>If a character sequence beginning with <tt>"(("</tt> would be parsed by =
the shell as an arithmetic expansion if preceded by a
<tt>'$'</tt>, shells which implement an extension whereby <tt>"((<i>express=
ion</i>))"</tt> is evaluated as an arithmetic
expression may treat the <tt>"(("</tt> as introducing as an arithmetic eval=
uation instead of a grouping command. A conforming
application shall ensure that it separates the two leading <tt>'('</tt> cha=
racters with white space to prevent the shell from
performing an arithmetic evaluation.</p>
</dd>

<dt>{&nbsp;<i>compound-list</i>;}</dt>

<dd>Execute <i>compound-list</i> in the current process environment. The se=
micolon shown here is an example of a control operator
delimiting the <b>}</b> reserved word. Other delimiters are possible, as sh=
own in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#tag_18_10">Shell Grammar</a>; a
&lt;newline&gt; is frequently used.</dd>
</dl>

<h5><a name=3D"tag_18_09_04_02"></a>Exit Status</h5>

<p>The exit status of a grouping command shall be the exit status of <i>com=
pound-list</i>.</p>

<h5><a name=3D"tag_18_09_04_03"></a>The for Loop</h5>

<p>The <b>for</b> loop shall execute a sequence of commands for each member=
 in a list of <i>items</i>. The <b>for</b> loop requires
that the reserved words <b>do</b> and <b>done</b> be used to delimit the se=
quence of commands.</p>

<p>The format for the <b>for</b> loop is as follows:</p>

<pre><tt>for</tt> <i>name</i> <tt></tt><b>[</b> <tt>in</tt> <b>[</b><i>word=
</i> <tt>...</tt> <b>]]</b>
<tt>do
   </tt> <i>compound-list</i><tt>
done
</tt>
</pre>

<p>First, the list of words following <b>in</b> shall be expanded to genera=
te a list of items. Then, the variable <i>name</i> shall
be set to each item, in turn, and the <i>compound-list</i> executed each ti=
me. If no items result from the expansion, the
<i>compound-list</i> shall not be executed. Omitting:</p>

<pre><tt>in</tt> <i>word</i>...
</pre>

<p>shall be equivalent to:</p>

<pre><tt>in "$@"
</tt>
</pre>

<h5><a name=3D"tag_18_09_04_04"></a>Exit Status</h5>

<p>The exit status of a <b>for</b> command shall be the exit status of the =
last command that executes. If there are no items, the
exit status shall be zero.</p>

<h5><a name=3D"tag_18_09_04_05"></a>Case Conditional Construct</h5>

<p>The conditional construct <b>case</b> shall execute the <i>compound-list=
</i> corresponding to the first one of several
<i>patterns</i> (see <a href=3D"http://pubs.opengroup.org/onlinepubs/969991=
9799/utilities/V3_chap02.html#tag_18_13">Pattern Matching Notation</a>) tha=
t is matched by the string resulting from the tilde
expansion, parameter expansion, command substitution, arithmetic expansion,=
 and quote removal of the given word. The reserved word
<b>in</b> shall denote the beginning of the patterns to be matched. Multipl=
e patterns with the same <i>compound-list</i> shall be
delimited by the <tt>'|'</tt> symbol. The control operator <tt>')'</tt> ter=
minates a list of patterns corresponding to a given
action. The <i>compound-list</i> for each list of patterns, with the possib=
le exception of the last, shall be terminated with
<tt>";;"</tt>. The <b>case</b> construct terminates with the reserved word =
<b>esac</b> (<b>case</b> reversed).<br>
</p>

<p>The format for the <b>case</b> construct is as follows:</p>

<pre><tt>case</tt> <i>word</i> <tt>in
   </tt> <b>[</b><tt>(</tt><b>]</b><i>pattern1</i><tt>)</tt> <i>compound-li=
st</i><tt>;;
   </tt> <b>[[</b><tt>(</tt><b>]</b><i>pattern</i><b>[</b> <tt>|</tt> <i>pa=
ttern</i><b>]</b> <tt>... )</tt> <i>compound-list</i><tt>;;</tt><b>]</b> <t=
t>...
   </tt> <b>[[</b><tt>(</tt><b>]</b><i>pattern</i><b>[</b> <tt>|</tt> <i>pa=
ttern</i><b>]</b> <tt>... )</tt> <i>compound-list</i><b>]</b>
<tt>esac
</tt>
</pre>

<p>The <tt>";;"</tt> is optional for the last <i>compound-list</i>.</p>

<p>In order from the beginning to the end of the <b>case</b> statement, eac=
h <i>pattern</i> that labels a <i>compound-list</i>
shall be subjected to tilde expansion, parameter expansion, command substit=
ution, and arithmetic expansion, and the result of these
expansions shall be compared against the expansion of <i>word</i>, accordin=
g to the rules described in <a href=3D"http://pubs.opengroup.org/onlinepubs=
/9699919799/utilities/V3_chap02.html#tag_18_13">Pattern
Matching Notation</a> (which also describes the effect of quoting parts of =
the pattern). After the first match, no more patterns
shall be expanded, and the <i>compound-list</i> shall be executed. The orde=
r of expansion and comparison of multiple
<i>pattern</i>s that label a <i>compound-list</i> statement is unspecified.=
</p>

<h5><a name=3D"tag_18_09_04_06"></a>Exit Status</h5>

<p>The exit status of <b>case</b> shall be zero if no patterns are matched.=
 Otherwise, the exit status shall be the exit status of
the last command executed in the <i>compound-list</i>.</p>

<h5><a name=3D"tag_18_09_04_07"></a>The if Conditional Construct</h5>

<p>The <b>if</b> command shall execute a <i>compound-list</i> and use its e=
xit status to determine whether to execute another
<i>compound-list</i>.</p>

<p>The format for the <b>if</b> construct is as follows:</p>

<pre><tt>if</tt> <i>compound-list</i>
<tt>then
   </tt> <i>compound-list</i>
<b>[</b><tt>elif</tt> <i>compound-list</i>
<tt>then
   </tt> <i>compound-list</i><b>]</b> <tt>...</tt>
<b>[</b><tt>else
   </tt> <i>compound-list</i><b>]</b>
<tt>fi
</tt>
</pre>

<p>The <b>if</b> <i>compound-list</i> shall be executed; if its exit status=
 is zero, the <b>then</b> <i>compound-list</i> shall be
executed and the command shall complete. Otherwise, each <b>elif</b> <i>com=
pound-list</i> shall be executed, in turn, and if its
exit status is zero, the <b>then</b> <i>compound-list</i> shall be executed=
 and the command shall complete. Otherwise, the
<b>else</b> <i>compound-list</i> shall be executed.</p>

<h5><a name=3D"tag_18_09_04_08"></a>Exit Status</h5>

<p>The exit status of the <b>if</b> command shall be the exit status of the=
 <b>then</b> or <b>else</b> <i>compound-list</i> that
was executed, or zero, if none was executed.</p>

<h5><a name=3D"tag_18_09_04_09"></a>The while Loop</h5>

<p>The <b>while</b> loop shall continuously execute one <i>compound-list</i=
> as long as another <i>compound-list</i> has a zero
exit status.</p>

<p>The format of the <b>while</b> loop is as follows:</p>

<pre><tt>while</tt> <i>compound-list-1</i>
<tt>do
   </tt> <i>compound-list-2</i><tt>
done
</tt>
</pre>

<p>The <i>compound-list-1</i> shall be executed, and if it has a non-zero e=
xit status, the <b>while</b> command shall complete.
Otherwise, the <i>compound-list-2</i> shall be executed, and the process sh=
all repeat.</p>

<h5><a name=3D"tag_18_09_04_10"></a>Exit Status</h5>

<p>The exit status of the <b>while</b> loop shall be the exit status of the=
 last <i>compound-list-2</i> executed, or zero if none
was executed.</p>

<h5><a name=3D"tag_18_09_04_11"></a>The until Loop</h5>

<p>The <b>until</b> loop shall continuously execute one <i>compound-list</i=
> as long as another <i>compound-list</i> has a non-zero
exit status.</p>

<p>The format of the <b>until</b> loop is as follows:</p>

<pre><tt>until</tt> <i>compound-list-1</i>
<tt>do
   </tt> <i>compound-list-2</i><tt>
done
</tt>
</pre>

<p>The <i>compound-list-1</i> shall be executed, and if it has a zero exit =
status, the <b>until</b> command completes. Otherwise,
the <i>compound-list-2</i> shall be executed, and the process repeats.</p>

<h5><a name=3D"tag_18_09_04_12"></a>Exit Status</h5>

<p>The exit status of the <b>until</b> loop shall be the exit status of the=
 last <i>compound-list-2</i> executed, or zero if none
was executed.</p>

<h4><a name=3D"tag_18_09_05">  2.9.5  </a>Function Definition Command</h4>

<p>A function is a user-defined name that is used as a simple command to ca=
ll a compound command with new positional parameters. A
function is defined with a "function definition command".</p>

<p>The format of a function definition command is as follows:</p>

<pre><i>fname</i><tt>()</tt> <i>compound-command</i><b>[</b><i>io-redirect<=
/i> <tt>...</tt><b>]</b>
</pre>

<p>The function is named <i>fname</i>; the application shall ensure that it=
 is a name (see XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919=
799/basedefs/V1_chap03.html#tag_03_231"><i>Name</i></a>) and that it is not=
 the name of a special built-in utility. An
implementation may allow other characters in a function name as an extensio=
n. The implementation shall maintain separate name
spaces for functions and variables.</p>

<p>The argument <i>compound-command</i> represents a compound command, as d=
escribed in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/util=
ities/V3_chap02.html#tag_18_09_04">Compound
Commands</a>.</p>

<p>When the function is declared, none of the expansions in <a href=3D"http=
://pubs.opengroup.org/onlinepubs/9699919799/functions/wordexp.html#"><i>wor=
dexp</i></a> shall be
performed on the text in <i>compound-command</i> or <i>io-redirect</i>; all=
 expansions shall be performed as normal each time the
function is called. Similarly, the optional <i>io-redirect</i> redirections=
 and any variable assignments within
<i>compound-command</i> shall be performed during the execution of the func=
tion itself, not the function definition. See <a href=3D"http://pubs.opengr=
oup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_08_01">Conseq=
uences of Shell Errors</a> for the consequences of failures of these operat=
ions on interactive and
non-interactive shells.</p>

<p>When a function is executed, it shall have the syntax-error and variable=
-assignment properties described for special built-in
utilities in the enumerated list at the beginning of <a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_14">Sp=
ecial Built-In Utilities</a>.</p>

<p>The <i>compound-command</i> shall be executed whenever the function name=
 is specified as the name of a simple command (see <a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_01_01=
">Command Search and Execution</a>). The operands to the command temporaril=
y shall become the positional
parameters during the execution of the <i>compound-command</i>; the special=
 parameter <tt>'#'</tt> also shall be changed to reflect
the number of operands. The special parameter 0 shall be unchanged. When th=
e function completes, the values of the positional
parameters and the special parameter <tt>'#'</tt> shall be restored to the =
values they had before the function was executed. If the
special built-in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799=
/utilities/V3_chap02.html#return"><i>return</i></a> (see <a href=3D"http://=
pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_24=
">return</a>) is executed in the
<i>compound-command</i>, the function completes and execution shall resume =
with the next command after the function call.</p>

<h5><a name=3D"tag_18_09_05_01"></a>Exit Status</h5>

<p>The exit status of a function definition shall be zero if the function w=
as declared successfully; otherwise, it shall be greater
than zero. The exit status of a function invocation shall be the exit statu=
s of the last command executed by the function.</p>

<h3><a name=3D"tag_18_10">   2.10.  </a>Shell Grammar</h3>

<p>The following grammar defines the Shell Command Language. This formal sy=
ntax shall take precedence over the preceding text
syntax description.</p>

<h4><a name=3D"tag_18_10_01">  2.10.1  </a>Shell Grammar Lexical Convention=
s</h4>

<p>The input language to the shell must be first recognized at the characte=
r level. The resulting tokens shall be classified by
their immediate context according to the following rules (applied in order)=
. These rules shall be used to determine what a
"token" is that is subject to parsing at the token level. The rules for tok=
en recognition in <a href=3D"http://pubs.opengroup.org/onlinepubs/969991979=
9/utilities/V3_chap02.html#tag_18_03">Token
Recognition</a> shall apply.</p>

<ol>
<li>
<p>A &lt;newline&gt; shall be returned as the token identifier <b>NEWLINE</=
b>.</p>
</li>

<li>
<p>If the token is an operator, the token identifier for that operator shal=
l result.</p>
</li>

<li>
<p>If the string consists solely of digits and the delimiter character is o=
ne of <tt>'&lt;'</tt> or <tt>'&gt;'</tt>, the token
identifier <b>IO_NUMBER</b> shall be returned.</p>
</li>

<li>
<p>Otherwise, the token identifier <b>TOKEN</b> results.</p>
</li>
</ol>

<p>Further distinction on <b>TOKEN</b> is context-dependent. It may be that=
 the same <b>TOKEN</b> yields <b>WORD</b>, a
<b>NAME</b>, an <b>ASSIGNMENT</b>, or one of the reserved words below, depe=
ndent upon the context. Some of the productions in the
grammar below are annotated with a rule number from the following list. Whe=
n a <b>TOKEN</b> is seen where one of those annotated
productions could be used to reduce the symbol, the applicable rule shall b=
e applied to convert the token identifier type of the
<b>TOKEN</b> to a token identifier acceptable at that point in the grammar.=
 The reduction shall then proceed based upon the token
identifier type yielded by the rule applied. When more than one rule applie=
s, the highest numbered rule shall apply (which in turn
may refer to another rule). (Note that except in rule 7, the presence of an=
 <tt>'=3D'</tt> in the token has no effect.)</p>

<p>The <b>WORD</b> tokens shall have the word expansion rules applied to th=
em immediately before the associated command is
executed, not at the time the command is parsed.</p>

<h4><a name=3D"tag_18_10_02">  2.10.2  </a>Shell Grammar Rules</h4>

<ol>
<li>
<p>[Command Name]</p>

<p>When the <b>TOKEN</b> is exactly a reserved word, the token identifier f=
or that reserved word shall result. Otherwise, the token
<b>WORD</b> shall be returned. Also, if the parser is in any state where on=
ly a reserved word could be the next correct token,
proceed as above. <basefont size=3D"2"></p>

<dl>
<dt><b>Note:</b></dt>

<dd>Because at this point &lt;quotation-mark&gt; characters are retained in=
 the token, quoted strings cannot be recognized as
reserved words. This rule also implies that reserved words are not recogniz=
ed except in certain positions in the input, such as
after a &lt;newline&gt; or &lt;semicolon&gt;; the grammar presumes that if =
the reserved word is intended, it is properly delimited
by the user, and does not attempt to reflect that requirement directly. Als=
o note that line joining is done before tokenization, as
described in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/uti=
lities/V3_chap02.html#tag_18_02_01">Escape Character (Backslash)</a>, so es=
caped &lt;newline&gt; characters are already removed
at this point.</dd>
</dl>

<basefont size=3D"3">=20

<p>Rule 1 is not directly referenced in the grammar, but is referred to by =
other rules, or applies globally.</p>
</li>

<li>
<p>[Redirection to or from filename]</p>

<p>The expansions specified in <a href=3D"http://pubs.opengroup.org/onlinep=
ubs/9699919799/utilities/V3_chap02.html#tag_18_07">Redirection</a> shall oc=
cur. As specified there, exactly one field can result
(or the result is unspecified), and there are additional requirements on pa=
thname expansion.</p>
</li>

<li>
<p>[Redirection from here-document]</p>

<p>Quote removal shall be applied to the word to determine the delimiter th=
at is used to find the end of the here-document that
begins after the next &lt;newline&gt;.</p>
</li>

<li>
<p>[Case statement termination]</p>

<p>When the <b>TOKEN</b> is exactly the reserved word <b>esac</b>, the toke=
n identifier for <b>esac</b> shall result. Otherwise,
the token <b>WORD</b> shall be returned.</p>
</li>

<li>
<p>[ <b>NAME</b> in <b>for</b>]</p>

<p>When the <b>TOKEN</b> meets the requirements for a name (see XBD <a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html=
#tag_03_231"><i>Name</i></a>
), the token identifier <b>NAME</b> shall result. Otherwise, the token <b>W=
ORD</b> shall be returned.</p>
</li>

<li>
<p>[Third word of <b>for</b> and <b>case</b>]</p>

<ol type=3D"a">
<li>
<p>[ <b>case</b> only]</p>

<p>When the <b>TOKEN</b> is exactly the reserved word <b>in</b>, the token =
identifier for <b>in</b> shall result. Otherwise, the
token <b>WORD</b> shall be returned.</p>
</li>

<li>
<p>[ <b>for</b> only]</p>

<p>When the <b>TOKEN</b> is exactly the reserved word <b>in</b> or <b>do</b=
>, the token identifier for <b>in</b> or <b>do</b> shall
result, respectively. Otherwise, the token <b>WORD</b> shall be returned.</=
p>
</li>
</ol>

<p>(For a. and b.: As indicated in the grammar, a <i>linebreak</i> precedes=
 the tokens <b>in</b> and <b>do</b>. If &lt;newline&gt;
characters are present at the indicated location, it is the token after the=
m that is treated in this fashion.)</p>
</li>

<li>
<p>[Assignment preceding command name]</p>

<ol type=3D"a">
<li>
<p>[When the first word]</p>

<p>If the <b>TOKEN</b> does not contain the character <tt>'=3D'</tt>, rule =
1 is applied. Otherwise, 7b shall be applied.</p>
</li>

<li>
<p>[Not the first word]</p>

<p>If the <b>TOKEN</b> contains the &lt;equals-sign&gt; character:</p>

<ul>
<li>
<p>If it begins with <tt>'=3D'</tt>, the token <b>WORD</b> shall be returne=
d.</p>
</li>

<li>
<p>If all the characters preceding <tt>'=3D'</tt> form a valid name (see XB=
D <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_ch=
ap03.html#tag_03_231"><i>Name</i></a>), the token <b>ASSIGNMENT_WORD</b> sh=
all be returned. (Quoted characters
cannot participate in forming a valid name.)</p>
</li>

<li>
<p>Otherwise, it is unspecified whether it is <b>ASSIGNMENT_WORD</b> or <b>=
WORD</b> that is returned.</p>
</li>
</ul>
</li>
</ol>

<p>Assignment to the <b>NAME</b> shall occur as specified in <a href=3D"htt=
p://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_1=
8_09_01">Simple Commands</a>.</p>
</li>

<li>
<p>[ <b>NAME</b> in function]</p>

<p>When the <b>TOKEN</b> is exactly a reserved word, the token identifier f=
or that reserved word shall result. Otherwise, when the
<b>TOKEN</b> meets the requirements for a name, the token identifier <b>NAM=
E</b> shall result. Otherwise, rule 7 applies.</p>
</li>

<li>
<p>[Body of function]</p>

<p>Word expansion and assignment shall never occur, even when required by t=
he rules above, when this rule is being parsed. Each
<b>TOKEN</b> that might either be expanded or have assignment applied to it=
 shall instead be returned as a single <b>WORD</b>
consisting only of characters that are exactly the token described in <a hr=
ef=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.h=
tml#tag_18_03">Token Recognition</a>.</p>
</li>
</ol>

<br>
<pre><tt>/* -------------------------------------------------------
   The grammar symbols
   ------------------------------------------------------- */
%token  WORD
%token  ASSIGNMENT_WORD
%token  NAME
%token  NEWLINE
%token  IO_NUMBER
<br>
/* The following are the operators mentioned above. */
<br>
%token  AND_IF    OR_IF    DSEMI
/*      '&amp;&amp;'      '||'     ';;'    */
<br>
%token  DLESS  DGREAT  LESSAND  GREATAND  LESSGREAT  DLESSDASH
/*      '&lt;&lt;'   '&gt;&gt;'    '&lt;&amp;'     '&gt;&amp;'      '&lt;&g=
t;'       '&lt;&lt;-'   */
<br>
%token  CLOBBER
/*      '&gt;|'   */
<br>
/* The following are the reserved words. */
<br>
%token  If    Then    Else    Elif    Fi    Do    Done
/*      'if'  'then'  'else'  'elif'  'fi'  'do'  'done'   */
<br>
%token  Case    Esac    While    Until    For
/*      'case'  'esac'  'while'  'until'  'for'   */
<br>
/* These are reserved words, not operator tokens, and are
   recognized when reserved words are recognized. */
<br>
%token  Lbrace    Rbrace    Bang
/*      '{'       '}'       '!'   */
<br>
%token  In
/*      'in'   */
<br>
/* -------------------------------------------------------
   The Grammar
   ------------------------------------------------------- */
%start  complete_command
%%
complete_command : list separator
                 | list
                 ;
list             : list separator_op and_or
                 |                   and_or
                 ;
and_or           :                         pipeline
                 | and_or AND_IF linebreak pipeline
                 | and_or OR_IF  linebreak pipeline
                 ;
pipeline         :      pipe_sequence
                 | Bang pipe_sequence
                 ;
pipe_sequence    :                             command
                 | pipe_sequence '|' linebreak command
                 ;
command          : simple_command
                 | compound_command
                 | compound_command redirect_list
                 | function_definition
                 ;
compound_command : brace_group
                 | subshell
                 | for_clause
                 | case_clause
                 | if_clause
                 | while_clause
                 | until_clause
                 ;
subshell         : '(' compound_list ')'
                 ;
compound_list    :              term
                 | newline_list term
                 |              term separator
                 | newline_list term separator
                 ;
term             : term separator and_or
                 |                and_or
                 ;
for_clause       : For name linebreak                            do_group
                 | For name linebreak in          sequential_sep do_group
                 | For name linebreak in wordlist sequential_sep do_group
                 ;
name             : NAME                     /* Apply rule 5 */
                 ;
in               : In                       /* Apply rule 6 */
                 ;
wordlist         : wordlist WORD
                 |          WORD
                 ;
case_clause      : Case WORD linebreak in linebreak case_list    Esac
                 | Case WORD linebreak in linebreak case_list_ns Esac
                 | Case WORD linebreak in linebreak              Esac
                 ;
case_list_ns     : case_list case_item_ns
                 |           case_item_ns
                 ;
case_list        : case_list case_item
                 |           case_item
                 ;
case_item_ns     :     pattern ')'               linebreak
                 |     pattern ')' compound_list linebreak
                 | '(' pattern ')'               linebreak
                 | '(' pattern ')' compound_list linebreak
                 ;
case_item        :     pattern ')' linebreak     DSEMI linebreak
                 |     pattern ')' compound_list DSEMI linebreak
                 | '(' pattern ')' linebreak     DSEMI linebreak
                 | '(' pattern ')' compound_list DSEMI linebreak
                 ;
pattern          :             WORD         /* Apply rule 4 */
                 | pattern '|' WORD         /* Do not apply rule 4 */
                 ;
if_clause        : If compound_list Then compound_list else_part Fi
                 | If compound_list Then compound_list           Fi
                 ;
else_part        : Elif compound_list Then compound_list
                 | Elif compound_list Then compound_list else_part
                 | Else compound_list
                 ;
while_clause     : While compound_list do_group
                 ;
until_clause     : Until compound_list do_group
                 ;
function_definition : fname '(' ')' linebreak function_body
                 ;
function_body    : compound_command                /* Apply rule 9 */
                 | compound_command redirect_list  /* Apply rule 9 */
                 ;
fname            : NAME                            /* Apply rule 8 */
                 ;
brace_group      : Lbrace compound_list Rbrace
                 ;
do_group         : Do compound_list Done           /* Apply rule 6 */
                 ;
simple_command   : cmd_prefix cmd_word cmd_suffix
                 | cmd_prefix cmd_word
                 | cmd_prefix
                 | cmd_name cmd_suffix
                 | cmd_name
                 ;
cmd_name         : WORD                   /* Apply rule 7a */
                 ;
cmd_word         : WORD                   /* Apply rule 7b */
                 ;
cmd_prefix       :            io_redirect
                 | cmd_prefix io_redirect
                 |            ASSIGNMENT_WORD
                 | cmd_prefix ASSIGNMENT_WORD
                 ;
cmd_suffix       :            io_redirect
                 | cmd_suffix io_redirect
                 |            WORD
                 | cmd_suffix WORD
                 ;
redirect_list    :               io_redirect
                 | redirect_list io_redirect
                 ;
io_redirect      :           io_file
                 | IO_NUMBER io_file
                 |           io_here
                 | IO_NUMBER io_here
                 ;
io_file          : '&lt;'       filename
                 | LESSAND   filename
                 | '&gt;'       filename
                 | GREATAND  filename
                 | DGREAT    filename
                 | LESSGREAT filename
                 | CLOBBER   filename
                 ;
filename         : WORD                      /* Apply rule 2 */
                 ;
io_here          : DLESS     here_end
                 | DLESSDASH here_end
                 ;
here_end         : WORD                      /* Apply rule 3 */
                 ;
newline_list     :              NEWLINE
                 | newline_list NEWLINE
                 ;
linebreak        : newline_list
                 | /* empty */
                 ;
separator_op     : '&amp;'
                 | ';'
                 ;
separator        : separator_op linebreak
                 | newline_list
                 ;
sequential_sep   : ';' linebreak
                 | newline_list
                 ;
</tt>
</pre>

<h3><a name=3D"tag_18_11">   2.11.  </a>Signals and Error Handling</h3>

<p>When a command is in an asynchronous list, it shall inherit from the she=
ll a signal action of ignored (SIG_IGN) for the SIGQUIT
and SIGINT signals, and may inherit a signal mask in which SIGQUIT and SIGI=
NT are blocked. Otherwise, the signal actions and signal
mask inherited by the command shall be the same as those inherited by the s=
hell from its parent unless a signal action is modified
by the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#trap"><i>trap</i></a> special built-in (see <a href=3D"http=
://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18=
_28">trap</a>)</p>

<p>When a signal for which a trap has been set is received while the shell =
is waiting for the completion of a utility executing a
foreground command, the trap associated with that signal shall not be execu=
ted until after the foreground command has completed.
When the shell is waiting, by means of the <a href=3D"http://pubs.opengroup=
.org/onlinepubs/9699919799/utilities/wait.html"><i>wait</i></a> utility, fo=
r asynchronous commands to
complete, the reception of a signal for which a trap has been set shall cau=
se the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/wait.html"><i>wait</i></a>
utility to return immediately with an exit status &gt;128, immediately afte=
r which the trap associated with that signal shall be
taken.</p>

<p>If multiple signals are pending for the shell for which there are associ=
ated trap actions, the order of execution of trap
actions is unspecified.</p>

<h3><a name=3D"tag_18_12">   2.12.  </a>Shell Execution Environment</h3>

<p>A shell execution environment consists of the following:</p>

<ul>
<li>
<p>Open files inherited upon invocation of the shell, plus open files contr=
olled by <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utiliti=
es/V3_chap02.html#exec"><i>exec</i></a></p>
</li>

<li>
<p>Working directory as set by <a href=3D"http://pubs.opengroup.org/onlinep=
ubs/9699919799/utilities/cd.html"><i>cd</i></a></p>
</li>

<li>
<p>File creation mask set by <a href=3D"http://pubs.opengroup.org/onlinepub=
s/9699919799/utilities/umask.html"><i>umask</i></a></p>
</li>

<li>
<p>Current traps set by <a href=3D"http://pubs.opengroup.org/onlinepubs/969=
9919799/utilities/V3_chap02.html#trap"><i>trap</i></a></p>
</li>

<li>
<p>Shell parameters that are set by variable assignment (see the <a href=3D=
"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#t=
ag_18_25">set</a> special built-in) or from the System
Interfaces volume of POSIX.1-2008 environment inherited by the shell when i=
t begins (see the <a href=3D"http://pubs.opengroup.org/onlinepubs/969991979=
9/utilities/V3_chap02.html#tag_18_22">export</a>
special built-in)</p>
</li>

<li>
<p>Shell functions; see <a href=3D"http://pubs.opengroup.org/onlinepubs/969=
9919799/utilities/V3_chap02.html#tag_18_09_05">Function Definition Command<=
/a></p>
</li>

<li>
<p>Options turned on at invocation or by <a href=3D"http://pubs.opengroup.o=
rg/onlinepubs/9699919799/utilities/V3_chap02.html#set"><i>set</i></a></p>
</li>

<li>
<p>Process IDs of the last commands in asynchronous lists known to this she=
ll environment; see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919=
799/utilities/V3_chap02.html#tag_18_09_03_02">Asynchronous Lists</a></p>
</li>

<li>
<p>Shell aliases; see <a href=3D"http://pubs.opengroup.org/onlinepubs/96999=
19799/utilities/V3_chap02.html#tag_18_03_01">Alias Substitution</a></p>
</li>
</ul>

<p>Utilities other than the special built-ins (see <a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_14">Spec=
ial Built-In Utilities</a>) shall be invoked in a
separate environment that consists of the following. The initial value of t=
hese objects shall be the same as that for the parent
shell, except as noted below.</p>

<ul>
<li>
<p>Open files inherited on invocation of the shell, open files controlled b=
y the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/=
V3_chap02.html#exec"><i>exec</i></a> special built-in
plus any modifications, and additions specified by any redirections to the =
utility</p>
</li>

<li>
<p>Current working directory</p>
</li>

<li>
<p>File creation mask</p>
</li>

<li>
<p>If the utility is a shell script, traps caught by the shell shall be set=
 to the default values and traps ignored by the shell
shall be set to be ignored by the utility; if the utility is not a shell sc=
ript, the trap actions (default or ignore) shall be
mapped into the appropriate signal handling actions for the utility</p>
</li>

<li>
<p>Variables with the <a href=3D"http://pubs.opengroup.org/onlinepubs/96999=
19799/utilities/V3_chap02.html#export"><i>export</i></a> attribute, along w=
ith those explicitly exported for the duration of the
command, shall be passed to the utility environment variables</p>
</li>
</ul>

<p>The environment of the shell process shall not be changed by the utility=
 unless explicitly specified by the utility description
(for example, <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/ut=
ilities/cd.html"><i>cd</i></a> and <a href=3D"http://pubs.opengroup.org/onl=
inepubs/9699919799/utilities/umask.html"><i>umask</i></a>).</p>

<p>A subshell environment shall be created as a duplicate of the shell envi=
ronment, except that signal traps that are not being
ignored shall be set to the default action. Changes made to the subshell en=
vironment shall not affect the shell environment.
Command substitution, commands that are grouped with parentheses, and async=
hronous lists shall be executed in a subshell
environment. Additionally, each command of a multi-command pipeline is in a=
 subshell environment; as an extension, however, any or
all commands in a pipeline may be executed in the current environment. All =
other commands shall be executed in the current shell
environment.</p>

<h3><a name=3D"tag_18_13">   2.13.  </a>Pattern Matching Notation</h3>

<p>The pattern matching notation described in this section is used to speci=
fy patterns for matching strings in the shell.
Historically, pattern matching notation is related to, but slightly differe=
nt from, the regular expression notation described in
XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_=
chap09.html#tag_09"><i>Regular Expressions</i></a>. For this reason, the de=
scription of the rules for
this pattern matching notation are based on the description of regular expr=
ession notation, modified to account for the
differences.</p>

<h4><a name=3D"tag_18_13_01">  2.13.1  </a>Patterns Matching a Single Chara=
cter</h4>

<p>The following patterns matching a single character shall match a single =
character: ordinary characters, special pattern
characters, and pattern bracket expressions. The pattern bracket expression=
 also shall match a single collating element. A
&lt;backslash&gt; character shall escape the following character. The escap=
ing &lt;backslash&gt; shall be discarded.</p>

<p>An ordinary character is a pattern that shall match itself. It can be an=
y character in the supported character set except for
NUL, those special shell characters in <a href=3D"http://pubs.opengroup.org=
/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_02">Quoting</a> that=
 require quoting, and the following three special
pattern characters. Matching shall be based on the bit pattern used for enc=
oding the character, not on the graphic representation
of the character. If any character (ordinary, shell special, or pattern spe=
cial) is quoted, that pattern shall match the character
itself. The shell special characters always require quoting.</p>

<p>When unquoted and outside a bracket expression, the following three char=
acters shall have special meaning in the specification
of patterns:</p>

<dl compact=3D"">
<dt><tt>?</tt></dt>

<dd>A &lt;question-mark&gt; is a pattern that shall match any character.</d=
d>

<dt><tt>*</tt></dt>

<dd>An &lt;asterisk&gt; is a pattern that shall match multiple characters, =
as described in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/=
utilities/V3_chap02.html#tag_18_13_02">Patterns
Matching Multiple Characters</a>.</dd>

<dt><tt>[</tt></dt>

<dd>If an open bracket introduces a bracket expression as in XBD <a href=3D=
"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#ta=
g_09_03_05"><i>RE Bracket
Expression</i></a>, except that the &lt;exclamation-mark&gt; character ( <t=
t>'!'</tt> ) shall replace the &lt;circumflex&gt;
character ( <tt>'^'</tt> ) in its role in a non-matching list in the regula=
r expression notation, it shall introduce a pattern
bracket expression. A bracket expression starting with an unquoted &lt;circ=
umflex&gt; character produces unspecified results.
Otherwise, <tt>'['</tt> shall match the character itself.</dd>
</dl>

<p>When pattern matching is used where shell quote removal is not performed=
 (such as in the argument to the <a href=3D"http://pubs.opengroup.org/onlin=
epubs/9699919799/utilities/find.html"><i>find</i></a> - <i>name</i> primary=
 when <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/=
find.html"><i>find</i></a> is being
called using one of the <i>exec</i> functions as defined in the System Inte=
rfaces volume of POSIX.1-2008, or in the <i>pattern</i>
argument to the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/=
functions/fnmatch.html"><i>fnmatch</i>()</a> function), special characters =
can be escaped to remove
their special meaning by preceding them with a &lt;backslash&gt; character.=
 This escaping &lt;backslash&gt; is discarded. The
sequence <tt>"\\"</tt> represents one literal &lt;backslash&gt;. All of the=
 requirements and effects of quoting on ordinary, shell
special, and special pattern characters shall apply to escaping in this con=
text.</p>

<h4><a name=3D"tag_18_13_02">  2.13.2  </a>Patterns Matching Multiple Chara=
cters</h4>

<p>The following rules are used to construct patterns matching multiple cha=
racters from patterns matching a single character:</p>

<ol>
<li>
<p>The &lt;asterisk&gt; ( <tt>'*'</tt> ) is a pattern that shall match any =
string, including the null string.</p>
</li>

<li>
<p>The concatenation of patterns matching a single character is a valid pat=
tern that shall match the concatenation of the single
characters or collating elements matched by each of the concatenated patter=
ns.</p>
</li>

<li>
<p>The concatenation of one or more patterns matching a single character wi=
th one or more &lt;asterisk&gt; characters is a valid
pattern. In such patterns, each &lt;asterisk&gt; shall match a string of ze=
ro or more characters, matching the greatest possible
number of characters that still allows the remainder of the pattern to matc=
h the string.</p>
</li>
</ol>

<h4><a name=3D"tag_18_13_03">  2.13.3  </a>Patterns Used for Filename Expan=
sion</h4>

<p>The rules described so far in <a href=3D"http://pubs.opengroup.org/onlin=
epubs/9699919799/utilities/V3_chap02.html#tag_18_13_01">Patterns Matching a=
 Single Character</a> and <a href=3D"http://pubs.opengroup.org/onlinepubs/9=
699919799/utilities/V3_chap02.html#tag_18_13_02">Patterns Matching Multiple=
 Characters</a> are qualified by the following rules that apply when patter=
n matching
notation is used for filename expansion:</p>

<ol>
<li>
<p>The &lt;slash&gt; character in a pathname shall be explicitly matched by=
 using one or more &lt;slash&gt; characters in the
pattern; it shall neither be matched by the &lt;asterisk&gt; or &lt;questio=
n-mark&gt; special characters nor by a bracket
expression. &lt;slash&gt; characters in the pattern shall be identified bef=
ore bracket expressions; thus, a &lt;slash&gt; cannot be
included in a pattern bracket expression used for filename expansion. If a =
&lt;slash&gt; character is found following an unescaped
&lt;left-square-bracket&gt; character before a corresponding &lt;right-squa=
re-bracket&gt; is found, the open bracket shall be
treated as an ordinary character. For example, the pattern <tt>"a[b/c]d"</t=
t> does not match such pathnames as <b>abd</b> or
<b>a/d</b>. It only matches a pathname of literally <b>a[b/c]d</b>.</p>
</li>

<li>
<p>If a filename begins with a &lt;period&gt; ( <tt>'.'</tt> ), the &lt;per=
iod&gt; shall be explicitly matched by using a
&lt;period&gt; as the first character of the pattern or immediately followi=
ng a &lt;slash&gt; character. The leading &lt;period&gt;
shall not be matched by:</p>

<ul>
<li>
<p>The &lt;asterisk&gt; or &lt;question-mark&gt; special characters</p>
</li>

<li>
<p>A bracket expression containing a non-matching list, such as <tt>"[!a]"<=
/tt>, a range expression, such as <tt>"[%-0]"</tt>, or
a character class expression, such as <tt>"[[:punct:]]"</tt></p>
</li>
</ul>

<p>It is unspecified whether an explicit &lt;period&gt; in a bracket expres=
sion matching list, such as <tt>"[.abc]"</tt>, can
match a leading &lt;period&gt; in a filename.</p>
</li>

<li>
<p>Specified patterns shall be matched against existing filenames and pathn=
ames, as appropriate. Each component that contains a
pattern character shall require read permission in the directory containing=
 that component. Any component, except the last, that
does not contain a pattern character shall require search permission. For e=
xample, given the pattern:</p>

<pre><tt>/foo/bar/x*/bam
</tt>
</pre>

<p>search permission is needed for directories <b>/</b> and <b>foo</b>, sea=
rch and read permissions are needed for directory
<b>bar</b>, and search permission is needed for each <b>x*</b> directory. I=
f the pattern matches any existing filenames or
pathnames, the pattern shall be replaced with those filenames and pathnames=
, sorted according to the collating sequence in effect
in the current locale.</p>

<p>If the pattern contains an open bracket ( <tt>'['</tt> ) that does not i=
ntroduce a bracket expression as in XBD <a href=3D"http://pubs.opengroup.or=
g/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_03_05"><i>RE Bracket=
 Expression</i></a>, it is unspecified whether other unquoted pattern
matching characters within the same slash-delimited component of the patter=
n retain their special meanings or are treated as
ordinary characters. For example, the pattern <tt>"a*[/b*"</tt> may match a=
ll filenames beginning with <tt>'b'</tt> in the
directory <tt>"a*["</tt> or it may match all filenames beginning with <tt>'=
b'</tt> in all directories with names beginning with
<tt>'a'</tt> and ending with <tt>'['</tt>.</p>

<p>If the pattern does not match any existing filenames or pathnames, the p=
attern string shall be left unchanged.</p>
</li>
</ol>

<h3><a name=3D"tag_18_14">   2.14.  </a>Special Built-In Utilities</h3>

<p>The following "special built-in" utilities shall be supported in the she=
ll command language. The output of each command, if
any, shall be written to standard output, subject to the normal redirection=
 and piping possible with all commands.</p>

<p>The term "built-in" implies that the shell can execute the utility direc=
tly and does not need to search for it. An
implementation may choose to make any utility a built-in; however, the spec=
ial built-in utilities described here differ from
regular built-in utilities in two respects:</p>

<ol>
<li>
<p>A syntax error in a special built-in utility may cause a shell executing=
 that utility to abort, while a syntax error in a
regular built-in utility shall not cause a shell executing that utility to =
abort. (See <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/util=
ities/V3_chap02.html#tag_18_08_01">Consequences of
Shell Errors</a> for the consequences of errors on interactive and non-inte=
ractive shells.) If a special built-in utility
encountering a syntax error does not abort the shell, its exit value shall =
be non-zero.</p>
</li>

<li>
<p>Variable assignments specified with special built-in utilities remain in=
 effect after the built-in completes; this shall not be
the case with a regular built-in or other utility.</p>
</li>
</ol>

<p>The special built-in utilities in this section need not be provided in a=
 manner accessible via the <i>exec</i> family of
functions defined in the System Interfaces volume of POSIX.1-2008.</p>

<p>Some of the special built-ins are described as conforming to XBD <a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html=
#tag_12_02"><i>Utility
Syntax Guidelines</i></a>. For those that are not, the requirement in <a hr=
ef=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap01.h=
tml#tag_17_04"><i>Utility
Description Defaults</i></a> that <tt>"--"</tt> be recognized as a first ar=
gument to be discarded does not apply and a conforming
application shall not use that argument. </p>

<div class=3D"NAVHEADER">
<table summary=3D"Header navigation table" width=3D"100%" border=3D"0" cell=
padding=3D"0" cellspacing=3D"0">
<tbody><tr>
<td width=3D"15%" align=3D"left" valign=3D"bottom"><a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap01.html" accesskey=3D"P=
">&lt;&lt;&lt; Previous</a></td>
<td width=3D"70%" align=3D"center" valign=3D"bottom"><a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/utilities/contents.html">Home</a></td>
<td width=3D"15%" align=3D"right" valign=3D"bottom"><a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap03.html" accesskey=3D"=
N">Next &gt;&gt;&gt;</a></td>
</tr>
</tbody></table>

<hr align=3D"LEFT" width=3D"100%">
</div>



<basefont size=3D"3">=20

<p>&nbsp;</p>

<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_cha=
p02.html#top"><span class=3D"topOfPage">return to top of page</span></a><br=
>
<hr size=3D"2" noshade=3D"">
<center><font size=3D"2">UNIX =AE is a registered Trademark of The Open Gro=
up.<br>
POSIX =AE is a registered Trademark of The IEEE.<br>
Copyright =A9 2001-2013 The IEEE and The Open Group, All Rights Reserved<br=
>
[ <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/mindex.html">M=
ain Index</a> | <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/=
basedefs/contents.html">XBD</a> | <a href=3D"http://pubs.opengroup.org/onli=
nepubs/9699919799/functions/contents.html">XSH</a> | <a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/utilities/contents.html">XCU</a> | <a =
href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/xrat/contents.html"=
>XRAT</a>
]</font></center>

<hr size=3D"2" noshade=3D"">
<a name=3D"break"></a> <a name=3D"tag_18_15"></a><!-- break -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_15_01"></a>NAME</h4>

<blockquote>break - exit from for, while, or until loop</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>break</tt> <b>[</b><i>n</i><b>]</b></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#break"><i>break</i></a> utility shall exit from the smalles=
t enclosing <b>for</b>, <b>while</b>, or <b>until</b>
loop, if any; or from the <i>n</i>th enclosing loop if <i>n</i> is specifie=
d. The value of <i>n</i> is an unsigned decimal integer
greater than or equal to 1. The default shall be equivalent to <i>n</i>=3D1=
. If <i>n</i> is greater than the number of enclosing
loops, the outermost enclosing loop shall be exited. Execution shall contin=
ue with the command immediately following the loop.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_04"></a>OPTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_10"></a>STDOUT</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_14"></a>EXIT STATUS</h4>

<blockquote>
<dl compact=3D"">
<dt>&nbsp;0</dt>

<dd>Successful completion.</dd>

<dt>&gt;0</dt>

<dd>The <i>n</i> value was not an unsigned decimal integer greater than or =
equal to 1.</dd>
</dl>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_15_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_17"></a>EXAMPLES</h4>

<blockquote>
<pre><tt>for i in *
do
    if test -d "$i"
    then break
    fi
done
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_18"></a>RATIONALE</h4>

<blockquote>
<p>In early proposals, consideration was given to expanding the syntax of <=
a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap=
02.html#break"><i>break</i></a> and <a href=3D"http://pubs.opengroup.org/on=
linepubs/9699919799/utilities/V3_chap02.html#continue"><i>continue</i></a> =
to refer to a label associated with the appropriate loop as a preferable al=
ternative to the
<i>n</i> method. However, this volume of POSIX.1-2008 does reserve the name=
 space of command names ending with a &lt;colon&gt;. It
is anticipated that a future implementation could take advantage of this an=
d provide something like:</p>

<pre><tt>outofloop: for i in a b c d e
do
    for j in 0 1 2 3 4 5 6 7 8 9
    do
        if test -r "${i}${j}"
        then break outofloop
        fi
    done
done
</tt>
</pre>

<p>and that this might be standardized after implementation experience is a=
chieved.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_15_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_15_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>


<basefont size=3D"3"> <a name=3D"colon"></a> <a name=3D"tag_18_16"></a><!--=
 colon -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_16_01"></a>NAME</h4>

<blockquote>colon - null utility</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>:</tt> <b>[</b><i>argument</i><tt>...</tt><b>]</b></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_03"></a>DESCRIPTION</h4>

<blockquote>
<p>This utility shall only expand command <i>argument</i>s. It is used when=
 a command is needed, as in the <b>then</b> condition of
an <b>if</b> command, but nothing is to be done by the command.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_04"></a>OPTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_10"></a>STDOUT</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_14"></a>EXIT STATUS</h4>

<blockquote>
<p>Zero.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_16_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_17"></a>EXAMPLES</h4>

<blockquote>
<pre><tt>: ${X=3Dabc}
if     false
then   :
else   echo $X
fi
</tt><b>abc</b><tt>
</tt>
</pre>

<p>As with any of the special built-ins, the null utility can also have var=
iable assignments and redirections associated with it,
such as:</p>

<pre><tt>x=3Dy : &gt; z
</tt>
</pre>

<p>which sets variable <i>x</i> to the value <i>y</i> (so that it persists =
after the null utility completes) and creates or
truncates file <b>z</b>.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_18"></a>RATIONALE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_16_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_16_23"></a>Issue 7</h4>

<blockquote>
<p>SD5-XCU-ERN-97 is applied, updating the SYNOPSIS.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>

<basefont size=3D"3"> <a name=3D"continue"></a> <a name=3D"tag_18_17"></a><=
!-- continue -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_17_01"></a>NAME</h4>

<blockquote>continue - continue for, while, or until loop</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>continue</tt> <b>[</b><i>n</i><b>]</b></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#continue"><i>continue</i></a> utility shall return to the t=
op of the smallest enclosing <b>for</b>, <b>while</b>,
or <b>until</b> loop, or to the top of the <i>n</i>th enclosing loop, if <i=
>n</i> is specified. This involves repeating the
condition list of a <b>while</b> or <b>until</b> loop or performing the nex=
t assignment of a <b>for</b> loop, and re-executing the
loop if appropriate.</p>

<p>The value of <i>n</i> is a decimal integer greater than or equal to 1. T=
he default shall be equivalent to <i>n</i>=3D1. If
<i>n</i> is greater than the number of enclosing loops, the outermost enclo=
sing loop shall be used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_04"></a>OPTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_10"></a>STDOUT</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_14"></a>EXIT STATUS</h4>

<blockquote>
<dl compact=3D"">
<dt>&nbsp;0</dt>

<dd>Successful completion.</dd>

<dt>&gt;0</dt>

<dd>The <i>n</i> value was not an unsigned decimal integer greater than or =
equal to 1.</dd>
</dl>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_17_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_17"></a>EXAMPLES</h4>

<blockquote>
<pre><tt>for i in *
do
    if test -d "$i"
    then continue
    fi
    printf '"%s" is not a directory.\n' "$i"
done
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_18"></a>RATIONALE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_17_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_17_23"></a>Issue 7</h4>

<blockquote>
<p>The example is changed to use the <a href=3D"http://pubs.opengroup.org/o=
nlinepubs/9699919799/utilities/printf.html"><i>printf</i></a> utility rathe=
r than <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/echo.html"><i>echo</i></a>.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>

<basefont size=3D"3"> <a name=3D"dot"></a> <a name=3D"tag_18_18"></a><!-- d=
ot -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_18_01"></a>NAME</h4>

<blockquote>dot - execute commands in the current environment</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>.</tt> <i>file</i></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The shell shall execute commands from the <i>file</i> in the current env=
ironment.</p>

<p>If <i>file</i> does not contain a &lt;slash&gt;, the shell shall use the=
 search path specified by <i>PATH</i> to find the
directory containing <i>file</i>. Unlike normal command search, however, th=
e file searched for by the <a href=3D"http://pubs.opengroup.org/onlinepubs/=
9699919799/utilities/V3_chap02.html#dot"><i>dot</i></a>
utility need not be executable. If no readable file is found, a non-interac=
tive shell shall abort; an interactive shell shall write
a diagnostic message to standard error, but this condition shall not be con=
sidered a syntax error.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_04"></a>OPTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_07"></a>INPUT FILES</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_10"></a>STDOUT</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_14"></a>EXIT STATUS</h4>

<blockquote>
<p>If no readable file was found or if the commands in the file could not b=
e parsed, and the shell is interactive (and therefore
does not abort; see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919=
799/utilities/V3_chap02.html#tag_18_08_01">Consequences of Shell Errors</a>=
), the exit status shall be non-zero. Otherwise,
return the value of the last command executed, or a zero exit status if no =
command is executed.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_18_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_17"></a>EXAMPLES</h4>

<blockquote>
<pre><tt>cat foobar
</tt><b>foo=3Dhello bar=3Dworld</b><tt>
. ./foobar
echo $foo $bar
</tt><b>hello world</b><tt>
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_18"></a>RATIONALE</h4>

<blockquote>
<p>Some older implementations searched the current directory for the <i>fil=
e</i>, even if the value of <i>PATH</i> disallowed it.
This behavior was omitted from this volume of POSIX.1-2008 due to concerns =
about introducing the susceptibility to trojan horses
that the user might be trying to avoid by leaving <b>dot</b> out of <i>PATH=
.</i></p>

<p>The KornShell version of <a href=3D"http://pubs.opengroup.org/onlinepubs=
/9699919799/utilities/V3_chap02.html#dot"><i>dot</i></a> takes optional arg=
uments that are set to the positional parameters. This
is a valid extension that allows a <a href=3D"http://pubs.opengroup.org/onl=
inepubs/9699919799/utilities/V3_chap02.html#dot"><i>dot</i></a> script to b=
ehave identically to a function.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a>, <a href=3D"http://pu=
bs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_24">=
return</a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_18_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_18_23"></a>Issue 7</h4>

<blockquote>
<p>SD5-XCU-ERN-164 is applied.</p>

<p>POSIX.1-2008, Technical Corrigendum 1, XCU/TC1-2008/0038 [114] and XCU/T=
C1-2008/0039 [214] are applied.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>

<basefont size=3D"3"> <a name=3D"eval"></a> <a name=3D"tag_18_19"></a><!-- =
eval -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_19_01"></a>NAME</h4>

<blockquote>eval - construct command by concatenating arguments</blockquote=
>

<h4 class=3D"mansect"><a name=3D"tag_18_19_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>eval</tt> <b>[</b><i>argument</i><tt>...</tt><b>]</b></code></=
p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#eval"><i>eval</i></a> utility shall construct a command by =
concatenating <i>argument</i>s together, separating
each with a &lt;space&gt; character. The constructed command shall be read =
and executed by the shell.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_04"></a>OPTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_10"></a>STDOUT</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_14"></a>EXIT STATUS</h4>

<blockquote>
<p>If there are no <i>argument</i>s, or only null <i>argument</i>s, <a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.htm=
l#eval"><i>eval</i></a> shall return a zero exit
status; otherwise, it shall return the exit status of the command defined b=
y the string of concatenated <i>argument</i>s separated
by &lt;space&gt; characters, or a non-zero exit status if the concatenation=
 could not be parsed as a command and the shell is
interactive (and therefore did not abort).</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_19_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>Since <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utiliti=
es/V3_chap02.html#eval"><i>eval</i></a> is not required to recognize the <t=
t>"--"</tt> end of options delimiter, in cases where
the argument(s) to <a href=3D"http://pubs.opengroup.org/onlinepubs/96999197=
99/utilities/V3_chap02.html#eval"><i>eval</i></a> might begin with <tt>'-'<=
/tt> it is recommended that the first argument is
prefixed by a string that will not alter the commands to be executed, such =
as a &lt;space&gt; character:</p>

<pre><tt>eval " $commands"
</tt>
</pre>

<p>or:</p>

<pre><tt>eval " $(some_command)"
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_17"></a>EXAMPLES</h4>

<blockquote>
<pre><tt>foo=3D10 x=3Dfoo
y=3D'$'$x
echo $y
</tt><b>$foo</b><tt>
eval y=3D'$'$x
echo $y
</tt><b>10</b><tt>
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_18"></a>RATIONALE</h4>

<blockquote>
<p>This standard allows, but does not require, <a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap02.html#eval"><i>eval</i></=
a> to recognize <tt>"--"</tt>. Although this means
applications cannot use <tt>"--"</tt> to protect against options supported =
as an extension (or errors reported for unsupported
options), the nature of the <a href=3D"http://pubs.opengroup.org/onlinepubs=
/9699919799/utilities/V3_chap02.html#eval"><i>eval</i></a> utility is such =
that other means can be used to provide this protection
(see APPLICATION USAGE above).</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_19_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_19_23"></a>Issue 7</h4>

<blockquote>
<p>SD5-XCU-ERN-97 is applied, updating the SYNOPSIS.</p>

<p>POSIX.1-2008, Technical Corrigendum 1, XCU/TC1-2008/0040 [114], XCU/TC1-=
2008/0041 [163], and XCU/TC1-2008/0042 [163] are
applied.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>

<basefont size=3D"3"> <a name=3D"exec"></a> <a name=3D"tag_18_20"></a><!-- =
exec -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_20_01"></a>NAME</h4>

<blockquote>exec - execute commands and open, close, or copy file descripto=
rs</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>exec</tt> <b>[</b><i>command</i> <b>[</b><i>argument</i><tt>..=
.</tt><b>]]</b></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#exec"><i>exec</i></a> utility shall open, close, and/or cop=
y file descriptors as specified by any redirections as
part of the command.</p>

<p>If <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/=
V3_chap02.html#exec"><i>exec</i></a> is specified without <i>command</i> or=
 <i>argument</i>s, and any file descriptors with
numbers greater than 2 are opened with associated redirection statements, i=
t is unspecified whether those file descriptors remain
open when the shell invokes another utility. Scripts concerned that child s=
hells could misuse open file descriptors can always
close them explicitly, as shown in one of the following examples.</p>

<p>If <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/=
V3_chap02.html#exec"><i>exec</i></a> is specified with <i>command</i>, it s=
hall replace the shell with <i>command</i> without
creating a new process. If <i>argument</i>s are specified, they shall be ar=
guments to <i>command</i>. Redirection affects the
current shell execution environment.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_04"></a>OPTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_10"></a>STDOUT</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_14"></a>EXIT STATUS</h4>

<blockquote>
<p>If <i>command</i> is specified, <a href=3D"http://pubs.opengroup.org/onl=
inepubs/9699919799/utilities/V3_chap02.html#exec"><i>exec</i></a> shall not=
 return to the shell; rather, the exit status of the
process shall be the exit status of the program implementing <i>command</i>=
, which overlaid the shell. If <i>command</i> is not
found, the exit status shall be 127. If <i>command</i> is found, but it is =
not an executable utility, the exit status shall be 126.
If a redirection error occurs (see <a href=3D"http://pubs.opengroup.org/onl=
inepubs/9699919799/utilities/V3_chap02.html#tag_18_08_01">Consequences of S=
hell Errors</a>), the shell shall exit with a value in
the range 1-125. Otherwise, <a href=3D"http://pubs.opengroup.org/onlinepubs=
/9699919799/utilities/V3_chap02.html#exec"><i>exec</i></a> shall return a z=
ero exit status.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_20_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_17"></a>EXAMPLES</h4>

<blockquote>
<p>Open <i>readfile</i> as file descriptor 3 for reading:</p>

<pre><tt>exec 3&lt; readfile
</tt>
</pre>

<p>Open <i>writefile</i> as file descriptor 4 for writing:</p>

<pre><tt>exec 4&gt; writefile
</tt>
</pre>

<p>Make file descriptor 5 a copy of file descriptor 0:</p>

<pre><tt>exec 5&lt;&amp;0
</tt>
</pre>

<p>Close file descriptor 3:</p>

<pre><tt>exec 3&lt;&amp;-
</tt>
</pre>

<p>Cat the file <b>maggie</b> by replacing the current shell with the <a hr=
ef=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/cat.html"><=
i>cat</i></a> utility:</p>

<pre><tt>exec cat maggie
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_18"></a>RATIONALE</h4>

<blockquote>
<p>Most historical implementations were not conformant in that:</p>

<pre><tt>foo=3Dbar exec cmd
</tt>
</pre>

<p>did not pass <b>foo</b> to <b>cmd</b>.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_20_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_20_23"></a>Issue 7</h4>

<blockquote>
<p>SD5-XCU-ERN-97 is applied, updating the SYNOPSIS.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>

<basefont size=3D"3"> <a name=3D"exit"></a> <a name=3D"tag_18_21"></a><!-- =
exit -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_21_01"></a>NAME</h4>

<blockquote>exit - cause the shell to exit</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>exit</tt> <b>[</b><i>n</i><b>]</b></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#exit"><i>exit</i></a> utility shall cause the shell to exit=
 with the exit status specified by the unsigned decimal
integer <i>n</i>. If <i>n</i> is specified, but its value is not between 0 =
and 255 inclusively, the exit status is undefined.</p>

<p>A <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V=
3_chap02.html#trap"><i>trap</i></a> on <b>EXIT</b> shall be executed before=
 the shell terminates, except when the <a href=3D"http://pubs.opengroup.org=
/onlinepubs/9699919799/utilities/V3_chap02.html#exit"><i>exit</i></a> utili=
ty is invoked in that <a href=3D"http://pubs.opengroup.org/onlinepubs/96999=
19799/utilities/V3_chap02.html#trap"><i>trap</i></a> itself, in which case =
the shell shall exit
immediately.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_04"></a>OPTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_10"></a>STDOUT</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_14"></a>EXIT STATUS</h4>

<blockquote>
<p>The exit status shall be <i>n</i>, if specified. Otherwise, the value sh=
all be the exit value of the last command executed, or
zero if no command was executed. When <a href=3D"http://pubs.opengroup.org/=
onlinepubs/9699919799/utilities/V3_chap02.html#exit"><i>exit</i></a> is exe=
cuted in a <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utili=
ties/V3_chap02.html#trap"><i>trap</i></a> action, the
last command is considered to be the command that executed immediately prec=
eding the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilit=
ies/V3_chap02.html#trap"><i>trap</i></a> action.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_21_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_17"></a>EXAMPLES</h4>

<blockquote>
<p>Exit with a <i>true</i> value:</p>

<pre><tt>exit 0
</tt>
</pre>

<p>Exit with a <i>false</i> value:</p>

<pre><tt>exit 1
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_18"></a>RATIONALE</h4>

<blockquote>
<p>As explained in other sections, certain exit status values have been res=
erved for special uses and should be used by
applications only for those purposes:</p>

<dl compact=3D"">
<dt>&nbsp;126</dt>

<dd>A file to be executed was found, but it was not an executable utility.<=
/dd>

<dt>&nbsp;127</dt>

<dd>A utility to be executed was not found.</dd>

<dt>&gt;128</dt>

<dd>A command was interrupted by a signal.</dd>
</dl>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_21_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_21_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>

<basefont size=3D"3"> <a name=3D"export"></a> <a name=3D"tag_18_22"></a><!-=
- export -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_22_01"></a>NAME</h4>

<blockquote>export - set the export attribute for variables</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>export name</tt><b>[</b><tt>=3D</tt><i>word</i><b>]</b><tt>...=
<br>
 &nbsp;<br>
 export -p</tt></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The shell shall give the <a href=3D"http://pubs.opengroup.org/onlinepubs=
/9699919799/utilities/V3_chap02.html#export"><i>export</i></a> attribute to=
 the variables corresponding to the specified
<i>name</i>s, which shall cause them to be in the environment of subsequent=
ly executed commands. If the name of a variable is
followed by =3D <i>word</i>, then the value of that variable shall be set t=
o <i>word</i>.</p>

<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#export"><i>export</i></a> special built-in shall support XB=
D <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_ch=
ap12.html#tag_12_02"><i>Utility Syntax Guidelines</i></a>.</p>

<p>When <b>-p</b> is specified, <a href=3D"http://pubs.opengroup.org/online=
pubs/9699919799/utilities/V3_chap02.html#export"><i>export</i></a> shall wr=
ite to the standard output the names and values of all
exported variables, in the following format:</p>

<pre><tt>"export %s=3D%s\n", &lt;</tt><i>name</i><tt>&gt;, &lt;</tt><i>valu=
e</i><tt>&gt;
</tt>
</pre>

<p>if <i>name</i> is set, and:</p>

<pre><tt>"export %s\n", &lt;</tt><i>name</i><tt>&gt;
</tt>
</pre>

<p>if <i>name</i> is unset.</p>

<p>The shell shall format the output, including the proper use of quoting, =
so that it is suitable for reinput to the shell as
commands that achieve the same exporting results, except:</p>

<ol>
<li>
<p>Read-only variables with values cannot be reset.</p>
</li>

<li>
<p>Variables that were unset at the time they were output need not be reset=
 to the unset state if a value is assigned to the
variable between the time the state was saved and the time at which the sav=
ed output is reinput to the shell.</p>
</li>
</ol>

<p>When no arguments are given, the results are unspecified. If a variable =
assignment precedes the command name of <a href=3D"http://pubs.opengroup.or=
g/onlinepubs/9699919799/utilities/V3_chap02.html#export"><i>export</i></a> =
but that variable is not also listed as an operand of <a href=3D"http://pub=
s.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#export"><i>e=
xport</i></a>, then that
variable shall be set in the current shell execution environment after the =
completion of the <a href=3D"http://pubs.opengroup.org/onlinepubs/969991979=
9/utilities/V3_chap02.html#export"><i>export</i></a>
command, but it is unspecified whether that variable is marked for export.<=
/p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_04"></a>OPTIONS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_10"></a>STDOUT</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_14"></a>EXIT STATUS</h4>

<blockquote>
<p>Zero.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_22_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_17"></a>EXAMPLES</h4>

<blockquote>
<p>Export <i>PWD</i> and <i>HOME</i> variables:</p>

<pre><tt>export PWD HOME
</tt>
</pre>

<p>Set and export the <i>PATH</i> variable:</p>

<pre><tt>export PATH=3D/local/bin:$PATH
</tt>
</pre>

<p>Save and restore all exported variables:</p>

<pre><tt>export -p &gt;</tt> <i>temp-file</i><tt>
unset</tt> <i>a lot of variables</i><tt>
...</tt> <i>processing</i><tt>
.</tt> <i>temp-file</i><tt>
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_18"></a>RATIONALE</h4>

<blockquote>
<p>Some historical shells use the no-argument case as the functional equiva=
lent of what is required here with <b>-p</b>. This
feature was left unspecified because it is not historical practice in all s=
hells, and some scripts may rely on the now-unspecified
results on their implementations. Attempts to specify the <b>-p</b> output =
as the default case were unsuccessful in achieving
consensus. The <b>-p</b> option was added to allow portable access to the v=
alues that can be saved and then later restored using;
for example, a <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/u=
tilities/V3_chap02.html#dot"><i>dot</i></a> script.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>

<p>XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/=
V1_chap12.html#tag_12_02"><i>Utility Syntax Guidelines</i></a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_22_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE PASC Interpretation 1003.2 #203 is applied, clarifying the format w=
hen a variable is unset.</p>

<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>

<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/6 is app=
lied, adding the following text to the end of the first
paragraph of the DESCRIPTION: "If the name of a variable is followed by =3D=
 <i>word</i>, then the value of that variable shall be
set to <i>word</i>.". The reason for this change is that the SYNOPSIS for <=
a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap=
02.html#export"><i>export</i></a> includes:</p>

<pre><tt>export name</tt><b>[</b><tt>=3D</tt><i>word</i><b>]</b><tt>...
</tt>
</pre>

<p>but the meaning of the optional "=3D <i>word</i>" is never explained in =
the text.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_22_23"></a>Issue 7</h4>

<blockquote>
<p>POSIX.1-2008, Technical Corrigendum 1, XCU/TC1-2008/0043 [352] is applie=
d.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>

<basefont size=3D"3"> <a name=3D"readonly"></a> <a name=3D"tag_18_23"></a><=
!-- readonly -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_23_01"></a>NAME</h4>

<blockquote>readonly - set the readonly attribute for variables</blockquote=
>

<h4 class=3D"mansect"><a name=3D"tag_18_23_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>readonly name</tt><b>[</b><tt>=3D</tt><i>word</i><b>]</b><tt>.=
..<br>
 &nbsp;<br>
 readonly -p</tt></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The variables whose <i>name</i>s are specified shall be given the <a hre=
f=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.ht=
ml#readonly"><i>readonly</i></a> attribute. The values
of variables with the <a href=3D"http://pubs.opengroup.org/onlinepubs/96999=
19799/utilities/V3_chap02.html#readonly"><i>readonly</i></a> attribute cann=
ot be changed by subsequent assignment, nor can those
variables be unset by the <a href=3D"http://pubs.opengroup.org/onlinepubs/9=
699919799/utilities/V3_chap02.html#unset"><i>unset</i></a> utility. If the =
name of a variable is followed by =3D <i>word</i>, then
the value of that variable shall be set to <i>word</i>.</p>

<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#readonly"><i>readonly</i></a> special built-in shall suppor=
t XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V=
1_chap12.html#tag_12_02"><i>Utility Syntax Guidelines</i></a>.</p>

<p>When <b>-p</b> is specified, <a href=3D"http://pubs.opengroup.org/online=
pubs/9699919799/utilities/V3_chap02.html#readonly"><i>readonly</i></a> writ=
es to the standard output the names and values of all
read-only variables, in the following format:</p>

<pre><tt>"readonly %s=3D%s\n", &lt;</tt><i>name</i><tt>&gt;, &lt;</tt><i>va=
lue</i><tt>&gt;
</tt>
</pre>

<p>if <i>name</i> is set, and</p>

<pre><tt>"readonly %s\n", &lt;</tt><i>name</i><tt>&gt;
</tt>
</pre>

<p>if <i>name</i> is unset.</p>

<p>The shell shall format the output, including the proper use of quoting, =
so that it is suitable for reinput to the shell as
commands that achieve the same value and <i>readonly</i> attribute-setting =
results in a shell execution environment in which:</p>

<ol>
<li>
<p>Variables with values at the time they were output do not have the <i>re=
adonly</i> attribute set.</p>
</li>

<li>
<p>Variables that were unset at the time they were output do not have a val=
ue at the time at which the saved output is reinput to
the shell.</p>
</li>
</ol>

<p>When no arguments are given, the results are unspecified.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_04"></a>OPTIONS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_10"></a>STDOUT</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_14"></a>EXIT STATUS</h4>

<blockquote>
<p>Zero.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_23_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_17"></a>EXAMPLES</h4>

<blockquote>
<pre><tt>readonly HOME PWD
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_18"></a>RATIONALE</h4>

<blockquote>
<p>Some historical shells preserve the <i>readonly</i> attribute across sep=
arate invocations. This volume of POSIX.1-2008 allows
this behavior, but does not require it.</p>

<p>The <b>-p</b> option allows portable access to the values that can be sa=
ved and then later restored using, for example, a <a href=3D"http://pubs.op=
engroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#dot"><i>dot</i><=
/a> script. Also see the RATIONALE for <a href=3D"http://pubs.opengroup.org=
/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_22">export</a> for a=
 description of the no-argument
and <b>-p</b> output cases and a related example.</p>

<p>Read-only functions were considered, but they were omitted as not being =
historical practice or particularly useful. Furthermore,
functions must not be read-only across invocations to preclude "spoofing" (=
spoofing is the term for the practice of creating a
program that acts like a well-known utility with the intent of subverting t=
he real intent of the user) of administrative or
security-relevant (or security-conscious) shell scripts.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>

<p>XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/=
V1_chap12.html#tag_12_02"><i>Utility Syntax Guidelines</i></a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_23_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_23_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE PASC Interpretation 1003.2 #203 is applied, clarifying the format w=
hen a variable is unset.</p>

<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>

<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/7 is app=
lied, adding the following text to the end of the first
paragraph of the DESCRIPTION: "If the name of a variable is followed by =3D=
 <i>word</i>, then the value of that variable shall be
set to <i>word</i>.". The reason for this change is that the SYNOPSIS for <=
a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap=
02.html#readonly"><i>readonly</i></a> includes:<br>
</p>

<pre><tt>readonly name</tt><b>[</b><tt>=3D</tt><i>word</i><b>]</b><tt>...
</tt>
</pre>

<p>but the meaning of the optional "=3D <i>word</i>" is never explained in =
the text.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>

<basefont size=3D"3"> <a name=3D"return"></a> <a name=3D"tag_18_24"></a><!-=
- return -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_24_01"></a>NAME</h4>

<blockquote>return - return from a function or dot script</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>return</tt> <b>[</b><i>n</i><b>]</b></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#return"><i>return</i></a> utility shall cause the shell to =
stop executing the current function or <a href=3D"http://pubs.opengroup.org=
/onlinepubs/9699919799/utilities/V3_chap02.html#dot"><i>dot</i></a> script.=
 If the shell is not currently executing a function or <a href=3D"http://pu=
bs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#dot"><i>dot=
</i></a> script, the
results are unspecified.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_04"></a>OPTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_10"></a>STDOUT</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_14"></a>EXIT STATUS</h4>

<blockquote>
<p>The value of the special parameter <tt>'?'</tt> shall be set to <i>n</i>=
, an unsigned decimal integer, or to the exit status of
the last command executed if <i>n</i> is not specified. If the value of <i>=
n</i> is greater than 255, the results are undefined.
When <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V=
3_chap02.html#return"><i>return</i></a> is executed in a <a href=3D"http://=
pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#trap"><i>=
trap</i></a> action, the last command is considered to
be the command that executed immediately preceding the <a href=3D"http://pu=
bs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#trap"><i>tr=
ap</i></a> action.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_24_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_17"></a>EXAMPLES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_18"></a>RATIONALE</h4>

<blockquote>
<p>The behavior of <a href=3D"http://pubs.opengroup.org/onlinepubs/96999197=
99/utilities/V3_chap02.html#return"><i>return</i></a> when not in a functio=
n or <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V=
3_chap02.html#dot"><i>dot</i></a> script differs
between the System V shell and the KornShell. In the System V shell this is=
 an error, whereas in the KornShell, the effect is the
same as <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilitie=
s/V3_chap02.html#exit"><i>exit</i></a>.</p>

<p>The results of returning a number greater than 255 are undefined because=
 of differing practices in the various historical
implementations. Some shells AND out all but the low-order 8 bits; others a=
llow larger values, but not of unlimited size.</p>

<p>See the discussion of appropriate exit status values under <a href=3D"ht=
tp://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_=
18_21">exit</a>.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_09_05">Function Definition Command</a>, <a href=3D"http:=
//pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_=
14">Special Built-In Utilities</a>, <a href=3D"http://pubs.opengroup.org/on=
linepubs/9699919799/utilities/V3_chap02.html#tag_18_18">dot</a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_24_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_24_23"></a>Issue 7</h4>

<blockquote>
<p>POSIX.1-2008, Technical Corrigendum 1, XCU/TC1-2008/0044 [214] and XCU/T=
C1-2008/0045 [214] are applied.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>

<basefont size=3D"3"> <a name=3D"set"></a> <a name=3D"tag_18_25"></a><!-- s=
et -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_25_01"></a>NAME</h4>

<blockquote>set - set or unset options and positional parameters</blockquot=
e>

<h4 class=3D"mansect"><a name=3D"tag_18_25_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>set</tt> <b>[</b><tt>-abCefhmnuvx</tt><b>] [</b><tt>-o</tt> <i=
>option</i><b>]
[</b><i>argument</i><tt>...</tt><b>]</b><tt><br>
&nbsp;<br>
 set</tt> <b>[</b><tt>+abCefhmnuvx</tt><b>] [</b><tt>+o</tt> <i>option</i><=
b>] [</b><i>argument</i><tt>...</tt><b>]</b><tt><br>
&nbsp;<br>
 set --</tt> <b>[</b><i>argument</i><tt>...</tt><b>]</b><tt><br>
&nbsp;<br>
 set -o<br>
 &nbsp;<br>
 set +o</tt></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_03"></a>DESCRIPTION</h4>

<blockquote>
<p>If no <i>option</i>s or <i>argument</i>s are specified, <a href=3D"http:=
//pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#set"><i=
>set</i></a> shall write the names and values of all
shell variables in the collation sequence of the current locale. Each <i>na=
me</i> shall start on a separate line, using the
format:</p>

<pre><tt>"%s=3D%s\n", &lt;</tt><i>name</i><tt>&gt;, &lt;</tt><i>value</i><t=
t>&gt;
</tt>
</pre>

<p>The <i>value</i> string shall be written with appropriate quoting; see t=
he description of shell quoting in <a href=3D"http://pubs.opengroup.org/onl=
inepubs/9699919799/utilities/V3_chap02.html#tag_18_02">Quoting</a>. The out=
put shall be suitable for reinput to the shell, setting or resetting, as fa=
r as possible, the
variables that are currently set; read-only variables cannot be reset.</p>

<p>When options are specified, they shall set or unset attributes of the sh=
ell, as described below. When <i>argument</i>s are
specified, they cause positional parameters to be set or unset, as describe=
d below. Setting or unsetting attributes and positional
parameters are not necessarily related actions, but they can be combined in=
 a single invocation of <a href=3D"http://pubs.opengroup.org/onlinepubs/969=
9919799/utilities/V3_chap02.html#set"><i>set</i></a>.</p>

<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#set"><i>set</i></a> special built-in shall support XBD <a h=
ref=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.h=
tml#tag_12_02"><i>Utility
Syntax Guidelines</i></a> except that options can be specified with either =
a leading &lt;hyphen&gt; (meaning enable the option) or
&lt;plus-sign&gt; (meaning disable it) unless otherwise specified.</p>

<p>Implementations shall support the options in the following list in both =
their &lt;hyphen&gt; and &lt;plus-sign&gt; forms. These
options can also be specified as options to <a href=3D"http://pubs.opengrou=
p.org/onlinepubs/9699919799/utilities/sh.html"><i>sh</i></a>.</p>

<dl compact=3D"">
<dt><b>-a</b></dt>

<dd>When this option is on, the <i>export</i> attribute shall be set for ea=
ch variable to which an assignment is performed; see XBD
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap=
04.html#tag_04_22"><i>Variable Assignment</i></a>. If the assignment preced=
es a utility name in a
command, the <i>export</i> attribute shall not persist in the current execu=
tion environment after the utility completes, with the
exception that preceding one of the special built-in utilities causes the <=
i>export</i> attribute to persist after the built-in has
completed. If the assignment does not precede a utility name in the command=
, or if the assignment is a result of the operation of
the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ge=
topts.html"><i>getopts</i></a> or <a href=3D"http://pubs.opengroup.org/onli=
nepubs/9699919799/utilities/read.html"><i>read</i></a> utilities, the
<i>export</i> attribute shall persist until the variable is unset.</dd>

<dt><b>-b</b></dt>

<dd>This option shall be supported if the implementation supports the User =
Portability Utilities option. It shall cause the shell
to notify the user asynchronously of background job completions. The follow=
ing message is written to standard error:=20

<pre><tt>"[%d]%c %s%s\n", &lt;</tt><i>job-number</i><tt>&gt;, &lt;</tt><i>c=
urrent</i><tt>&gt;, &lt;status&gt;, &lt;job-name&gt;
</tt>
</pre>

<p>where the fields shall be as follows:</p>

<dl compact=3D"">
<dt>&lt;<i>current</i>&gt;</dt>

<dd>The character <tt>'+'</tt> identifies the job that would be used as a d=
efault for the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/u=
tilities/fg.html"><i>fg</i></a> or <a href=3D"http://pubs.opengroup.org/onl=
inepubs/9699919799/utilities/bg.html"><i>bg</i></a> utilities; this job can=
 also be specified
using the <i>job_id</i> <tt>"%+"</tt> or <tt>"%%"</tt>. The character <tt>'=
-'</tt> identifies the job that would become the
default if the current default job were to exit; this job can also be speci=
fied using the <i>job_id</i> <tt>"%-"</tt>. For other
jobs, this field is a &lt;space&gt;. At most one job can be identified with=
 <tt>'+'</tt> and at most one job can be identified with
<tt>'-'</tt>. If there is any suspended job, then the current job shall be =
a suspended job. If there are at least two suspended
jobs, then the previous job also shall be a suspended job.</dd>

<dt>&lt;<i>job-number</i>&gt;</dt>

<dd>A number that can be used to identify the process group to the <a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/wait.html"><i=
>wait</i></a>, <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/u=
tilities/fg.html"><i>fg</i></a>, <a href=3D"http://pubs.opengroup.org/onlin=
epubs/9699919799/utilities/bg.html"><i>bg</i></a>, and <a href=3D"http://pu=
bs.opengroup.org/onlinepubs/9699919799/utilities/kill.html"><i>kill</i></a>=
 utilities. Using these utilities, the job can be identified by prefixing t=
he job number
with <tt>'%'</tt>.</dd>

<dt>&lt;<i>status</i>&gt;</dt>

<dd>Unspecified.</dd>

<dt>&lt;<i>job-name</i>&gt;</dt>

<dd>Unspecified.</dd>
</dl>

<p>When the shell notifies the user a job has been completed, it may remove=
 the job's process ID from the list of those known in
the current shell execution environment; see <a href=3D"http://pubs.opengro=
up.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_09_03_02">Asyn=
chronous Lists</a>. Asynchronous notification shall
not be enabled by default.</p>
</dd>

<dt><b>-C</b></dt>

<dd>(Uppercase C.) Prevent existing files from being overwritten by the she=
ll's <tt>'&gt;'</tt> redirection operator (see <a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_07_02">Redir=
ecting Output</a>); the <tt>"&gt;|"</tt> redirection operator shall overrid=
e this <i>noclobber</i> option for
an individual file.</dd>

<dt><b>-e</b></dt>

<dd>When this option is on, when any command fails (for any of the reasons =
listed in <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilit=
ies/V3_chap02.html#tag_18_08_01">Consequences of Shell
Errors</a> or by returning an exit status greater than zero), the shell imm=
ediately shall exit with the following exceptions:=20

<ol>
<li>
<p>The failure of any individual command in a multi-command pipeline shall =
not cause the shell to exit. Only the failure of the
pipeline itself shall be considered.</p>
</li>

<li>
<p>The <b>-e</b> setting shall be ignored when executing the compound list =
following the <b>while</b>, <b>until</b>, <b>if</b>, or
<b>elif</b> reserved word, a pipeline beginning with the <b>!</b> reserved =
word, or any command of an AND-OR list other than the
last.</p>
</li>

<li>
<p>If the exit status of a compound command other than a subshell command w=
as the result of a failure while <b>-e</b> was being
ignored, then <b>-e</b> shall not apply to this command.</p>
</li>
</ol>

<p>This requirement applies to the shell environment and each subshell envi=
ronment separately. For example, in:</p>

<pre><tt>set -e; (false; echo one) | cat; echo two
</tt>
</pre>

<p>the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/false.html"><i>false</i></a> command causes the subshell to exit without e=
xecuting <tt>echo one</tt>; however,
<tt>echo two</tt> is
executed because the exit status of the pipeline
<tt>(false; echo one) | cat</tt>  is zero.</p>
</dd>

<dt><b>-f</b></dt>

<dd>The shell shall disable pathname expansion.</dd>

<dt><b>-h</b></dt>

<dd>Locate and remember utilities invoked by functions as those functions a=
re defined (the utilities are normally located when the
function is executed).</dd>

<dt><b>-m</b></dt>

<dd>This option shall be supported if the implementation supports the User =
Portability Utilities option. All jobs shall be run in
their own process groups. Immediately before the shell issues a prompt afte=
r completion of the background job, a message reporting
the exit status of the background job shall be written to standard error. I=
f a foreground job stops, the shell shall write a
message to standard error to that effect, formatted as described by the <a =
href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/jobs.html=
"><i>jobs</i></a> utility.
In addition, if a job changes status other than exiting (for example, if it=
 stops for input or output or is stopped by a SIGSTOP
signal), the shell shall write a similar message immediately prior to writi=
ng the next prompt. This option is enabled by default
for interactive shells.</dd>

<dt><b>-n</b></dt>

<dd>The shell shall read commands but does not execute them; this can be us=
ed to check for shell script syntax errors. An
interactive shell may ignore this option.</dd>

<dt><b>-o</b></dt>

<dd>Write the current settings of the options to standard output in an unsp=
ecified format.</dd>

<dt><b>+o</b></dt>

<dd>Write the current option settings to standard output in a format that i=
s suitable for reinput to the shell as commands that
achieve the same options settings.</dd>

<dt><b>-o&nbsp;</b> <i>option</i></dt>

<dd>
This option is supported if the system supports the User Portability Utilit=
ies option. It shall set various options, many of which
shall be equivalent to the single option letters. The following values of <=
i>option</i> shall be supported:=20

<dl compact=3D"">
<dt><i>allexport</i></dt>

<dd>Equivalent to <b>-a</b>.</dd>

<dt><i>errexit</i></dt>

<dd>Equivalent to <b>-e</b>.</dd>

<dt><i>ignoreeof</i></dt>

<dd>Prevent an interactive shell from exiting on end-of-file. This setting =
prevents accidental logouts when &lt;control&gt;-D is
entered. A user shall explicitly <a href=3D"http://pubs.opengroup.org/onlin=
epubs/9699919799/utilities/V3_chap02.html#exit"><i>exit</i></a> to leave th=
e interactive shell.</dd>

<dt><i>monitor</i></dt>

<dd>Equivalent to <b>-m</b>. This option is supported if the system support=
s the User Portability Utilities option.</dd>

<dt><i>noclobber</i></dt>

<dd>Equivalent to <b>-C</b> (uppercase C).</dd>

<dt><i>noglob</i></dt>

<dd>Equivalent to <b>-f</b>.</dd>

<dt><i>noexec</i></dt>

<dd>Equivalent to <b>-n</b>.</dd>

<dt><i>nolog</i></dt>

<dd>Prevent the entry of function definitions into the command history; see=
 <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/sh.ht=
ml#tag_20_117_13_01"><i>Command History List</i></a>.</dd>

<dt><i>notify</i></dt>

<dd>Equivalent to <b>-b</b>.</dd>

<dt><i>nounset</i></dt>

<dd>Equivalent to <b>-u</b>.</dd>

<dt><i>verbose</i></dt>

<dd>Equivalent to <b>-v</b>.</dd>

<dt><i>vi</i></dt>

<dd>Allow shell command line editing using the built-in <a href=3D"http://p=
ubs.opengroup.org/onlinepubs/9699919799/utilities/vi.html"><i>vi</i></a> ed=
itor. Enabling <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/u=
tilities/vi.html"><i>vi</i></a> mode shall disable any other command line e=
diting mode provided as an implementation
extension.=20

<p>It need not be possible to set <a href=3D"http://pubs.opengroup.org/onli=
nepubs/9699919799/utilities/vi.html"><i>vi</i></a> mode on for certain bloc=
k-mode terminals.</p>
</dd>

<dt><i>xtrace</i></dt>

<dd>Equivalent to <b>-x</b>.</dd>
</dl>
</dd>

<dt><b>-u</b></dt>

<dd>When the shell tries to expand an unset parameter other than the <tt>'@=
'</tt> and <tt>'*'</tt> special parameters, it shall
write a message to standard error and shall not execute the command contain=
ing the expansion, but for the purposes of setting the
<tt>'?'</tt> special parameter and the exit status of the shell the command=
 shall be treated as having been executed and returned
an exit status of between 1 and 125 inclusive. A non-interactive shell shal=
l immediately exit. An interactive shell shall not
exit.</dd>

<dt><b>-v</b></dt>

<dd>The shell shall write its input to standard error as it is read.</dd>

<dt><b>-x</b></dt>

<dd>The shell shall write to standard error a trace for each command after =
it expands the command and before it executes it. It is
unspecified whether the command that turns tracing off is traced.</dd>
</dl>

<p>The default for all these options shall be off (unset) unless stated oth=
erwise in the description of the option or unless the
shell was invoked with them on; see <a href=3D"http://pubs.opengroup.org/on=
linepubs/9699919799/utilities/sh.html"><i>sh</i></a>.</p>

<p>The remaining arguments shall be assigned in order to the positional par=
ameters. The special parameter <tt>'#'</tt> shall be set
to reflect the number of positional parameters. All positional parameters s=
hall be unset before any new values are assigned.</p>

<p>If the first argument is <tt>'-'</tt>, the results are unspecified.</p>

<p>The special argument <tt>"--"</tt> immediately following the <a href=3D"=
http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#se=
t"><i>set</i></a> command name can be used to delimit
the arguments if the first argument begins with <tt>'+'</tt> or <tt>'-'</tt=
>, or to prevent inadvertent listing of all shell
variables when there are no arguments. The command <a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#set"><i>set</i>=
</a> <b>--</b> without <i>argument</i> shall unset all
positional parameters and set the special parameter <tt>'#'</tt> to zero.</=
p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_04"></a>OPTIONS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_10"></a>STDOUT</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_14"></a>EXIT STATUS</h4>

<blockquote>
<p>Zero.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_25_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>Application writers should avoid relying on <a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap02.html#set"><i>set</i></a>=
 <b>-e</b> within functions. For example, in the
following script:</p>

<pre><tt>set -e
start() {
    some_server
    echo some_server started successfully
}
start || echo &gt;&amp;2 some_server failed
</tt>
</pre>

<p>the <b>-e</b> setting is ignored within the function body (because the f=
unction is a command in an AND-OR list other than the
last). Therefore, if=20
<tt>some_server</tt> fails, the function carries on to echo <tt>"some_serve=
r started successfully"</tt>, and the exit status of
the function is zero (which means <tt>"some_server failed"</tt> is not outp=
ut).</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_17"></a>EXAMPLES</h4>

<blockquote>
<p>Write out all variables and their values:</p>

<pre><tt>set
</tt>
</pre>

<p>Set $1, $2, and $3 and set <tt>"$#"</tt> to 3:</p>

<pre><tt>set c a b
</tt>
</pre>

<p>Turn on the <b>-x</b> and <b>-v</b> options:</p>

<pre><tt>set -xv
</tt>
</pre>

<p>Unset all positional parameters:</p>

<pre><tt>set --
</tt>
</pre>

<p>Set $1 to the value of <i>x</i>, even if it begins with <tt>'-'</tt> or =
<tt>'+'</tt> :</p>

<pre><tt>set -- "$x"
</tt>
</pre>

<p>Set the positional parameters to the expansion of <i>x</i>, even if <i>x=
</i> expands with a leading <tt>'-'</tt> or <tt>'+'</tt>
:</p>

<pre><tt>set -- $x
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_18"></a>RATIONALE</h4>

<blockquote>
<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#set"><i>set</i></a> -- form is listed specifically in the S=
YNOPSIS even though this usage is implied by the
Utility Syntax Guidelines. The explanation of this feature removes any ambi=
guity about whether the <a href=3D"http://pubs.opengroup.org/onlinepubs/969=
9919799/utilities/V3_chap02.html#set"><i>set</i></a> --
form might be misinterpreted as being equivalent to <a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#set"><i>set</i=
></a> without any options or arguments. The
functionality of this form has been adopted from the KornShell. In System V=
, <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_c=
hap02.html#set"><i>set</i></a> -- only unsets
parameters if there is at least one argument; the only way to unset all par=
ameters is to use <a href=3D"http://pubs.opengroup.org/onlinepubs/969991979=
9/utilities/V3_chap02.html#shift"><i>shift</i></a>.
Using the KornShell version should not affect System V scripts because ther=
e should be no reason to issue it without arguments
deliberately; if it were issued as, for example:</p>

<pre><tt>set -- "$@"
</tt>
</pre>

<p>and there were in fact no arguments resulting from <tt>"$@"</tt>, unsett=
ing the parameters would have no result.</p>

<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#set"><i>set</i></a> + form in early proposals was omitted a=
s being an unnecessary duplication of <a href=3D"http://pubs.opengroup.org/=
onlinepubs/9699919799/utilities/V3_chap02.html#set"><i>set</i></a> alone an=
d not widespread historical practice.</p>

<p>The <i>noclobber</i> option was changed to allow <a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#set"><i>set</i=
></a> <b>-C</b> as well as the <a href=3D"http://pubs.opengroup.org/onlinep=
ubs/9699919799/utilities/V3_chap02.html#set"><i>set</i></a> <b>-o</b> <i>no=
clobber</i> option. The single-letter version was added so that the histori=
cal <tt>"$-"</tt>
paradigm would not be broken; see <a href=3D"http://pubs.opengroup.org/onli=
nepubs/9699919799/utilities/V3_chap02.html#tag_18_05_02">Special Parameters=
</a>.</p>

<p>The description of the <b>-e</b> option is intended to match the behavio=
r of the 1988 version of the KornShell.</p>

<p>The <b>-h</b> flag is related to command name hashing. See <a href=3D"ht=
tp://pubs.opengroup.org/onlinepubs/9699919799/utilities/hash.html#"><i>hash=
</i></a>.</p>

<p>The following <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799=
/utilities/V3_chap02.html#set"><i>set</i></a> flags were omitted intentiona=
lly with the following rationale:</p>

<dl compact=3D"">
<dt><b>-k</b></dt>

<dd>The <b>-k</b> flag was originally added by the author of the Bourne she=
ll to make it easier for users of pre-release versions
of the shell. In early versions of the Bourne shell the construct <a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.htm=
l#set"><i>set</i></a> <i>name</i>=3D <i>value</i> had to be
used to assign values to shell variables. The problem with <b>-k</b> is tha=
t the behavior affects parsing, virtually precluding
writing any compilers. To explain the behavior of <b>-k</b>, it is necessar=
y to describe the parsing algorithm, which is
implementation-defined. For example:=20

<pre><tt>set -k; echo</tt> <i>name</i><tt>=3D</tt><i>value</i>
</pre>

<p>and:</p>

<pre><tt>set -k
echo</tt> <i>name</i><tt>=3D</tt><i>value</i>
</pre>

<p>behave differently. The interaction with functions is even more complex.=
 What is more, the <b>-k</b> flag is never needed, since
the command line could have been reordered.</p>
</dd>

<dt><b>-t</b></dt>

<dd>The <b>-t</b> flag is hard to specify and almost never used. The only k=
nown use could be done with here-documents. Moreover,
the behavior with <i>ksh</i> and <a href=3D"http://pubs.opengroup.org/onlin=
epubs/9699919799/utilities/sh.html"><i>sh</i></a> differs. The reference pa=
ge says that it exits after
reading and executing one command. What is one command? If the input is <i>=
date</i>; <i>date</i>, <a href=3D"http://pubs.opengroup.org/onlinepubs/9699=
919799/utilities/sh.html"><i>sh</i></a> executes both <a href=3D"http://pub=
s.opengroup.org/onlinepubs/9699919799/utilities/date.html"><i>date</i></a> =
commands while <i>ksh</i> does
only the first.</dd>
</dl>

<p>Consideration was given to rewriting <a href=3D"http://pubs.opengroup.or=
g/onlinepubs/9699919799/utilities/V3_chap02.html#set"><i>set</i></a> to sim=
plify its confusing syntax. A specific suggestion was
that the <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utiliti=
es/V3_chap02.html#unset"><i>unset</i></a> utility should be used to unset o=
ptions instead of using the non- <a href=3D"http://pubs.opengroup.org/onlin=
epubs/9699919799/functions/getopt.html"><i>getopt</i>()</a> -able + <i>opti=
on</i> syntax. However, the conclusion was reached that the
historical practice of using + <i>option</i> was satisfactory and that ther=
e was no compelling reason to modify such widespread
historical practice.</p>

<p>The <b>-o</b> option was adopted from the KornShell to address user need=
s. In addition to its generally friendly interface,
<b>-o</b> is needed to provide the <a href=3D"http://pubs.opengroup.org/onl=
inepubs/9699919799/utilities/vi.html"><i>vi</i></a> command line editing mo=
de, for which historical
practice yields no single-letter option name. (Although it might have been =
possible to invent such a letter, it was recognized that
other editing modes would be developed and <b>-o</b> provides ample name sp=
ace for describing such extensions.)</p>

<p>Historical implementations are inconsistent in the format used for <b>-o=
</b> option status reporting. The <b>+o</b> format
without an option-argument was added to allow portable access to the option=
s that can be saved and then later restored using, for
instance, a dot script.</p>

<p>Historically, <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799=
/utilities/sh.html"><i>sh</i></a> did trace the command <a href=3D"http://p=
ubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#set"><i>se=
t</i></a> <b>+x</b>, but
<i>ksh</i> did not.</p>

<p>The <i>ignoreeof</i> setting prevents accidental logouts when the end-of=
-file character (typically &lt;control&gt;-D) is
entered. A user shall explicitly <a href=3D"http://pubs.opengroup.org/onlin=
epubs/9699919799/utilities/V3_chap02.html#exit"><i>exit</i></a> to leave th=
e interactive shell.</p>

<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#set"><i>set</i></a> <b>-m</b> option was added to apply onl=
y to the UPE because it applies primarily to
interactive use, not shell script applications.</p>

<p>The ability to do asynchronous notification became available in the 1988=
 version of the KornShell. To have it occur, the user
had to issue the command:</p>

<pre><tt>trap "jobs -n" CLD
</tt>
</pre>

<p>The C shell provides two different levels of an asynchronous notificatio=
n capability. The environment variable <i>notify</i> is
analogous to what is done in <a href=3D"http://pubs.opengroup.org/onlinepub=
s/9699919799/utilities/V3_chap02.html#set"><i>set</i></a> <b>-b</b> or <a h=
ref=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.=
html#set"><i>set</i></a> <b>-o</b> <i>notify</i>. When
set, it notifies the user immediately of background job completions. When u=
nset, this capability is turned off.</p>

<p>The other notification ability comes through the built-in utility <i>not=
ify</i>. The syntax is:</p>

<pre><tt>notify</tt> <b>[</b><tt>%job ...</tt> <b>]</b>
</pre>

<p>By issuing <i>notify</i> with no operands, it causes the C shell to noti=
fy the user asynchronously when the state of the current
job changes. If given operands, <i>notify</i> asynchronously informs the us=
er of changes in the states of the specified jobs.</p>

<p>To add asynchronous notification to the POSIX shell, neither the KornShe=
ll extensions to <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799=
/utilities/V3_chap02.html#trap"><i>trap</i></a>, nor
the C shell <i>notify</i> environment variable seemed appropriate (<i>notif=
y</i> is not a proper POSIX environment variable
name).</p>

<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#set"><i>set</i></a> <b>-b</b> option was selected as a comp=
romise.</p>

<p>The <i>notify</i> built-in was considered to have more functionality tha=
n was required for simple asynchronous notification.</p>

<p>Historically, some shells applied the <b>-u</b> option to all parameters=
 including <tt>$@</tt> and <tt>$*</tt>. The standard developers felt that t=
his
was a misfeature since it is normal and common for <tt>$@</tt> and <tt>$*</=
tt> to be used in shell scripts regardless of whether they were passed any
arguments. Treating these uses as an error when no arguments are passed red=
uces the value of <b>-u</b> for its intended purpose of
finding spelling mistakes in variable names and uses of unset positional pa=
rameters.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a>, <a href=3D"http://pu=
bs.opengroup.org/onlinepubs/9699919799/utilities/hash.html#"><i>hash</i></a=
></p>

<p>XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/=
V1_chap04.html#tag_04_22"><i>Variable Assignment</i></a>, <a href=3D"http:/=
/pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_02=
"><i>Utility Syntax Guidelines</i></a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_25_22"></a>Issue 6</h4>

<blockquote>
<p>The obsolescent <a href=3D"http://pubs.opengroup.org/onlinepubs/96999197=
99/utilities/V3_chap02.html#set"><i>set</i></a> command name followed by <t=
t>'-'</tt> has been removed.</p>

<p>The following new requirements on POSIX implementations derive from alig=
nment with the Single UNIX Specification:</p>

<ul>
<li>
<p>The <i>nolog</i> option is added to <a href=3D"http://pubs.opengroup.org=
/onlinepubs/9699919799/utilities/V3_chap02.html#set"><i>set</i></a> <b>-o</=
b>.</p>
</li>
</ul>

<p>IEEE PASC Interpretation 1003.2 #167 is applied, clarifying that the opt=
ions default also takes into account the description of
the option.</p>

<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>

<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/8 is app=
lied, changing the square brackets in the example in
RATIONALE to be in bold, which is the typeface used for optional items.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_25_23"></a>Issue 7</h4>

<blockquote>
<p>Austin Group Interpretation 1003.1-2001 #027 is applied, clarifying the =
behavior if the first argument is <tt>'-'</tt>.</p>

<p>SD5-XCU-ERN-97 is applied, updating the SYNOPSIS.</p>

<p>XSI shading is removed from the <b>-h</b> functionality.</p>

<p>POSIX.1-2008, Technical Corrigendum 1, XCU/TC1-2008/0046 [52], XCU/TC1-2=
008/0047 [155,280], XCU/TC1-2008/0048 [52],
XCU/TC1-2008/0049 [52], and XCU/TC1-2008/0050 [155,430] are applied.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>
<div class=3D"NAVHEADER">
<table summary=3D"Header navigation table" width=3D"100%" border=3D"0" cell=
padding=3D"0" cellspacing=3D"0">
<tbody><tr>
<td width=3D"15%" align=3D"left" valign=3D"bottom"><a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap01.html" accesskey=3D"P=
">&lt;&lt;&lt; Previous</a></td>
<td width=3D"70%" align=3D"center" valign=3D"bottom"><a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/utilities/contents.html">Home</a></td>
<td width=3D"15%" align=3D"right" valign=3D"bottom"><a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap03.html" accesskey=3D"=
N">Next &gt;&gt;&gt;</a></td>
</tr>
</tbody></table>

<hr align=3D"LEFT" width=3D"100%">
</div>



<basefont size=3D"3"> <a name=3D"shift"></a> <a name=3D"tag_18_26"></a><!--=
 shift -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_26_01"></a>NAME</h4>

<blockquote>shift - shift positional parameters</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>shift</tt> <b>[</b><i>n</i><b>]</b></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The positional parameters shall be shifted. Positional parameter 1 shall=
 be assigned the value of parameter (1+<i>n</i>),
parameter 2 shall be assigned the value of parameter (2+<i>n</i>), and so o=
n. The parameters represented by the numbers
<tt>"$#"</tt> down to <tt>"$#-n+1"</tt> shall be unset, and the parameter <=
tt>'#'</tt> is updated to reflect the new number of
positional parameters.</p>

<p>The value <i>n</i> shall be an unsigned decimal integer less than or equ=
al to the value of the special parameter <tt>'#'</tt>.
If <i>n</i> is not given, it shall be assumed to be 1. If <i>n</i> is 0, th=
e positional and special parameters are not changed.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_04"></a>OPTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_10"></a>STDOUT</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_14"></a>EXIT STATUS</h4>

<blockquote>
<p>If the <i>n</i> operand is invalid or is greater than <tt>"$#"</tt>, thi=
s may be considered a syntax error and a
non-interactive shell may exit; if the shell does not exit in this case, a =
non-zero exit status shall be returned. Otherwise, zero
shall be returned.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_26_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_17"></a>EXAMPLES</h4>

<blockquote>
<pre><b>$</b> <tt>set a b c d e
</tt><b>$</b> <tt>shift 2
</tt><b>$</b> <tt>echo $*
</tt><b>c d e</b><tt>
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_18"></a>RATIONALE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_26_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_26_23"></a>Issue 7</h4>

<blockquote>
<p>POSIX.1-2008, Technical Corrigendum 1, XCU/TC1-2008/0051 [459] is applie=
d.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>
<div class=3D"NAVHEADER">
<table summary=3D"Header navigation table" width=3D"100%" border=3D"0" cell=
padding=3D"0" cellspacing=3D"0">
<tbody><tr>
<td width=3D"15%" align=3D"left" valign=3D"bottom"><a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap01.html" accesskey=3D"P=
">&lt;&lt;&lt; Previous</a></td>
<td width=3D"70%" align=3D"center" valign=3D"bottom"><a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/utilities/contents.html">Home</a></td>
<td width=3D"15%" align=3D"right" valign=3D"bottom"><a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap03.html" accesskey=3D"=
N">Next &gt;&gt;&gt;</a></td>
</tr>
</tbody></table>

<hr align=3D"LEFT" width=3D"100%">
</div>



<basefont size=3D"3"> <a name=3D"times"></a> <a name=3D"tag_18_27"></a><!--=
 times -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_27_01"></a>NAME</h4>

<blockquote>times - write process times</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>times</tt></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_03"></a>DESCRIPTION</h4>

<blockquote>
<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#times"><i>times</i></a> utility shall write the accumulated=
 user and system times for the shell and for all of its
child processes, in the following POSIX locale format:</p>

<pre><tt>"%dm%fs %dm%fs\n%dm%fs %dm%fs\n", &lt;</tt><i>shell user minutes</=
i><tt>&gt;,
    &lt;</tt><i>shell user seconds</i><tt>&gt;, &lt;</tt><i>shell system mi=
nutes</i><tt>&gt;,
    &lt;</tt><i>shell system seconds</i><tt>&gt;, &lt;</tt><i>children user=
 minutes</i><tt>&gt;,
    &lt;</tt><i>children user seconds</i><tt>&gt;, &lt;</tt><i>children sys=
tem minutes</i><tt>&gt;,
    &lt;</tt><i>children system seconds</i><tt>&gt;
</tt>
</pre>

<p>The four pairs of times shall correspond to the members of the <a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/sys_times.h.ht=
ml"><i>&lt;sys/times.h&gt;</i></a> <b>tms</b> structure (defined in XBD <a =
href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap13.=
html#tag_13"><i>Headers</i></a>) as returned by <a href=3D"http://pubs.open=
group.org/onlinepubs/9699919799/functions/times.html"><i>times</i>()</a>:
<i>tms_utime</i>, <i>tms_stime</i>, <i>tms_cutime</i>, and <i>tms_cstime</i=
>, respectively.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_04"></a>OPTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_05"></a>OPERANDS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_10"></a>STDOUT</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_14"></a>EXIT STATUS</h4>

<blockquote>
<p>Zero.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_27_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_17"></a>EXAMPLES</h4>

<blockquote>
<pre><b>$</b> <tt>times
</tt><b>0m0.43s 0m1.11s
8m44.18s 1m43.23s</b><tt>
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_18"></a>RATIONALE</h4>

<blockquote>
<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#times"><i>times</i></a> special built-in from the Single UN=
IX Specification is now required for all conforming
shells.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>

<p>XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/=
sys_times.h.html"><i>&lt;sys/times.h&gt;</i></a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_27_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_27_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/9 is app=
lied, changing text in the DESCRIPTION from: "Write the
accumulated user and system times for the shell and for all of its child pr=
ocesses ..." to: "The <a href=3D"http://pubs.opengroup.org/onlinepubs/96999=
19799/utilities/V3_chap02.html#times"><i>times</i></a> utility shall write =
the accumulated user and system times for the shell and for all of its chil=
d
processes ...".</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>
<div class=3D"NAVHEADER">
<table summary=3D"Header navigation table" width=3D"100%" border=3D"0" cell=
padding=3D"0" cellspacing=3D"0">
<tbody><tr>
<td width=3D"15%" align=3D"left" valign=3D"bottom"><a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap01.html" accesskey=3D"P=
">&lt;&lt;&lt; Previous</a></td>
<td width=3D"70%" align=3D"center" valign=3D"bottom"><a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/utilities/contents.html">Home</a></td>
<td width=3D"15%" align=3D"right" valign=3D"bottom"><a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap03.html" accesskey=3D"=
N">Next &gt;&gt;&gt;</a></td>
</tr>
</tbody></table>

<hr align=3D"LEFT" width=3D"100%">
</div>



<basefont size=3D"3"> <a name=3D"trap"></a> <a name=3D"tag_18_28"></a><!-- =
trap -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_28_01"></a>NAME</h4>

<blockquote>trap - trap signals</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>trap</tt> <i>n</i> <b>[</b><i>condition</i><tt>...</tt><b>]</b=
>
<br><tt>trap</tt> <b>[</b><i>action
condition</i><tt>...</tt><b>]</b></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_03"></a>DESCRIPTION</h4>

<blockquote>
<p>If the first operand is an unsigned decimal integer, the shell shall tre=
at all operands as conditions, and shall reset each
condition to the default value. Otherwise, if there are operands, the first=
 is treated as an action and the remaining as
conditions.</p>

<p>If <i>action</i> is <tt>'-'</tt>, the shell shall reset each <i>conditio=
n</i> to the default value. If <i>action</i> is null (
<tt>""</tt> ), the shell shall ignore each specified <i>condition</i> if it=
 arises. Otherwise, the argument <i>action</i> shall be
read and executed by the shell when one of the corresponding conditions ari=
ses. The action of <a href=3D"http://pubs.opengroup.org/onlinepubs/96999197=
99/utilities/V3_chap02.html#trap"><i>trap</i></a> shall
override a previous action (either default action or one explicitly set). T=
he value of <tt>"$?"</tt> after the <a href=3D"http://pubs.opengroup.org/on=
linepubs/9699919799/utilities/V3_chap02.html#trap"><i>trap</i></a> action c=
ompletes shall be the value it had before <a href=3D"http://pubs.opengroup.=
org/onlinepubs/9699919799/utilities/V3_chap02.html#trap"><i>trap</i></a> wa=
s invoked.</p>

<p>The condition can be EXIT, 0 (equivalent to EXIT), or a signal specified=
 using a symbolic name, without the SIG prefix, as
listed in the tables of signal names in the <a href=3D"http://pubs.opengrou=
p.org/onlinepubs/9699919799/basedefs/signal.h.html"><i>&lt;signal.h&gt;</i>=
</a> header defined in XBD
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap=
13.html#tag_13"><i>Headers</i></a>; for example, HUP, INT, QUIT, TERM. Impl=
ementations may permit
names with the SIG prefix or ignore case in signal names as an extension. S=
etting a trap for SIGKILL or SIGSTOP produces undefined
results.</p>

<p>The environment in which the shell executes a <a href=3D"http://pubs.ope=
ngroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#trap"><i>trap</i>=
</a> on EXIT shall be identical to the environment
immediately after the last command executed before the <a href=3D"http://pu=
bs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#trap"><i>tr=
ap</i></a> on EXIT was taken.</p>

<p>Each time <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/uti=
lities/V3_chap02.html#trap"><i>trap</i></a> is invoked, the <i>action</i> a=
rgument shall be processed in a manner equivalent
to:</p>

<pre><tt>eval</tt> <i>action</i>
</pre>

<p>Signals that were ignored on entry to a non-interactive shell cannot be =
trapped or reset, although no error need be reported
when attempting to do so. An interactive shell may reset or catch signals i=
gnored on entry. Traps shall remain in place for a given
shell until explicitly changed with another <a href=3D"http://pubs.opengrou=
p.org/onlinepubs/9699919799/utilities/V3_chap02.html#trap"><i>trap</i></a> =
command.</p>

<p>When a subshell is entered, traps that are not being ignored shall be se=
t to the default actions, except in the case of a
command substitution containing only a single <a href=3D"http://pubs.opengr=
oup.org/onlinepubs/9699919799/utilities/V3_chap02.html#trap"><i>trap</i></a=
> command, when the traps need not be altered.
Implementations may check for this case using only lexical analysis; for ex=
ample, if <tt>`trap`</tt> and <tt>$( trap -- )</tt> do not alter the traps =
in the subshell,
cases such as assigning <tt>var=3Dtrap</tt> and then using <tt>$($var)</tt>=
 may still alter them. This does not imply that the <a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#trap"><i>trap<=
/i></a> command
cannot be used within the subshell to set new traps.</p>

<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#trap"><i>trap</i></a> command with no operands shall write =
to standard output a list of commands associated with
each condition. If the command is executed in a subshell, the implementatio=
n does not perform the optional check described above
for a command substitution containing only a single <a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#trap"><i>trap<=
/i></a> command, and no <a href=3D"http://pubs.opengroup.org/onlinepubs/969=
9919799/utilities/V3_chap02.html#trap"><i>trap</i></a>
commands with operands have been executed since entry to the subshell, the =
list shall contain the commands that were associated
with each condition immediately before the subshell environment was entered=
. Otherwise, the list shall contain the commands
currently associated with each condition. The format shall be:</p>

<pre><tt>"trap -- %s %s ...\n", &lt;</tt><i>action</i><tt>&gt;, &lt;</tt><i=
>condition</i><tt>&gt; ...
</tt>
</pre>

<p>The shell shall format the output, including the proper use of quoting, =
so that it is suitable for reinput to the shell as
commands that achieve the same trapping results. For example:</p>

<pre><tt>save_traps=3D$(trap)
...
eval "$save_traps"
</tt>
</pre>

<p><sup>[<a href=3D"javascript:open_code('XSI')">XSI</a>]</sup> <img src=3D=
"http://pubs.opengroup.org/onlinepubs/9699919799/images/opt-start.gif" alt=
=3D"[Option Start]" border=3D"0">
XSI-conformant systems also allow numeric signal numbers for the conditions=
 corresponding to the following signal names:</p>

<dl compact=3D"">
<dt>1</dt>

<dd>SIGHUP</dd>

<dt>2</dt>

<dd>SIGINT</dd>

<dt>3</dt>

<dd>SIGQUIT</dd>

<dt>6</dt>

<dd>SIGABRT</dd>

<dt>9</dt>

<dd>SIGKILL</dd>

<dt>14</dt>

<dd>SIGALRM</dd>

<dt>15</dt>

<dd>SIGTERM</dd>
</dl>

<img src=3D"http://pubs.opengroup.org/onlinepubs/9699919799/images/opt-end.=
gif" alt=3D"[Option End]" border=3D"0">=20

<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#trap"><i>trap</i></a> special built-in shall conform to XBD=
 <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_cha=
p12.html#tag_12_02"><i>Utility Syntax Guidelines</i></a>.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_04"></a>OPTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_10"></a>STDOUT</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_14"></a>EXIT STATUS</h4>

<blockquote>
<p>If the trap name <sup>[<a href=3D"javascript:open_code('XSI')">XSI</a>]<=
/sup> <img src=3D"http://pubs.opengroup.org/onlinepubs/9699919799/images/op=
t-start.gif" alt=3D"[Option Start]" border=3D"0"> &nbsp;or number <img src=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/images/opt-end.gif" alt=
=3D"[Option End]" border=3D"0"> is invalid, a non-zero
exit status shall be returned; otherwise, zero shall be returned. For both =
interactive and non-interactive shells, invalid signal
names <sup>[<a href=3D"javascript:open_code('XSI')">XSI</a>]</sup> <img src=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/images/opt-start.gif" a=
lt=3D"[Option Start]" border=3D"0"> &nbsp;or numbers <img src=3D"http://pub=
s.opengroup.org/onlinepubs/9699919799/images/opt-end.gif" alt=3D"[Option En=
d]" border=3D"0"> shall not be considered a syntax error and do
not cause the shell to abort.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_28_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_17"></a>EXAMPLES</h4>

<blockquote>
<p>Write out a list of all traps and actions:</p>

<pre><tt>trap
</tt>
</pre>

<p>Set a trap so the <i>logout</i> utility in the directory referred to by =
the <i>HOME</i> environment variable executes when the
shell terminates:</p>

<pre><tt>trap '"$HOME"/logout' EXIT
</tt>
</pre>

<p>or:</p>

<pre><tt>trap '"$HOME"/logout' 0
</tt>
</pre>

<p>Unset traps on INT, QUIT, TERM, and EXIT:</p>

<pre><tt>trap - INT QUIT TERM EXIT
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_18"></a>RATIONALE</h4>

<blockquote>
<p>Implementations may permit lowercase signal names as an extension. Imple=
mentations may also accept the names with the SIG
prefix; no known historical shell does so. The <a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap02.html#trap"><i>trap</i></=
a> and <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/kill.html"><i>kill</i></a>
utilities in this volume of POSIX.1-2008 are now consistent in their omissi=
on of the SIG prefix for signal names. Some <a href=3D"http://pubs.opengrou=
p.org/onlinepubs/9699919799/utilities/kill.html"><i>kill</i></a> implementa=
tions do not allow the prefix, and <a href=3D"http://pubs.opengroup.org/onl=
inepubs/9699919799/utilities/kill.html"><i>kill</i></a> <b>-l</b> lists the=
 signals without prefixes.</p>

<p>Trapping SIGKILL or SIGSTOP is syntactically accepted by some historical=
 implementations, but it has no effect. Portable POSIX
applications cannot attempt to trap these signals.</p>

<p>The output format is not historical practice. Since the output of histor=
ical <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V=
3_chap02.html#trap"><i>trap</i></a> commands is not
portable (because numeric signal values are not portable) and had to change=
 to become so, an opportunity was taken to format the
output in a way that a shell script could use to save and then later reuse =
a trap if it wanted.</p>

<p>The KornShell uses an <b>ERR</b> trap that is triggered whenever <a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.htm=
l#set"><i>set</i></a> <b>-e</b> would cause an exit.
This is allowable as an extension, but was not mandated, as other shells ha=
ve not used it.</p>

<p>The text about the environment for the EXIT trap invalidates the behavio=
r of some historical versions of interactive shells
which, for example, close the standard input before executing a trap on 0. =
For example, in some historical interactive shell
sessions the following trap on 0 would always print <tt>"--"</tt> :</p>

<pre><tt>trap 'read foo; echo "-$foo-"' 0
</tt>
</pre>

<p>The command:</p>

<pre><tt>trap 'eval " $cmd"' 0
</tt>
</pre>

<p>causes the contents of the shell variable <i>cmd</i> to be executed as a=
 command when the shell exits. Using:</p>

<pre><tt>trap '$cmd' 0
</tt>
</pre>

<p>does not work correctly if <i>cmd</i> contains any special characters su=
ch as quoting or redirections. Using:</p>

<pre><tt>trap " $cmd" 0
</tt>
</pre>

<p>also works (the leading &lt;space&gt; character protects against unlikel=
y cases where <i>cmd</i> is a decimal integer or begins
with <tt>'-'</tt> ), but it expands the <i>cmd</i> variable when the <a hre=
f=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.ht=
ml#trap"><i>trap</i></a> command is executed, not when
the exit action is executed.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>

<p>XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/=
V1_chap12.html#tag_12_02"><i>Utility Syntax Guidelines</i></a>, <a href=3D"=
http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/signal.h.html"><i>=
&lt;signal.h&gt;</i></a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_28_22"></a>Issue 6</h4>

<blockquote>
<p>XSI-conforming implementations provide the mapping of signal names to nu=
mbers given above (previously this had been marked
obsolescent). Other implementations need not provide this optional mapping.=
</p>

<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_28_23"></a>Issue 7</h4>

<blockquote>
<p>SD5-XCU-ERN-97 is applied, updating the SYNOPSIS.</p>

<p>Austin Group Interpretation 1003.1-2001 #116 is applied.</p>

<p>POSIX.1-2008, Technical Corrigendum 1, XCU/TC1-2008/0052 [53,268,440], X=
CU/TC1-2008/0053 [53,268,440], XCU/TC1-2008/0054 [163],
XCU/TC1-2008/0055 [163], and XCU/TC1-2008/0056 [163] are applied.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>
<div class=3D"NAVHEADER">
<table summary=3D"Header navigation table" width=3D"100%" border=3D"0" cell=
padding=3D"0" cellspacing=3D"0">
<tbody><tr>
<td width=3D"15%" align=3D"left" valign=3D"bottom"><a href=3D"http://pubs.o=
pengroup.org/onlinepubs/9699919799/utilities/V3_chap01.html" accesskey=3D"P=
">&lt;&lt;&lt; Previous</a></td>
<td width=3D"70%" align=3D"center" valign=3D"bottom"><a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/utilities/contents.html">Home</a></td>
<td width=3D"15%" align=3D"right" valign=3D"bottom"><a href=3D"http://pubs.=
opengroup.org/onlinepubs/9699919799/utilities/V3_chap03.html" accesskey=3D"=
N">Next &gt;&gt;&gt;</a></td>
</tr>
</tbody></table>

<hr align=3D"LEFT" width=3D"100%">
</div>



<basefont size=3D"3"> <a name=3D"unset"></a> <a name=3D"tag_18_29"></a><!--=
 unset -->
=20

<h4 class=3D"mansect"><a name=3D"tag_18_29_01"></a>NAME</h4>

<blockquote>unset - unset values and attributes of variables and functions<=
/blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_02"></a>SYNOPSIS</h4>

<blockquote class=3D"synopsis">
<p><code><tt>unset</tt> <b>[</b><tt>-fv</tt><b>]</b> <i>name</i><tt>...</tt=
></code></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_03"></a>DESCRIPTION</h4>

<blockquote>
<p>Each variable or function specified by <i>name</i> shall be unset.</p>

<p>If <b>-v</b> is specified, <i>name</i> refers to a variable name and the=
 shell shall unset it and remove it from the
environment. Read-only variables cannot be unset.</p>

<p>If <b>-f</b> is specified, <i>name</i> refers to a function and the shel=
l shall unset the function definition.</p>

<p>If neither <b>-f</b> nor <b>-v</b> is specified, <i>name</i> refers to a=
 variable; if a variable by that name does not exist, it
is unspecified whether a function by that name, if any, shall be unset.</p>

<p>Unsetting a variable or function that was not previously set shall not b=
e considered an error and does not cause the shell to
abort.</p>

<p>The <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities=
/V3_chap02.html#unset"><i>unset</i></a> special built-in shall support XBD =
<a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap=
12.html#tag_12_02"><i>Utility Syntax Guidelines</i></a>.</p>

<p>Note that:</p>

<pre><tt>VARIABLE=3D
</tt>
</pre>

<p>is not equivalent to an <a href=3D"http://pubs.opengroup.org/onlinepubs/=
9699919799/utilities/V3_chap02.html#unset"><i>unset</i></a> of <b>VARIABLE<=
/b>; in the example, <b>VARIABLE</b> is set to
<tt>""</tt>. Also, the variables that can be <a href=3D"http://pubs.opengro=
up.org/onlinepubs/9699919799/utilities/V3_chap02.html#unset"><i>unset</i></=
a> should not be misinterpreted to include the special
parameters (see <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/=
utilities/V3_chap02.html#tag_18_05_02">Special Parameters</a>).</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_04"></a>OPTIONS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_05"></a>OPERANDS</h4>

<blockquote>
<p>See the DESCRIPTION.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_06"></a>STDIN</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_07"></a>INPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_08"></a>ENVIRONMENT VARIABLES</h=
4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_09"></a>ASYNCHRONOUS EVENTS</h4>

<blockquote>
<p>Default.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_10"></a>STDOUT</h4>

<blockquote>
<p>Not used.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_11"></a>STDERR</h4>

<blockquote>
<p>The standard error shall be used only for diagnostic messages.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_12"></a>OUTPUT FILES</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_13"></a>EXTENDED DESCRIPTION</h4=
>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_14"></a>EXIT STATUS</h4>

<blockquote>
<dl compact=3D"">
<dt>&nbsp;0</dt>

<dd>All <i>name</i> operands were successfully unset.</dd>

<dt>&gt;0</dt>

<dd>At least one <i>name</i> could not be unset.</dd>
</dl>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_15"></a>CONSEQUENCES OF ERRORS</=
h4>

<blockquote>
<p>Default.</p>
</blockquote>

<hr>
<div class=3D"box"><em>The following sections are informative.</em></div>

<h4 class=3D"mansect"><a name=3D"tag_18_29_16"></a>APPLICATION USAGE</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_17"></a>EXAMPLES</h4>

<blockquote>
<p>Unset <i>VISUAL</i> variable:</p>

<pre><tt>unset -v VISUAL
</tt>
</pre>

<p>Unset the functions <b>foo</b> and <b>bar</b>:</p>

<pre><tt>unset -f foo bar
</tt>
</pre>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_18"></a>RATIONALE</h4>

<blockquote>
<p>Consideration was given to omitting the <b>-f</b> option in favor of an =
<i>unfunction</i> utility, but the standard developers
decided to retain historical practice.</p>

<p>The <b>-v</b> option was introduced because System V historically used o=
ne name space for both variables and functions. When <a href=3D"http://pubs=
.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#unset"><i>uns=
et</i></a> is used without options, System V historically unset either a fu=
nction or a variable, and there was
no confusion about which one was intended. A portable POSIX application can=
 use <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V=
3_chap02.html#unset"><i>unset</i></a> without an option
to unset a variable, but not a function; the <b>-f</b> option must be used.=
</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_19"></a>FUTURE DIRECTIONS</h4>

<blockquote>
<p>None.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_20"></a>SEE ALSO</h4>

<blockquote>
<p><a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_=
chap02.html#tag_18_14">Special Built-In Utilities</a></p>

<p>XBD <a href=3D"http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/=
V1_chap12.html#tag_12_02"><i>Utility Syntax Guidelines</i></a></p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_21"></a>CHANGE HISTORY</h4>

<h4 class=3D"mansect"><a name=3D"tag_18_29_22"></a>Issue 6</h4>

<blockquote>
<p>IEEE&nbsp;Std&nbsp;1003.1-2001/Cor&nbsp;1-2002, item XCU/TC1/D6/5 is app=
lied so that the reference page sections use terms as
described in the Utility Description Defaults (<a href=3D"http://pubs.openg=
roup.org/onlinepubs/9699919799/utilities/V3_chap01.html#tag_17_04"><i>Utili=
ty Description
Defaults</i></a>). No change in behavior is intended.</p>
</blockquote>

<h4 class=3D"mansect"><a name=3D"tag_18_29_23"></a>Issue 7</h4>

<blockquote>
<p>SD5-XCU-ERN-97 is applied, updating the SYNOPSIS.</p>
</blockquote>

<div class=3D"box"><em>End of informative text.</em></div>

<hr>
<div class=3D"NAVHEADER">
<table class=3D"nav" summary=3D"Header navigation table" width=3D"100%" bor=
der=3D"0" cellpadding=3D"0" cellspacing=3D"0">
<tbody><tr class=3D"nav">
<td class=3D"nav" width=3D"15%" align=3D"left" valign=3D"bottom"><a href=3D=
"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap01.html" =
accesskey=3D"P">&lt;&lt;&lt; Previous</a></td>
<td class=3D"nav" width=3D"70%" align=3D"center" valign=3D"bottom"><a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/contents.html=
">Home</a></td>
<td class=3D"nav" width=3D"15%" align=3D"right" valign=3D"bottom"><a href=
=3D"http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap03.htm=
l" accesskey=3D"N">Next &gt;&gt;&gt;</a></td>
</tr>
</tbody></table>

<hr align=3D"LEFT" width=3D"100%">
</div>



</body></html>
------=_NextPart_000_E46C_534BFE78.20165F69
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://pubs.opengroup.org/onlinepubs/9699919799/images/up-arrow.gif

R0lGODlhDAANAKIAAK2trf///9jY2MjIyO7u7rOzs/n5+QAAACH5BAAAAAAALAAAAAAMAA0AAAM6
GEoyI0QpM4C9w6h6+whCVxRdcxUEQVocMEQB01mQIoTWCgj2ie89mmHFA+U0KqARJSE8bC+JdKpI
AAA7
------=_NextPart_000_E46C_534BFE78.20165F69
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pubs.opengroup.org/onlinepubs/9699919799/utilities/style.css

a:link { color: rgb(0, 0, 255); }

a:visited { color: rgb(102, 102, 255); }

a:active { color: rgb(102, 102, 255); }

a:hover { color: rgb(255, 0, 0); text-decoration: underline; }

h1 { font-family: Arial, Helvetica, sans-serif; color: rgb(0, 102, 0); font=
-size: 20pt; background-color: white; }

h2 { font-family: Arial, Helvetica, sans-serif; color: rgb(0, 102, 0); font=
-size: 15pt; background-color: white; }

h3 { font-family: Arial, Helvetica, sans-serif; color: rgb(0, 102, 0); font=
-size: 14pt; background-color: white; }

h4 { font-family: Arial, Helvetica, sans-serif; color: rgb(0, 102, 0); font=
-style: italic; font-size: 12pt; background-color: white; }

h5 { font-family: Arial, Helvetica, sans-serif; color: rgb(0, 102, 0); font=
-size: 11pt; background-color: white; }

h6 { font-family: Arial, Helvetica, sans-serif; color: rgb(0, 102, 102); fo=
nt-size: 10pt; font-weight: bold; background-color: white; }

body { font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt;=
 margin-left: 3pt; margin-top: 2pt; color: rgb(0, 0, 0); background-color: =
white; }

blockquote.synopsis { font-size: 11pt; font-family: Verdana, Arial, Helveti=
ca, sans-serif; }

blockquote.body { font-size: 10pt; margin-bottom: 0pt; margin-left: 0pt; ma=
rgin-top: 0pt; font-family: Verdana, Arial, Helvetica, sans-serif; text-ind=
ent: 10px; }

table { font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt=
; color: rgb(0, 0, 0); background-color: white; }

p.tent { font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10p=
t; }

ul { font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt; c=
olor: rgb(0, 0, 0); }

li { font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt; c=
olor: rgb(0, 0, 0); }

hr { color: rgb(0, 153, 0); }

div.box { border: thin none; font-size: 11pt; background: rgb(204, 204, 255=
); }

pre { font-size: 11pt; }

pre { font-family: monospace; }

.topofpage { font-family: Arial, Helvetica, sans-serif; font-size: 10px; co=
lor: rgb(51, 51, 51); padding-left: 15px; background-image: url("../images/=
up-arrow.gif"); background-repeat: no-repeat; }

.youarehere { font-family: Arial, Helvetica, sans-serif; font-size: 11px; c=
olor: rgb(0, 0, 0); border-bottom-width: 1px; border-bottom-style: solid; b=
order-bottom-color: rgb(72, 140, 175); font-weight: bold; }

.breadcrumb { font-family: Arial, Helvetica, sans-serif; font-size: 12px; f=
ont-weight: bold; color: rgb(102, 102, 102); }

.breadcrumb a:link { color: rgb(102, 102, 102); text-decoration: none; }

.breadcrumb a:visited { color: rgb(0, 95, 108); text-decoration: none; }

.breadcrumb a:hover { color: rgb(72, 140, 175); text-decoration: none; }

.breadcrumb a:active { color: rgb(102, 102, 102); text-decoration: none; }

table.nav { width: 100%; }

table { border-collapse: collapse; width: 85%; }

tr.nav, td.nav { border: none; }

#tr { border-bottom-width: 1px; border-bottom-style: solid; }

th { text-align: center; }
------=_NextPart_000_E46C_534BFE78.20165F69
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://pubs.opengroup.org/onlinepubs/9699919799/images/opt-start.gif

R0lGODlhDwALAIAAAAAAAPj8+CH5BAEAAAEALAAAAAAPAAsAQAIcjI8ZoMcOH1zNSGrxrA34DyaP
RG4awowbCbZIAQA7
------=_NextPart_000_E46C_534BFE78.20165F69
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://pubs.opengroup.org/onlinepubs/9699919799/images/opt-end.gif

R0lGODlhDgAJAIAAAAAAAPj8+CH5BAEAAAEALAAAAAAOAAkAQAIYjAOpe7gP2onTUFSx3vReiX1h
JUZeBiIFADs=
------=_NextPart_000_E46C_534BFE78.20165F69--
